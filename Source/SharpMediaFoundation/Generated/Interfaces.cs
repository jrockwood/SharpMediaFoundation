// <auto-generated/>

namespace SharpMediaFoundation
{
    [System.Runtime.InteropServices.GuidAttribute("ac6b7889-0740-4d51-8619-905994a55cc6")]
    public partial class AsyncResult : SharpGen.Runtime.ComObject
    {
        public AsyncResult(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator AsyncResult(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new AsyncResult(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "unkStateOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAsyncResult::GetState([Out] IUnknown** ppunkState)</unmanaged>
        /// <unmanaged-short>IMFAsyncResult::GetState</unmanaged-short>
        internal unsafe void GetState(out System.IntPtr unkStateOut)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *unkStateOut_ = &unkStateOut)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, unkStateOut_, (*(void ***)this._nativePointer)[3]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAsyncResult::GetStatus()</unmanaged>
        /// <unmanaged-short>IMFAsyncResult::GetStatus</unmanaged-short>
        internal unsafe SharpGen.Runtime.Result GetStatus()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[4]);
            return __result__;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "hrStatus">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAsyncResult::SetStatus([In] HRESULT hrStatus)</unmanaged>
        /// <unmanaged-short>IMFAsyncResult::SetStatus</unmanaged-short>
        internal unsafe void SetStatus(SharpGen.Runtime.Result hrStatus)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint0(this._nativePointer, hrStatus, (*(void ***)this._nativePointer)[5]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "objectOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAsyncResult::GetObjectW([Out] IUnknown** ppObject)</unmanaged>
        /// <unmanaged-short>IMFAsyncResult::GetObjectW</unmanaged-short>
        internal unsafe void GetObject(out SharpGen.Runtime.IUnknown objectOut)
        {
            System.IntPtr objectOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &objectOut_, (*(void ***)this._nativePointer)[6]);
            if (objectOut_ != System.IntPtr.Zero)
                objectOut = new SharpGen.Runtime.ComObject(objectOut_);
            else
                objectOut = null;
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>IUnknown* IMFAsyncResult::GetStateNoAddRef()</unmanaged>
        /// <unmanaged-short>IMFAsyncResult::GetStateNoAddRef</unmanaged-short>
        internal unsafe SharpGen.Runtime.ComObject GetStateNoAddRef()
        {
            SharpGen.Runtime.ComObject __result__;
            System.IntPtr __result__native = System.IntPtr.Zero;
            __result__native = SharpMediaFoundation.LocalInterop.CalliStdCallSystemIntPtr(this._nativePointer, (*(void ***)this._nativePointer)[7]);
            if (__result__native != System.IntPtr.Zero)
                __result__ = new SharpGen.Runtime.ComObject(__result__native);
            else
                __result__ = null;
            return __result__;
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("76B1BBDB-4EC8-4f36-B106-70A9316DF593")]
    public partial class AudioStreamVolume : SharpGen.Runtime.ComObject
    {
        public AudioStreamVolume(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator AudioStreamVolume(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new AudioStreamVolume(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetChannelCount</unmanaged>
        /// <unmanaged-short>GetChannelCount</unmanaged-short>
        public System.Int32 ChannelCount
        {
            get
            {
                GetChannelCount(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "countRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAudioStreamVolume::GetChannelCount([Out] UINT32* pdwCount)</unmanaged>
        /// <unmanaged-short>IMFAudioStreamVolume::GetChannelCount</unmanaged-short>
        internal unsafe void GetChannelCount(out System.Int32 countRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *countRef_ = &countRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, countRef_, (*(void ***)this._nativePointer)[3]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "index">No documentation.</param>
        /// <param name = "level">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAudioStreamVolume::SetChannelVolume([In] UINT32 dwIndex,[In] const float fLevel)</unmanaged>
        /// <unmanaged-short>IMFAudioStreamVolume::SetChannelVolume</unmanaged-short>
        public unsafe void SetChannelVolume(System.Int32 index, System.Single level)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, index, level, (*(void ***)this._nativePointer)[4]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "index">No documentation.</param>
        /// <param name = "levelRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAudioStreamVolume::GetChannelVolume([In] UINT32 dwIndex,[Out] float* pfLevel)</unmanaged>
        /// <unmanaged-short>IMFAudioStreamVolume::GetChannelVolume</unmanaged-short>
        public unsafe void GetChannelVolume(System.Int32 index, out System.Single levelRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *levelRef_ = &levelRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, index, levelRef_, (*(void ***)this._nativePointer)[5]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "count">No documentation.</param>
        /// <param name = "volumesRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAudioStreamVolume::SetAllVolumes([In] UINT32 dwCount,[In, Buffer] const float* pfVolumes)</unmanaged>
        /// <unmanaged-short>IMFAudioStreamVolume::SetAllVolumes</unmanaged-short>
        public unsafe void SetAllVolumes(System.Int32 count, System.Single[] volumesRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *volumesRef_ = volumesRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, count, volumesRef_, (*(void ***)this._nativePointer)[6]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "count">No documentation.</param>
        /// <param name = "volumesRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAudioStreamVolume::GetAllVolumes([In] UINT32 dwCount,[Out, Buffer] float* pfVolumes)</unmanaged>
        /// <unmanaged-short>IMFAudioStreamVolume::GetAllVolumes</unmanaged-short>
        public unsafe void GetAllVolumes(System.Int32 count, System.Single[] volumesRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *volumesRef_ = volumesRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, count, volumesRef_, (*(void ***)this._nativePointer)[7]);
            __result__.CheckError();
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("ad4c1b00-4bf7-422f-9175-756693d9130d")]
    public partial class ByteStream : SharpGen.Runtime.ComObject, SharpMediaFoundation.IByteStream
    {
        public ByteStream(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator ByteStream(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new ByteStream(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetCapabilities</unmanaged>
        /// <unmanaged-short>GetCapabilities</unmanaged-short>
        public System.Int32 Capabilities_
        {
            get
            {
                GetCapabilities_(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetLength / SetLength</unmanaged>
        /// <unmanaged-short>GetLength</unmanaged-short>
        public System.UInt64 Length_
        {
            get
            {
                GetLength_(out var __output__);
                return __output__;
            }

            set => SetLength_(value);
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetCurrentPosition / SetCurrentPosition</unmanaged>
        /// <unmanaged-short>GetCurrentPosition</unmanaged-short>
        public System.UInt64 CurrentPosition_
        {
            get
            {
                GetCurrentPosition_(out var __output__);
                return __output__;
            }

            set => SetCurrentPosition_(value);
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>IsEndOfStream</unmanaged>
        /// <unmanaged-short>IsEndOfStream</unmanaged-short>
        public SharpGen.Runtime.Win32.RawBool IsEndOfStream_
        {
            get
            {
                IsEndOfStream__(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "capabilitiesRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFByteStream::GetCapabilities([Out] DWORD* pdwCapabilities)</unmanaged>
        /// <unmanaged-short>IMFByteStream::GetCapabilities</unmanaged-short>
        internal unsafe void GetCapabilities_(out System.Int32 capabilitiesRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *capabilitiesRef_ = &capabilitiesRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, capabilitiesRef_, (*(void ***)this._nativePointer)[3]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "qwLengthRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFByteStream::GetLength([Out] unsigned longlong* pqwLength)</unmanaged>
        /// <unmanaged-short>IMFByteStream::GetLength</unmanaged-short>
        internal unsafe void GetLength_(out System.UInt64 qwLengthRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *qwLengthRef_ = &qwLengthRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, qwLengthRef_, (*(void ***)this._nativePointer)[4]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "qwLength">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFByteStream::SetLength([In] unsigned longlong qwLength)</unmanaged>
        /// <unmanaged-short>IMFByteStream::SetLength</unmanaged-short>
        internal unsafe void SetLength_(System.UInt64 qwLength)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, qwLength, (*(void ***)this._nativePointer)[5]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "qwPositionRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFByteStream::GetCurrentPosition([Out] unsigned longlong* pqwPosition)</unmanaged>
        /// <unmanaged-short>IMFByteStream::GetCurrentPosition</unmanaged-short>
        internal unsafe void GetCurrentPosition_(out System.UInt64 qwPositionRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *qwPositionRef_ = &qwPositionRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, qwPositionRef_, (*(void ***)this._nativePointer)[6]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "qwPosition">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFByteStream::SetCurrentPosition([In] unsigned longlong qwPosition)</unmanaged>
        /// <unmanaged-short>IMFByteStream::SetCurrentPosition</unmanaged-short>
        internal unsafe void SetCurrentPosition_(System.UInt64 qwPosition)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, qwPosition, (*(void ***)this._nativePointer)[7]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "endOfStreamRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFByteStream::IsEndOfStream([Out] BOOL* pfEndOfStream)</unmanaged>
        /// <unmanaged-short>IMFByteStream::IsEndOfStream</unmanaged-short>
        internal unsafe void IsEndOfStream__(out SharpGen.Runtime.Win32.RawBool endOfStreamRef)
        {
            endOfStreamRef = default (SharpGen.Runtime.Win32.RawBool);
            SharpGen.Runtime.Result __result__;
            fixed (void *endOfStreamRef_ = &endOfStreamRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, endOfStreamRef_, (*(void ***)this._nativePointer)[8]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bRef">No documentation.</param>
        /// <param name = "cb">No documentation.</param>
        /// <param name = "cbReadRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFByteStream::Read([In] unsigned char* pb,[In] ULONG cb,[Out] ULONG* pcbRead)</unmanaged>
        /// <unmanaged-short>IMFByteStream::Read</unmanaged-short>
        internal unsafe void Read_(System.IntPtr bRef, System.UInt32 cb, out System.UInt32 cbReadRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *cbReadRef_ = &cbReadRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)bRef, cb, cbReadRef_, (*(void ***)this._nativePointer)[9]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bRef">No documentation.</param>
        /// <param name = "cb">No documentation.</param>
        /// <param name = "callbackRef">No documentation.</param>
        /// <param name = "unkStateRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFByteStream::BeginRead([In] unsigned char* pb,[In] ULONG cb,[In] IMFAsyncCallback* pCallback,[In] IUnknown* punkState)</unmanaged>
        /// <unmanaged-short>IMFByteStream::BeginRead</unmanaged-short>
        internal unsafe void BeginRead_(System.IntPtr bRef, System.UInt32 cb, SharpMediaFoundation.IAsyncCallback callbackRef, System.IntPtr unkStateRef)
        {
            System.IntPtr callbackRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            callbackRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.IAsyncCallback>(callbackRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)bRef, cb, (void *)callbackRef_, (void *)unkStateRef, (*(void ***)this._nativePointer)[10]);
            System.GC.KeepAlive(callbackRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "resultRef">No documentation.</param>
        /// <param name = "cbReadRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFByteStream::EndRead([In] IMFAsyncResult* pResult,[Out] ULONG* pcbRead)</unmanaged>
        /// <unmanaged-short>IMFByteStream::EndRead</unmanaged-short>
        internal unsafe void EndRead_(SharpMediaFoundation.AsyncResult resultRef, out System.UInt32 cbReadRef)
        {
            System.IntPtr resultRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            resultRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.AsyncResult>(resultRef);
            fixed (void *cbReadRef_ = &cbReadRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)resultRef_, cbReadRef_, (*(void ***)this._nativePointer)[11]);
            System.GC.KeepAlive(resultRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bRef">No documentation.</param>
        /// <param name = "cb">No documentation.</param>
        /// <param name = "cbWrittenRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFByteStream::Write([In] const unsigned char* pb,[In] ULONG cb,[Out] ULONG* pcbWritten)</unmanaged>
        /// <unmanaged-short>IMFByteStream::Write</unmanaged-short>
        internal unsafe void Write_(System.IntPtr bRef, System.UInt32 cb, out System.UInt32 cbWrittenRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *cbWrittenRef_ = &cbWrittenRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)bRef, cb, cbWrittenRef_, (*(void ***)this._nativePointer)[12]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bRef">No documentation.</param>
        /// <param name = "cb">No documentation.</param>
        /// <param name = "callbackRef">No documentation.</param>
        /// <param name = "unkStateRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFByteStream::BeginWrite([In] const unsigned char* pb,[In] ULONG cb,[In] IMFAsyncCallback* pCallback,[In] IUnknown* punkState)</unmanaged>
        /// <unmanaged-short>IMFByteStream::BeginWrite</unmanaged-short>
        internal unsafe void BeginWrite_(System.IntPtr bRef, System.UInt32 cb, SharpMediaFoundation.IAsyncCallback callbackRef, System.IntPtr unkStateRef)
        {
            System.IntPtr callbackRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            callbackRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.IAsyncCallback>(callbackRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)bRef, cb, (void *)callbackRef_, (void *)unkStateRef, (*(void ***)this._nativePointer)[13]);
            System.GC.KeepAlive(callbackRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "resultRef">No documentation.</param>
        /// <param name = "cbWrittenRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFByteStream::EndWrite([In] IMFAsyncResult* pResult,[Out] ULONG* pcbWritten)</unmanaged>
        /// <unmanaged-short>IMFByteStream::EndWrite</unmanaged-short>
        internal unsafe void EndWrite_(SharpMediaFoundation.AsyncResult resultRef, out System.UInt32 cbWrittenRef)
        {
            System.IntPtr resultRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            resultRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.AsyncResult>(resultRef);
            fixed (void *cbWrittenRef_ = &cbWrittenRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)resultRef_, cbWrittenRef_, (*(void ***)this._nativePointer)[14]);
            System.GC.KeepAlive(resultRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "seekOrigin">No documentation.</param>
        /// <param name = "llSeekOffset">No documentation.</param>
        /// <param name = "seekFlags">No documentation.</param>
        /// <param name = "qwCurrentPositionRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFByteStream::Seek([In] MFBYTESTREAM_SEEK_ORIGIN SeekOrigin,[In] longlong llSeekOffset,[In] DWORD dwSeekFlags,[Out] unsigned longlong* pqwCurrentPosition)</unmanaged>
        /// <unmanaged-short>IMFByteStream::Seek</unmanaged-short>
        internal unsafe void Seek_(SharpMediaFoundation.ByteStreamSeekOrigin seekOrigin, System.Int64 llSeekOffset, SharpMediaFoundation.ByteStreamSeekFlags seekFlags, out System.UInt64 qwCurrentPositionRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *qwCurrentPositionRef_ = &qwCurrentPositionRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, unchecked ((System.Int32)seekOrigin), llSeekOffset, unchecked ((System.Int32)seekFlags), qwCurrentPositionRef_, (*(void ***)this._nativePointer)[15]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFByteStream::Flush()</unmanaged>
        /// <unmanaged-short>IMFByteStream::Flush</unmanaged-short>
        internal unsafe void Flush_()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[16]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFByteStream::Close()</unmanaged>
        /// <unmanaged-short>IMFByteStream::Close</unmanaged-short>
        internal unsafe void Close_()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[17]);
            __result__.CheckError();
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("2eb1e945-18b8-4139-9b1a-d5d584818530")]
    public partial class Clock : SharpGen.Runtime.ComObject
    {
        public Clock(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator Clock(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new Clock(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetClockCharacteristics</unmanaged>
        /// <unmanaged-short>GetClockCharacteristics</unmanaged-short>
        public System.Int32 ClockCharacteristics
        {
            get
            {
                GetClockCharacteristics(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetContinuityKey</unmanaged>
        /// <unmanaged-short>GetContinuityKey</unmanaged-short>
        public System.Int32 ContinuityKey
        {
            get
            {
                GetContinuityKey(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetProperties</unmanaged>
        /// <unmanaged-short>GetProperties</unmanaged-short>
        public SharpMediaFoundation.ClockProperties Properties
        {
            get
            {
                GetProperties(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "characteristicsRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFClock::GetClockCharacteristics([Out] DWORD* pdwCharacteristics)</unmanaged>
        /// <unmanaged-short>IMFClock::GetClockCharacteristics</unmanaged-short>
        internal unsafe void GetClockCharacteristics(out System.Int32 characteristicsRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *characteristicsRef_ = &characteristicsRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, characteristicsRef_, (*(void ***)this._nativePointer)[3]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "reserved">No documentation.</param>
        /// <param name = "llClockTimeRef">No documentation.</param>
        /// <param name = "hnsSystemTimeRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFClock::GetCorrelatedTime([In] DWORD dwReserved,[Out] longlong* pllClockTime,[Out] longlong* phnsSystemTime)</unmanaged>
        /// <unmanaged-short>IMFClock::GetCorrelatedTime</unmanaged-short>
        public unsafe void GetCorrelatedTime(System.Int32 reserved, out System.Int64 llClockTimeRef, out System.Int64 hnsSystemTimeRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *hnsSystemTimeRef_ = &hnsSystemTimeRef)
                fixed (void *llClockTimeRef_ = &llClockTimeRef)
                    __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, reserved, llClockTimeRef_, hnsSystemTimeRef_, (*(void ***)this._nativePointer)[4]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "continuityKeyRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFClock::GetContinuityKey([Out] DWORD* pdwContinuityKey)</unmanaged>
        /// <unmanaged-short>IMFClock::GetContinuityKey</unmanaged-short>
        internal unsafe void GetContinuityKey(out System.Int32 continuityKeyRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *continuityKeyRef_ = &continuityKeyRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, continuityKeyRef_, (*(void ***)this._nativePointer)[5]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "reserved">No documentation.</param>
        /// <param name = "eClockStateRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFClock::GetState([In] DWORD dwReserved,[Out] MFCLOCK_STATE* peClockState)</unmanaged>
        /// <unmanaged-short>IMFClock::GetState</unmanaged-short>
        public unsafe void GetState(System.Int32 reserved, out SharpMediaFoundation.ClockState eClockStateRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *eClockStateRef_ = &eClockStateRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, reserved, eClockStateRef_, (*(void ***)this._nativePointer)[6]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "clockPropertiesRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFClock::GetProperties([Out] MFCLOCK_PROPERTIES* pClockProperties)</unmanaged>
        /// <unmanaged-short>IMFClock::GetProperties</unmanaged-short>
        internal unsafe void GetProperties(out SharpMediaFoundation.ClockProperties clockPropertiesRef)
        {
            clockPropertiesRef = default (SharpMediaFoundation.ClockProperties);
            SharpGen.Runtime.Result __result__;
            fixed (void *clockPropertiesRef_ = &clockPropertiesRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, clockPropertiesRef_, (*(void ***)this._nativePointer)[7]);
            __result__.CheckError();
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("F6696E82-74F7-4f3d-A178-8A5E09C3659F")]
    public partial interface ClockStateSink : SharpGen.Runtime.IUnknown
    {
    }

    [System.Runtime.InteropServices.GuidAttribute("5BC8A76B-869A-46a3-9B03-FA218A66AEBE")]
    public partial class Collection : SharpGen.Runtime.ComObject
    {
        public Collection(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator Collection(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new Collection(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetElementCount</unmanaged>
        /// <unmanaged-short>GetElementCount</unmanaged-short>
        public System.Int32 ElementCount
        {
            get
            {
                GetElementCount(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "cElementsRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFCollection::GetElementCount([Out] DWORD* pcElements)</unmanaged>
        /// <unmanaged-short>IMFCollection::GetElementCount</unmanaged-short>
        internal unsafe void GetElementCount(out System.Int32 cElementsRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *cElementsRef_ = &cElementsRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, cElementsRef_, (*(void ***)this._nativePointer)[3]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "elementIndex">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFCollection::GetElement([In] DWORD dwElementIndex,[Out] IUnknown** ppUnkElement)</unmanaged>
        /// <unmanaged-short>IMFCollection::GetElement</unmanaged-short>
        public unsafe SharpGen.Runtime.IUnknown GetElement(System.Int32 elementIndex)
        {
            SharpGen.Runtime.IUnknown unkElementOut;
            System.IntPtr unkElementOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, elementIndex, &unkElementOut_, (*(void ***)this._nativePointer)[4]);
            if (unkElementOut_ != System.IntPtr.Zero)
                unkElementOut = new SharpGen.Runtime.ComObject(unkElementOut_);
            else
                unkElementOut = null;
            __result__.CheckError();
            return unkElementOut;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "unkElementRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFCollection::AddElement([In, Optional] IUnknown* pUnkElement)</unmanaged>
        /// <unmanaged-short>IMFCollection::AddElement</unmanaged-short>
        public unsafe void AddElement(SharpGen.Runtime.IUnknown unkElementRef)
        {
            System.IntPtr unkElementRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            unkElementRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.IUnknown>(unkElementRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)unkElementRef_, (*(void ***)this._nativePointer)[5]);
            System.GC.KeepAlive(unkElementRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "elementIndex">No documentation.</param>
        /// <param name = "unkElementOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFCollection::RemoveElement([In] DWORD dwElementIndex,[Out] IUnknown** ppUnkElement)</unmanaged>
        /// <unmanaged-short>IMFCollection::RemoveElement</unmanaged-short>
        public unsafe void RemoveElement(System.Int32 elementIndex, out SharpGen.Runtime.IUnknown unkElementOut)
        {
            System.IntPtr unkElementOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, elementIndex, &unkElementOut_, (*(void ***)this._nativePointer)[6]);
            if (unkElementOut_ != System.IntPtr.Zero)
                unkElementOut = new SharpGen.Runtime.ComObject(unkElementOut_);
            else
                unkElementOut = null;
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "index">No documentation.</param>
        /// <param name = "unknownRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFCollection::InsertElementAt([In] DWORD dwIndex,[In, Optional] IUnknown* pUnknown)</unmanaged>
        /// <unmanaged-short>IMFCollection::InsertElementAt</unmanaged-short>
        public unsafe void InsertElementAt(System.Int32 index, SharpGen.Runtime.IUnknown unknownRef)
        {
            System.IntPtr unknownRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            unknownRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.IUnknown>(unknownRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, index, (void *)unknownRef_, (*(void ***)this._nativePointer)[7]);
            System.GC.KeepAlive(unknownRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFCollection::RemoveAllElements()</unmanaged>
        /// <unmanaged-short>IMFCollection::RemoveAllElements</unmanaged-short>
        public unsafe void RemoveAllElements()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[8]);
            __result__.CheckError();
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("a27003cf-2354-4f2a-8d6a-ab7cff15437e")]
    public partial interface IAsyncCallback : SharpGen.Runtime.IUnknown
    {
    }

    [System.Runtime.InteropServices.GuidAttribute("ad4c1b00-4bf7-422f-9175-756693d9130d")]
    public partial interface IByteStream : SharpGen.Runtime.IUnknown
    {
    }

    [System.Runtime.InteropServices.GuidAttribute("2cd2d921-c447-44a7-a13c-4adabfc247e3")]
    public partial class MediaAttributes : SharpGen.Runtime.ComObject
    {
        public MediaAttributes(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator MediaAttributes(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new MediaAttributes(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetCount</unmanaged>
        /// <unmanaged-short>GetCount</unmanaged-short>
        public System.Int32 Count
        {
            get
            {
                GetCount(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <param name = "valueRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::GetItem([In] const GUID&amp; guidKey,[In] PROPVARIANT* pValue)</unmanaged>
        /// <unmanaged-short>IMFAttributes::GetItem</unmanaged-short>
        internal unsafe void GetItem(System.Guid guidKey, System.IntPtr valueRef)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, (void *)valueRef, (*(void ***)this._nativePointer)[3]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::GetItemType([In] const GUID&amp; guidKey,[Out] MF_ATTRIBUTE_TYPE* pType)</unmanaged>
        /// <unmanaged-short>IMFAttributes::GetItemType</unmanaged-short>
        public unsafe SharpMediaFoundation.AttributeType GetItemType(System.Guid guidKey)
        {
            SharpMediaFoundation.AttributeType typeRef;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, &typeRef, (*(void ***)this._nativePointer)[4]);
            __result__.CheckError();
            return typeRef;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <param name = "value">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::CompareItem([In] const GUID&amp; guidKey,[In] const PROPVARIANT&amp; Value,[Out] BOOL* pbResult)</unmanaged>
        /// <unmanaged-short>IMFAttributes::CompareItem</unmanaged-short>
        internal unsafe SharpGen.Runtime.Win32.RawBool CompareItem(System.Guid guidKey, SharpGen.Runtime.Win32.Variant value)
        {
            SharpGen.Runtime.Win32.RawBool bResultRef;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, &value, &bResultRef, (*(void ***)this._nativePointer)[5]);
            __result__.CheckError();
            return bResultRef;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "theirsRef">No documentation.</param>
        /// <param name = "matchType">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::Compare([In, Optional] IMFAttributes* pTheirs,[In] MF_ATTRIBUTES_MATCH_TYPE MatchType,[Out] BOOL* pbResult)</unmanaged>
        /// <unmanaged-short>IMFAttributes::Compare</unmanaged-short>
        public unsafe SharpGen.Runtime.Win32.RawBool Compare(SharpMediaFoundation.MediaAttributes theirsRef, SharpMediaFoundation.AttributesMatchType matchType)
        {
            System.IntPtr theirsRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Win32.RawBool bResultRef;
            SharpGen.Runtime.Result __result__;
            theirsRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.MediaAttributes>(theirsRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)theirsRef_, unchecked ((System.Int32)matchType), &bResultRef, (*(void ***)this._nativePointer)[6]);
            System.GC.KeepAlive(theirsRef);
            __result__.CheckError();
            return bResultRef;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::GetUINT32([In] const GUID&amp; guidKey,[Out] UINT32* punValue)</unmanaged>
        /// <unmanaged-short>IMFAttributes::GetUINT32</unmanaged-short>
        internal unsafe System.Int32 GetInt(System.Guid guidKey)
        {
            System.Int32 unValueRef;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, &unValueRef, (*(void ***)this._nativePointer)[7]);
            __result__.CheckError();
            return unValueRef;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::GetUINT64([In] const GUID&amp; guidKey,[Out] UINT64* punValue)</unmanaged>
        /// <unmanaged-short>IMFAttributes::GetUINT64</unmanaged-short>
        internal unsafe System.Int64 GetLong(System.Guid guidKey)
        {
            System.Int64 unValueRef;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, &unValueRef, (*(void ***)this._nativePointer)[8]);
            __result__.CheckError();
            return unValueRef;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::GetDouble([In] const GUID&amp; guidKey,[Out] double* pfValue)</unmanaged>
        /// <unmanaged-short>IMFAttributes::GetDouble</unmanaged-short>
        internal unsafe System.Double GetDouble(System.Guid guidKey)
        {
            System.Double valueRef;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, &valueRef, (*(void ***)this._nativePointer)[9]);
            __result__.CheckError();
            return valueRef;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::GetGUID([In] const GUID&amp; guidKey,[Out] GUID* pguidValue)</unmanaged>
        /// <unmanaged-short>IMFAttributes::GetGUID</unmanaged-short>
        internal unsafe System.Guid GetGuid(System.Guid guidKey)
        {
            System.Guid guidValueRef;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, &guidValueRef, (*(void ***)this._nativePointer)[10]);
            __result__.CheckError();
            return guidValueRef;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::GetStringLength([In] const GUID&amp; guidKey,[Out] UINT32* pcchLength)</unmanaged>
        /// <unmanaged-short>IMFAttributes::GetStringLength</unmanaged-short>
        internal unsafe System.Int32 GetStringLength(System.Guid guidKey)
        {
            System.Int32 cchLengthRef;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, &cchLengthRef, (*(void ***)this._nativePointer)[11]);
            __result__.CheckError();
            return cchLengthRef;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <param name = "wszValueRef">No documentation.</param>
        /// <param name = "cchBufSize">No documentation.</param>
        /// <param name = "cchLengthRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::GetString([In] const GUID&amp; guidKey,[Out, Buffer] wchar_t* pwszValue,[In] UINT32 cchBufSize,[InOut, Optional] UINT32* pcchLength)</unmanaged>
        /// <unmanaged-short>IMFAttributes::GetString</unmanaged-short>
        internal unsafe void GetString(System.Guid guidKey, System.IntPtr wszValueRef, System.Int32 cchBufSize, System.IntPtr cchLengthRef)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, (void *)wszValueRef, cchBufSize, (void *)cchLengthRef, (*(void ***)this._nativePointer)[12]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <param name = "wszValueOut">No documentation.</param>
        /// <param name = "cchLengthRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::GetAllocatedString([In] const GUID&amp; guidKey,[Buffer, Optional] wchar_t** ppwszValue,[Out] UINT32* pcchLength)</unmanaged>
        /// <unmanaged-short>IMFAttributes::GetAllocatedString</unmanaged-short>
        internal unsafe void GetAllocatedString(System.Guid guidKey, System.String wszValueOut, out System.Int32 cchLengthRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *cchLengthRef_ = &cchLengthRef)
                fixed (char *wszValueOut_ = wszValueOut)
                    __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, (void *)wszValueOut_, cchLengthRef_, (*(void ***)this._nativePointer)[13]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::GetBlobSize([In] const GUID&amp; guidKey,[Out] UINT32* pcbBlobSize)</unmanaged>
        /// <unmanaged-short>IMFAttributes::GetBlobSize</unmanaged-short>
        internal unsafe System.Int32 GetBlobSize(System.Guid guidKey)
        {
            System.Int32 cbBlobSizeRef;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, &cbBlobSizeRef, (*(void ***)this._nativePointer)[14]);
            __result__.CheckError();
            return cbBlobSizeRef;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <param name = "bufRef">No documentation.</param>
        /// <param name = "cbBufSize">No documentation.</param>
        /// <param name = "cbBlobSizeRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::GetBlob([In] const GUID&amp; guidKey,[In] unsigned char* pBuf,[In] UINT32 cbBufSize,[InOut, Optional] UINT32* pcbBlobSize)</unmanaged>
        /// <unmanaged-short>IMFAttributes::GetBlob</unmanaged-short>
        internal unsafe void GetBlob(System.Guid guidKey, System.IntPtr bufRef, System.Int32 cbBufSize, System.IntPtr cbBlobSizeRef)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, (void *)bufRef, cbBufSize, (void *)cbBlobSizeRef, (*(void ***)this._nativePointer)[15]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <param name = "bufOut">No documentation.</param>
        /// <param name = "cbSizeRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::GetAllocatedBlob([In] const GUID&amp; guidKey,[Buffer, Optional] unsigned char** ppBuf,[Out] UINT32* pcbSize)</unmanaged>
        /// <unmanaged-short>IMFAttributes::GetAllocatedBlob</unmanaged-short>
        internal unsafe void GetAllocatedBlob(System.Guid guidKey, System.Byte[] bufOut, out System.Int32 cbSizeRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *cbSizeRef_ = &cbSizeRef)
                fixed (void *bufOut_ = bufOut)
                    __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, bufOut_, cbSizeRef_, (*(void ***)this._nativePointer)[16]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <param name = "riid">No documentation.</param>
        /// <param name = "vOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::GetUnknown([In] const GUID&amp; guidKey,[In] const GUID&amp; riid,[Out] void** ppv)</unmanaged>
        /// <unmanaged-short>IMFAttributes::GetUnknown</unmanaged-short>
        internal unsafe void GetUnknown(System.Guid guidKey, System.Guid riid, out System.IntPtr vOut)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *vOut_ = &vOut)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, &riid, vOut_, (*(void ***)this._nativePointer)[17]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <param name = "value">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::SetItem([In] const GUID&amp; guidKey,[In] const PROPVARIANT&amp; Value)</unmanaged>
        /// <unmanaged-short>IMFAttributes::SetItem</unmanaged-short>
        internal unsafe void Set(System.Guid guidKey, SharpGen.Runtime.Win32.Variant value)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, &value, (*(void ***)this._nativePointer)[18]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::DeleteItem([In] const GUID&amp; guidKey)</unmanaged>
        /// <unmanaged-short>IMFAttributes::DeleteItem</unmanaged-short>
        public unsafe void DeleteItem(System.Guid guidKey)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, (*(void ***)this._nativePointer)[19]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::DeleteAllItems()</unmanaged>
        /// <unmanaged-short>IMFAttributes::DeleteAllItems</unmanaged-short>
        public unsafe void DeleteAllItems()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[20]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <param name = "unValue">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::SetUINT32([In] const GUID&amp; guidKey,[In] UINT32 unValue)</unmanaged>
        /// <unmanaged-short>IMFAttributes::SetUINT32</unmanaged-short>
        internal unsafe void Set(System.Guid guidKey, System.Int32 unValue)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, unValue, (*(void ***)this._nativePointer)[21]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <param name = "unValue">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::SetUINT64([In] const GUID&amp; guidKey,[In] UINT64 unValue)</unmanaged>
        /// <unmanaged-short>IMFAttributes::SetUINT64</unmanaged-short>
        internal unsafe void Set(System.Guid guidKey, System.Int64 unValue)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, unValue, (*(void ***)this._nativePointer)[22]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <param name = "value">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::SetDouble([In] const GUID&amp; guidKey,[In] double fValue)</unmanaged>
        /// <unmanaged-short>IMFAttributes::SetDouble</unmanaged-short>
        internal unsafe void Set(System.Guid guidKey, System.Double value)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, value, (*(void ***)this._nativePointer)[23]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <param name = "guidValue">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::SetGUID([In] const GUID&amp; guidKey,[In] const GUID&amp; guidValue)</unmanaged>
        /// <unmanaged-short>IMFAttributes::SetGUID</unmanaged-short>
        internal unsafe void Set(System.Guid guidKey, System.Guid guidValue)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, &guidValue, (*(void ***)this._nativePointer)[24]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <param name = "wszValue">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::SetString([In] const GUID&amp; guidKey,[In] const wchar_t* wszValue)</unmanaged>
        /// <unmanaged-short>IMFAttributes::SetString</unmanaged-short>
        internal unsafe void Set(System.Guid guidKey, System.String wszValue)
        {
            SharpGen.Runtime.Result __result__;
            fixed (char *wszValue_ = wszValue)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, (void *)wszValue_, (*(void ***)this._nativePointer)[25]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <param name = "bufRef">No documentation.</param>
        /// <param name = "cbBufSize">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::SetBlob([In] const GUID&amp; guidKey,[In] const unsigned char* pBuf,[In] UINT32 cbBufSize)</unmanaged>
        /// <unmanaged-short>IMFAttributes::SetBlob</unmanaged-short>
        internal unsafe void SetBlob(System.Guid guidKey, System.IntPtr bufRef, System.Int32 cbBufSize)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, (void *)bufRef, cbBufSize, (*(void ***)this._nativePointer)[26]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidKey">No documentation.</param>
        /// <param name = "unknownRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::SetUnknown([In] const GUID&amp; guidKey,[In, Optional] IUnknown* pUnknown)</unmanaged>
        /// <unmanaged-short>IMFAttributes::SetUnknown</unmanaged-short>
        internal unsafe void Set(System.Guid guidKey, SharpGen.Runtime.IUnknown unknownRef)
        {
            System.IntPtr unknownRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            unknownRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.IUnknown>(unknownRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidKey, (void *)unknownRef_, (*(void ***)this._nativePointer)[27]);
            System.GC.KeepAlive(unknownRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::LockStore()</unmanaged>
        /// <unmanaged-short>IMFAttributes::LockStore</unmanaged-short>
        public unsafe void LockStore()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[28]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::UnlockStore()</unmanaged>
        /// <unmanaged-short>IMFAttributes::UnlockStore</unmanaged-short>
        public unsafe void UnlockStore()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[29]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "cItemsRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::GetCount([Out] UINT32* pcItems)</unmanaged>
        /// <unmanaged-short>IMFAttributes::GetCount</unmanaged-short>
        internal unsafe void GetCount(out System.Int32 cItemsRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *cItemsRef_ = &cItemsRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, cItemsRef_, (*(void ***)this._nativePointer)[30]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "unIndex">No documentation.</param>
        /// <param name = "guidKeyRef">No documentation.</param>
        /// <param name = "valueRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::GetItemByIndex([In] UINT32 unIndex,[Out] GUID* pguidKey,[InOut, Optional] PROPVARIANT* pValue)</unmanaged>
        /// <unmanaged-short>IMFAttributes::GetItemByIndex</unmanaged-short>
        internal unsafe void GetItemByIndex(System.Int32 unIndex, out System.Guid guidKeyRef, System.IntPtr valueRef)
        {
            guidKeyRef = default (System.Guid);
            SharpGen.Runtime.Result __result__;
            fixed (void *guidKeyRef_ = &guidKeyRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, unIndex, guidKeyRef_, (void *)valueRef, (*(void ***)this._nativePointer)[31]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "destRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFAttributes::CopyAllItems([In, Optional] IMFAttributes* pDest)</unmanaged>
        /// <unmanaged-short>IMFAttributes::CopyAllItems</unmanaged-short>
        public unsafe void CopyAllItems(SharpMediaFoundation.MediaAttributes destRef)
        {
            System.IntPtr destRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            destRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.MediaAttributes>(destRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)destRef_, (*(void ***)this._nativePointer)[32]);
            System.GC.KeepAlive(destRef);
            __result__.CheckError();
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("DF598932-F10C-4E39-BBA2-C308F101DAA3")]
    public partial class MediaEvent : SharpMediaFoundation.MediaAttributes
    {
        public MediaEvent(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator MediaEvent(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new MediaEvent(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetType</unmanaged>
        /// <unmanaged-short>GetType</unmanaged-short>
        public SharpMediaFoundation.MediaEventTypes TypeInfo
        {
            get
            {
                GetTypeInfo(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetExtendedType</unmanaged>
        /// <unmanaged-short>GetExtendedType</unmanaged-short>
        public System.Guid ExtendedType
        {
            get
            {
                GetExtendedType(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetStatus</unmanaged>
        /// <unmanaged-short>GetStatus</unmanaged-short>
        public SharpGen.Runtime.Result Status
        {
            get
            {
                GetStatus(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetValue</unmanaged>
        /// <unmanaged-short>GetValue</unmanaged-short>
        public SharpGen.Runtime.Win32.Variant Value
        {
            get
            {
                GetValue(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "metRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaEvent::GetType([Out] DWORD* pmet)</unmanaged>
        /// <unmanaged-short>IMFMediaEvent::GetType</unmanaged-short>
        internal unsafe void GetTypeInfo(out SharpMediaFoundation.MediaEventTypes metRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *metRef_ = &metRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, metRef_, (*(void ***)this._nativePointer)[33]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidExtendedTypeRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaEvent::GetExtendedType([Out] GUID* pguidExtendedType)</unmanaged>
        /// <unmanaged-short>IMFMediaEvent::GetExtendedType</unmanaged-short>
        internal unsafe void GetExtendedType(out System.Guid guidExtendedTypeRef)
        {
            guidExtendedTypeRef = default (System.Guid);
            SharpGen.Runtime.Result __result__;
            fixed (void *guidExtendedTypeRef_ = &guidExtendedTypeRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, guidExtendedTypeRef_, (*(void ***)this._nativePointer)[34]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "hrStatusRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaEvent::GetStatus([Out] HRESULT* phrStatus)</unmanaged>
        /// <unmanaged-short>IMFMediaEvent::GetStatus</unmanaged-short>
        internal unsafe void GetStatus(out SharpGen.Runtime.Result hrStatusRef)
        {
            hrStatusRef = default (SharpGen.Runtime.Result);
            SharpGen.Runtime.Result __result__;
            fixed (void *hrStatusRef_ = &hrStatusRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, hrStatusRef_, (*(void ***)this._nativePointer)[35]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "vValueRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaEvent::GetValue([Out] PROPVARIANT* pvValue)</unmanaged>
        /// <unmanaged-short>IMFMediaEvent::GetValue</unmanaged-short>
        internal unsafe void GetValue(out SharpGen.Runtime.Win32.Variant vValueRef)
        {
            vValueRef = default (SharpGen.Runtime.Win32.Variant);
            SharpGen.Runtime.Result __result__;
            fixed (void *vValueRef_ = &vValueRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, vValueRef_, (*(void ***)this._nativePointer)[36]);
            __result__.CheckError();
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("2CD0BD52-BCD5-4B89-B62C-EADC0C031E7D")]
    public partial class MediaEventGenerator : SharpGen.Runtime.ComObject
    {
        public MediaEventGenerator(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator MediaEventGenerator(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new MediaEventGenerator(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "eventOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaEventGenerator::GetEvent([In] DWORD dwFlags,[Out] IMFMediaEvent** ppEvent)</unmanaged>
        /// <unmanaged-short>IMFMediaEventGenerator::GetEvent</unmanaged-short>
        internal unsafe void GetEvent(System.Int32 flags, out SharpMediaFoundation.MediaEvent eventOut)
        {
            System.IntPtr eventOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, flags, &eventOut_, (*(void ***)this._nativePointer)[3]);
            if (eventOut_ != System.IntPtr.Zero)
                eventOut = new SharpMediaFoundation.MediaEvent(eventOut_);
            else
                eventOut = null;
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "callbackRef">No documentation.</param>
        /// <param name = "unkStateRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaEventGenerator::BeginGetEvent([In] IMFAsyncCallback* pCallback,[In] IUnknown* punkState)</unmanaged>
        /// <unmanaged-short>IMFMediaEventGenerator::BeginGetEvent</unmanaged-short>
        public unsafe void BeginGetEvent(SharpMediaFoundation.IAsyncCallback callbackRef, System.IntPtr unkStateRef)
        {
            System.IntPtr callbackRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            callbackRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.IAsyncCallback>(callbackRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)callbackRef_, (void *)unkStateRef, (*(void ***)this._nativePointer)[4]);
            System.GC.KeepAlive(callbackRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "resultRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaEventGenerator::EndGetEvent([In] IMFAsyncResult* pResult,[Out] IMFMediaEvent** ppEvent)</unmanaged>
        /// <unmanaged-short>IMFMediaEventGenerator::EndGetEvent</unmanaged-short>
        public unsafe SharpMediaFoundation.MediaEvent EndGetEvent(SharpMediaFoundation.AsyncResult resultRef)
        {
            System.IntPtr resultRef_ = System.IntPtr.Zero;
            SharpMediaFoundation.MediaEvent eventOut;
            System.IntPtr eventOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            resultRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.AsyncResult>(resultRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)resultRef_, &eventOut_, (*(void ***)this._nativePointer)[5]);
            if (eventOut_ != System.IntPtr.Zero)
                eventOut = new SharpMediaFoundation.MediaEvent(eventOut_);
            else
                eventOut = null;
            System.GC.KeepAlive(resultRef);
            __result__.CheckError();
            return eventOut;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "met">No documentation.</param>
        /// <param name = "guidExtendedType">No documentation.</param>
        /// <param name = "hrStatus">No documentation.</param>
        /// <param name = "vValueRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaEventGenerator::QueueEvent([In] DWORD met,[In] const GUID&amp; guidExtendedType,[In] HRESULT hrStatus,[In, Optional] const PROPVARIANT* pvValue)</unmanaged>
        /// <unmanaged-short>IMFMediaEventGenerator::QueueEvent</unmanaged-short>
        public unsafe void QueueEvent(System.Int32 met, System.Guid guidExtendedType, SharpGen.Runtime.Result hrStatus, SharpGen.Runtime.Win32.Variant? vValueRef)
        {
            SharpGen.Runtime.Win32.Variant vValueRef_;
            SharpGen.Runtime.Result __result__;
            if (vValueRef != null)
                vValueRef_ = vValueRef.Value;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint0(this._nativePointer, met, &guidExtendedType, hrStatus, vValueRef == null ? (void *)0 : &vValueRef_, (*(void ***)this._nativePointer)[6]);
            __result__.CheckError();
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("90377834-21D0-4dee-8214-BA2E3E6C1127")]
    public partial class MediaSession : SharpMediaFoundation.MediaEventGenerator
    {
        public MediaSession(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator MediaSession(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new MediaSession(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetClock</unmanaged>
        /// <unmanaged-short>GetClock</unmanaged-short>
        public SharpMediaFoundation.Clock Clock
        {
            get
            {
                GetClock(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetSessionCapabilities</unmanaged>
        /// <unmanaged-short>GetSessionCapabilities</unmanaged-short>
        public System.Int32 SessionCapabilities
        {
            get
            {
                GetSessionCapabilities(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "setTopologyFlags">No documentation.</param>
        /// <param name = "topologyRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaSession::SetTopology([In] DWORD dwSetTopologyFlags,[In, Optional] IMFTopology* pTopology)</unmanaged>
        /// <unmanaged-short>IMFMediaSession::SetTopology</unmanaged-short>
        public unsafe void SetTopology(SharpMediaFoundation.SessionSetTopologyFlags setTopologyFlags, SharpMediaFoundation.Topology topologyRef)
        {
            System.IntPtr topologyRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            topologyRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.Topology>(topologyRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, unchecked ((System.Int32)setTopologyFlags), (void *)topologyRef_, (*(void ***)this._nativePointer)[7]);
            System.GC.KeepAlive(topologyRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaSession::ClearTopologies()</unmanaged>
        /// <unmanaged-short>IMFMediaSession::ClearTopologies</unmanaged-short>
        public unsafe void ClearTopologies()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[8]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidTimeFormatRef">No documentation.</param>
        /// <param name = "varStartPositionRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaSession::Start([In, Optional] const GUID* pguidTimeFormat,[In, Optional] const PROPVARIANT* pvarStartPosition)</unmanaged>
        /// <unmanaged-short>IMFMediaSession::Start</unmanaged-short>
        public unsafe void Start(System.Guid? guidTimeFormatRef, SharpGen.Runtime.Win32.Variant? varStartPositionRef)
        {
            System.Guid guidTimeFormatRef_;
            SharpGen.Runtime.Win32.Variant varStartPositionRef_;
            SharpGen.Runtime.Result __result__;
            if (guidTimeFormatRef != null)
                guidTimeFormatRef_ = guidTimeFormatRef.Value;
            if (varStartPositionRef != null)
                varStartPositionRef_ = varStartPositionRef.Value;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, guidTimeFormatRef == null ? (void *)0 : &guidTimeFormatRef_, varStartPositionRef == null ? (void *)0 : &varStartPositionRef_, (*(void ***)this._nativePointer)[9]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaSession::Pause()</unmanaged>
        /// <unmanaged-short>IMFMediaSession::Pause</unmanaged-short>
        public unsafe void Pause()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[10]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaSession::Stop()</unmanaged>
        /// <unmanaged-short>IMFMediaSession::Stop</unmanaged-short>
        public unsafe void Stop()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[11]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaSession::Close()</unmanaged>
        /// <unmanaged-short>IMFMediaSession::Close</unmanaged-short>
        public unsafe void Close()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[12]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaSession::Shutdown()</unmanaged>
        /// <unmanaged-short>IMFMediaSession::Shutdown</unmanaged-short>
        public unsafe void Shutdown()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[13]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "clockOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaSession::GetClock([Out] IMFClock** ppClock)</unmanaged>
        /// <unmanaged-short>IMFMediaSession::GetClock</unmanaged-short>
        internal unsafe void GetClock(out SharpMediaFoundation.Clock clockOut)
        {
            System.IntPtr clockOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &clockOut_, (*(void ***)this._nativePointer)[14]);
            if (clockOut_ != System.IntPtr.Zero)
                clockOut = new SharpMediaFoundation.Clock(clockOut_);
            else
                clockOut = null;
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "capsRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaSession::GetSessionCapabilities([Out] DWORD* pdwCaps)</unmanaged>
        /// <unmanaged-short>IMFMediaSession::GetSessionCapabilities</unmanaged-short>
        internal unsafe void GetSessionCapabilities(out System.Int32 capsRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *capsRef_ = &capsRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, capsRef_, (*(void ***)this._nativePointer)[15]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "getFullTopologyFlags">No documentation.</param>
        /// <param name = "topoId">No documentation.</param>
        /// <param name = "fullTopologyOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaSession::GetFullTopology([In] DWORD dwGetFullTopologyFlags,[In] unsigned longlong TopoId,[Out] IMFTopology** ppFullTopology)</unmanaged>
        /// <unmanaged-short>IMFMediaSession::GetFullTopology</unmanaged-short>
        public unsafe void GetFullTopology(System.Int32 getFullTopologyFlags, System.UInt64 topoId, out SharpMediaFoundation.Topology fullTopologyOut)
        {
            System.IntPtr fullTopologyOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, getFullTopologyFlags, topoId, &fullTopologyOut_, (*(void ***)this._nativePointer)[16]);
            if (fullTopologyOut_ != System.IntPtr.Zero)
                fullTopologyOut = new SharpMediaFoundation.Topology(fullTopologyOut_);
            else
                fullTopologyOut = null;
            __result__.CheckError();
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("44ae0fa8-ea31-4109-8d2e-4cae4997c555")]
    public partial class MediaType : SharpMediaFoundation.MediaAttributes
    {
        public MediaType(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator MediaType(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new MediaType(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetMajorType</unmanaged>
        /// <unmanaged-short>GetMajorType</unmanaged-short>
        public System.Guid MajorType
        {
            get
            {
                GetMajorType(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>IsCompressedFormat</unmanaged>
        /// <unmanaged-short>IsCompressedFormat</unmanaged-short>
        public SharpGen.Runtime.Win32.RawBool IsCompressedFormat
        {
            get
            {
                IsCompressedFormat_(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidMajorTypeRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaType::GetMajorType([Out] GUID* pguidMajorType)</unmanaged>
        /// <unmanaged-short>IMFMediaType::GetMajorType</unmanaged-short>
        internal unsafe void GetMajorType(out System.Guid guidMajorTypeRef)
        {
            guidMajorTypeRef = default (System.Guid);
            SharpGen.Runtime.Result __result__;
            fixed (void *guidMajorTypeRef_ = &guidMajorTypeRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, guidMajorTypeRef_, (*(void ***)this._nativePointer)[33]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "compressedRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaType::IsCompressedFormat([Out] BOOL* pfCompressed)</unmanaged>
        /// <unmanaged-short>IMFMediaType::IsCompressedFormat</unmanaged-short>
        internal unsafe void IsCompressedFormat_(out SharpGen.Runtime.Win32.RawBool compressedRef)
        {
            compressedRef = default (SharpGen.Runtime.Win32.RawBool);
            SharpGen.Runtime.Result __result__;
            fixed (void *compressedRef_ = &compressedRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, compressedRef_, (*(void ***)this._nativePointer)[34]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "iMediaTypeRef">No documentation.</param>
        /// <param name = "flagsRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaType::IsEqual([In, Optional] IMFMediaType* pIMediaType,[Out] DWORD* pdwFlags)</unmanaged>
        /// <unmanaged-short>IMFMediaType::IsEqual</unmanaged-short>
        public unsafe void IsEqual(SharpMediaFoundation.MediaType iMediaTypeRef, out System.Int32 flagsRef)
        {
            System.IntPtr iMediaTypeRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            iMediaTypeRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.MediaType>(iMediaTypeRef);
            fixed (void *flagsRef_ = &flagsRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)iMediaTypeRef_, flagsRef_, (*(void ***)this._nativePointer)[35]);
            System.GC.KeepAlive(iMediaTypeRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidRepresentation">No documentation.</param>
        /// <param name = "vRepresentationOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaType::GetRepresentation([In] GUID guidRepresentation,[Out] void** ppvRepresentation)</unmanaged>
        /// <unmanaged-short>IMFMediaType::GetRepresentation</unmanaged-short>
        public unsafe void GetRepresentation(System.Guid guidRepresentation, out System.IntPtr vRepresentationOut)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *vRepresentationOut_ = &vRepresentationOut)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, guidRepresentation, vRepresentationOut_, (*(void ***)this._nativePointer)[36]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidRepresentation">No documentation.</param>
        /// <param name = "vRepresentationRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFMediaType::FreeRepresentation([In] GUID guidRepresentation,[In] void* pvRepresentation)</unmanaged>
        /// <unmanaged-short>IMFMediaType::FreeRepresentation</unmanaged-short>
        public unsafe void FreeRepresentation(System.Guid guidRepresentation, System.IntPtr vRepresentationRef)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, guidRepresentation, (void *)vRepresentationRef, (*(void ***)this._nativePointer)[37]);
            __result__.CheckError();
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("868CE85C-8EA9-4f55-AB82-B009A910A805")]
    public partial class PresentationClock : SharpMediaFoundation.Clock
    {
        public PresentationClock(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator PresentationClock(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new PresentationClock(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetTimeSource / SetTimeSource</unmanaged>
        /// <unmanaged-short>GetTimeSource</unmanaged-short>
        public SharpMediaFoundation.PresentationTimeSource TimeSource
        {
            get
            {
                GetTimeSource(out var __output__);
                return __output__;
            }

            set => SetTimeSource(value);
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetTime</unmanaged>
        /// <unmanaged-short>GetTime</unmanaged-short>
        public System.Int64 Time
        {
            get
            {
                GetTime(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "timeSourceRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFPresentationClock::SetTimeSource([In, Optional] IMFPresentationTimeSource* pTimeSource)</unmanaged>
        /// <unmanaged-short>IMFPresentationClock::SetTimeSource</unmanaged-short>
        internal unsafe void SetTimeSource(SharpMediaFoundation.PresentationTimeSource timeSourceRef)
        {
            System.IntPtr timeSourceRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            timeSourceRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.PresentationTimeSource>(timeSourceRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)timeSourceRef_, (*(void ***)this._nativePointer)[8]);
            System.GC.KeepAlive(timeSourceRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "timeSourceOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFPresentationClock::GetTimeSource([Out] IMFPresentationTimeSource** ppTimeSource)</unmanaged>
        /// <unmanaged-short>IMFPresentationClock::GetTimeSource</unmanaged-short>
        internal unsafe void GetTimeSource(out SharpMediaFoundation.PresentationTimeSource timeSourceOut)
        {
            System.IntPtr timeSourceOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &timeSourceOut_, (*(void ***)this._nativePointer)[9]);
            if (timeSourceOut_ != System.IntPtr.Zero)
                timeSourceOut = new SharpMediaFoundation.PresentationTimeSource(timeSourceOut_);
            else
                timeSourceOut = null;
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "hnsClockTimeRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFPresentationClock::GetTime([Out] longlong* phnsClockTime)</unmanaged>
        /// <unmanaged-short>IMFPresentationClock::GetTime</unmanaged-short>
        internal unsafe void GetTime(out System.Int64 hnsClockTimeRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *hnsClockTimeRef_ = &hnsClockTimeRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, hnsClockTimeRef_, (*(void ***)this._nativePointer)[10]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "stateSinkRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFPresentationClock::AddClockStateSink([In, Optional] IMFClockStateSink* pStateSink)</unmanaged>
        /// <unmanaged-short>IMFPresentationClock::AddClockStateSink</unmanaged-short>
        public unsafe void AddClockStateSink(SharpMediaFoundation.ClockStateSink stateSinkRef)
        {
            System.IntPtr stateSinkRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            stateSinkRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.ClockStateSink>(stateSinkRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)stateSinkRef_, (*(void ***)this._nativePointer)[11]);
            System.GC.KeepAlive(stateSinkRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "stateSinkRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFPresentationClock::RemoveClockStateSink([In, Optional] IMFClockStateSink* pStateSink)</unmanaged>
        /// <unmanaged-short>IMFPresentationClock::RemoveClockStateSink</unmanaged-short>
        public unsafe void RemoveClockStateSink(SharpMediaFoundation.ClockStateSink stateSinkRef)
        {
            System.IntPtr stateSinkRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            stateSinkRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.ClockStateSink>(stateSinkRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)stateSinkRef_, (*(void ***)this._nativePointer)[12]);
            System.GC.KeepAlive(stateSinkRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "llClockStartOffset">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFPresentationClock::Start([In] longlong llClockStartOffset)</unmanaged>
        /// <unmanaged-short>IMFPresentationClock::Start</unmanaged-short>
        public unsafe void Start(System.Int64 llClockStartOffset)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, llClockStartOffset, (*(void ***)this._nativePointer)[13]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFPresentationClock::Stop()</unmanaged>
        /// <unmanaged-short>IMFPresentationClock::Stop</unmanaged-short>
        public unsafe void Stop()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[14]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFPresentationClock::Pause()</unmanaged>
        /// <unmanaged-short>IMFPresentationClock::Pause</unmanaged-short>
        public unsafe void Pause()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[15]);
            __result__.CheckError();
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("7FF12CCE-F76F-41c2-863B-1666C8E5E139")]
    public partial class PresentationTimeSource : SharpMediaFoundation.Clock
    {
        public PresentationTimeSource(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator PresentationTimeSource(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new PresentationTimeSource(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetUnderlyingClock</unmanaged>
        /// <unmanaged-short>GetUnderlyingClock</unmanaged-short>
        public SharpMediaFoundation.Clock UnderlyingClock
        {
            get
            {
                GetUnderlyingClock(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "clockOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFPresentationTimeSource::GetUnderlyingClock([Out] IMFClock** ppClock)</unmanaged>
        /// <unmanaged-short>IMFPresentationTimeSource::GetUnderlyingClock</unmanaged-short>
        internal unsafe void GetUnderlyingClock(out SharpMediaFoundation.Clock clockOut)
        {
            System.IntPtr clockOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &clockOut_, (*(void ***)this._nativePointer)[8]);
            if (clockOut_ != System.IntPtr.Zero)
                clockOut = new SharpMediaFoundation.Clock(clockOut_);
            else
                clockOut = null;
            __result__.CheckError();
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("fa993888-4383-415a-a930-dd472a8cf6f7")]
    public partial class ServiceProvider : SharpGen.Runtime.ComObject
    {
        public ServiceProvider(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator ServiceProvider(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new ServiceProvider(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "guidService">No documentation.</param>
        /// <param name = "riid">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFGetService::GetService([In] const GUID&amp; guidService,[In] const GUID&amp; riid,[Out] void** ppvObject)</unmanaged>
        /// <unmanaged-short>IMFGetService::GetService</unmanaged-short>
        public unsafe System.IntPtr GetService(System.Guid guidService, System.Guid riid)
        {
            System.IntPtr vObjectOut;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &guidService, &riid, &vObjectOut, (*(void ***)this._nativePointer)[3]);
            __result__.CheckError();
            return vObjectOut;
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("FBE5A32D-A497-4b61-BB85-97B1A848A6E3")]
    public partial class SourceResolver : SharpGen.Runtime.ComObject
    {
        public SourceResolver(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator SourceResolver(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new SourceResolver(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "wszURLRef">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "propsRef">No documentation.</param>
        /// <param name = "objectTypeRef">No documentation.</param>
        /// <param name = "objectOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFSourceResolver::CreateObjectFromURL([In] const wchar_t* pwszURL,[In] DWORD dwFlags,[In] IPropertyStore* pProps,[Out] MF_OBJECT_TYPE* pObjectType,[Out] IUnknown** ppObject)</unmanaged>
        /// <unmanaged-short>IMFSourceResolver::CreateObjectFromURL</unmanaged-short>
        internal unsafe void CreateObjectFromURL(System.String wszURLRef, System.Int32 flags, SharpGen.Runtime.ComObject propsRef, out SharpMediaFoundation.ObjectType objectTypeRef, out SharpGen.Runtime.IUnknown objectOut)
        {
            System.IntPtr propsRef_ = System.IntPtr.Zero;
            System.IntPtr objectOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            propsRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.ComObject>(propsRef);
            fixed (void *objectTypeRef_ = &objectTypeRef)
                fixed (char *wszURLRef_ = wszURLRef)
                    __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)wszURLRef_, flags, (void *)propsRef_, objectTypeRef_, &objectOut_, (*(void ***)this._nativePointer)[3]);
            if (objectOut_ != System.IntPtr.Zero)
                objectOut = new SharpGen.Runtime.ComObject(objectOut_);
            else
                objectOut = null;
            System.GC.KeepAlive(propsRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "byteStreamRef">No documentation.</param>
        /// <param name = "wszURLRef">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "propsRef">No documentation.</param>
        /// <param name = "objectTypeRef">No documentation.</param>
        /// <param name = "objectOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFSourceResolver::CreateObjectFromByteStream([In] IMFByteStream* pByteStream,[In] const wchar_t* pwszURL,[In] DWORD dwFlags,[In] IPropertyStore* pProps,[Out] MF_OBJECT_TYPE* pObjectType,[Out] IUnknown** ppObject)</unmanaged>
        /// <unmanaged-short>IMFSourceResolver::CreateObjectFromByteStream</unmanaged-short>
        public unsafe void CreateObjectFromByteStream(SharpMediaFoundation.IByteStream byteStreamRef, System.String wszURLRef, System.Int32 flags, SharpGen.Runtime.ComObject propsRef, out SharpMediaFoundation.ObjectType objectTypeRef, out SharpGen.Runtime.IUnknown objectOut)
        {
            System.IntPtr byteStreamRef_ = System.IntPtr.Zero;
            System.IntPtr propsRef_ = System.IntPtr.Zero;
            System.IntPtr objectOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            byteStreamRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.IByteStream>(byteStreamRef);
            propsRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.ComObject>(propsRef);
            fixed (void *objectTypeRef_ = &objectTypeRef)
                fixed (char *wszURLRef_ = wszURLRef)
                    __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)byteStreamRef_, (void *)wszURLRef_, flags, (void *)propsRef_, objectTypeRef_, &objectOut_, (*(void ***)this._nativePointer)[4]);
            if (objectOut_ != System.IntPtr.Zero)
                objectOut = new SharpGen.Runtime.ComObject(objectOut_);
            else
                objectOut = null;
            System.GC.KeepAlive(byteStreamRef);
            System.GC.KeepAlive(propsRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "wszURLRef">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "propsRef">No documentation.</param>
        /// <param name = "iUnknownCancelCookieOut">No documentation.</param>
        /// <param name = "callbackRef">No documentation.</param>
        /// <param name = "unkStateRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFSourceResolver::BeginCreateObjectFromURL([In] const wchar_t* pwszURL,[In] DWORD dwFlags,[In] IPropertyStore* pProps,[Out, Optional] IUnknown** ppIUnknownCancelCookie,[In] IMFAsyncCallback* pCallback,[In] IUnknown* punkState)</unmanaged>
        /// <unmanaged-short>IMFSourceResolver::BeginCreateObjectFromURL</unmanaged-short>
        public unsafe void BeginCreateObjectFromURL(System.String wszURLRef, System.Int32 flags, SharpGen.Runtime.ComObject propsRef, out SharpGen.Runtime.IUnknown iUnknownCancelCookieOut, SharpMediaFoundation.IAsyncCallback callbackRef, SharpGen.Runtime.IUnknown unkStateRef)
        {
            System.IntPtr propsRef_ = System.IntPtr.Zero;
            System.IntPtr iUnknownCancelCookieOut_ = System.IntPtr.Zero;
            System.IntPtr callbackRef_ = System.IntPtr.Zero;
            System.IntPtr unkStateRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            propsRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.ComObject>(propsRef);
            callbackRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.IAsyncCallback>(callbackRef);
            unkStateRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.IUnknown>(unkStateRef);
            fixed (char *wszURLRef_ = wszURLRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)wszURLRef_, flags, (void *)propsRef_, &iUnknownCancelCookieOut_, (void *)callbackRef_, (void *)unkStateRef_, (*(void ***)this._nativePointer)[5]);
            if (iUnknownCancelCookieOut_ != System.IntPtr.Zero)
                iUnknownCancelCookieOut = new SharpGen.Runtime.ComObject(iUnknownCancelCookieOut_);
            else
                iUnknownCancelCookieOut = null;
            System.GC.KeepAlive(propsRef);
            System.GC.KeepAlive(callbackRef);
            System.GC.KeepAlive(unkStateRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "resultRef">No documentation.</param>
        /// <param name = "objectTypeRef">No documentation.</param>
        /// <param name = "objectOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFSourceResolver::EndCreateObjectFromURL([In] IMFAsyncResult* pResult,[Out] MF_OBJECT_TYPE* pObjectType,[Out] IUnknown** ppObject)</unmanaged>
        /// <unmanaged-short>IMFSourceResolver::EndCreateObjectFromURL</unmanaged-short>
        public unsafe void EndCreateObjectFromURL(SharpMediaFoundation.AsyncResult resultRef, out SharpMediaFoundation.ObjectType objectTypeRef, out SharpGen.Runtime.IUnknown objectOut)
        {
            System.IntPtr resultRef_ = System.IntPtr.Zero;
            System.IntPtr objectOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            resultRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.AsyncResult>(resultRef);
            fixed (void *objectTypeRef_ = &objectTypeRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)resultRef_, objectTypeRef_, &objectOut_, (*(void ***)this._nativePointer)[6]);
            if (objectOut_ != System.IntPtr.Zero)
                objectOut = new SharpGen.Runtime.ComObject(objectOut_);
            else
                objectOut = null;
            System.GC.KeepAlive(resultRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "byteStreamRef">No documentation.</param>
        /// <param name = "wszURLRef">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "propsRef">No documentation.</param>
        /// <param name = "iUnknownCancelCookieOut">No documentation.</param>
        /// <param name = "callbackRef">No documentation.</param>
        /// <param name = "unkStateRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFSourceResolver::BeginCreateObjectFromByteStream([In] IMFByteStream* pByteStream,[In] const wchar_t* pwszURL,[In] DWORD dwFlags,[In] IPropertyStore* pProps,[Out, Optional] IUnknown** ppIUnknownCancelCookie,[In] IMFAsyncCallback* pCallback,[In] IUnknown* punkState)</unmanaged>
        /// <unmanaged-short>IMFSourceResolver::BeginCreateObjectFromByteStream</unmanaged-short>
        public unsafe void BeginCreateObjectFromByteStream(SharpMediaFoundation.IByteStream byteStreamRef, System.String wszURLRef, System.Int32 flags, SharpGen.Runtime.ComObject propsRef, out SharpGen.Runtime.IUnknown iUnknownCancelCookieOut, SharpMediaFoundation.IAsyncCallback callbackRef, SharpGen.Runtime.IUnknown unkStateRef)
        {
            System.IntPtr byteStreamRef_ = System.IntPtr.Zero;
            System.IntPtr propsRef_ = System.IntPtr.Zero;
            System.IntPtr iUnknownCancelCookieOut_ = System.IntPtr.Zero;
            System.IntPtr callbackRef_ = System.IntPtr.Zero;
            System.IntPtr unkStateRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            byteStreamRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.IByteStream>(byteStreamRef);
            propsRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.ComObject>(propsRef);
            callbackRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.IAsyncCallback>(callbackRef);
            unkStateRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.IUnknown>(unkStateRef);
            fixed (char *wszURLRef_ = wszURLRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)byteStreamRef_, (void *)wszURLRef_, flags, (void *)propsRef_, &iUnknownCancelCookieOut_, (void *)callbackRef_, (void *)unkStateRef_, (*(void ***)this._nativePointer)[7]);
            if (iUnknownCancelCookieOut_ != System.IntPtr.Zero)
                iUnknownCancelCookieOut = new SharpGen.Runtime.ComObject(iUnknownCancelCookieOut_);
            else
                iUnknownCancelCookieOut = null;
            System.GC.KeepAlive(byteStreamRef);
            System.GC.KeepAlive(propsRef);
            System.GC.KeepAlive(callbackRef);
            System.GC.KeepAlive(unkStateRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "resultRef">No documentation.</param>
        /// <param name = "objectTypeRef">No documentation.</param>
        /// <param name = "objectOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFSourceResolver::EndCreateObjectFromByteStream([In] IMFAsyncResult* pResult,[Out] MF_OBJECT_TYPE* pObjectType,[Out] IUnknown** ppObject)</unmanaged>
        /// <unmanaged-short>IMFSourceResolver::EndCreateObjectFromByteStream</unmanaged-short>
        public unsafe void EndCreateObjectFromByteStream(SharpMediaFoundation.AsyncResult resultRef, out SharpMediaFoundation.ObjectType objectTypeRef, out SharpGen.Runtime.IUnknown objectOut)
        {
            System.IntPtr resultRef_ = System.IntPtr.Zero;
            System.IntPtr objectOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            resultRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.AsyncResult>(resultRef);
            fixed (void *objectTypeRef_ = &objectTypeRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)resultRef_, objectTypeRef_, &objectOut_, (*(void ***)this._nativePointer)[8]);
            if (objectOut_ != System.IntPtr.Zero)
                objectOut = new SharpGen.Runtime.ComObject(objectOut_);
            else
                objectOut = null;
            System.GC.KeepAlive(resultRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "iUnknownCancelCookieRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFSourceResolver::CancelObjectCreation([In] IUnknown* pIUnknownCancelCookie)</unmanaged>
        /// <unmanaged-short>IMFSourceResolver::CancelObjectCreation</unmanaged-short>
        public unsafe void CancelObjectCreation(SharpGen.Runtime.IUnknown iUnknownCancelCookieRef)
        {
            System.IntPtr iUnknownCancelCookieRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            iUnknownCancelCookieRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.IUnknown>(iUnknownCancelCookieRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)iUnknownCancelCookieRef_, (*(void ***)this._nativePointer)[9]);
            System.GC.KeepAlive(iUnknownCancelCookieRef);
            __result__.CheckError();
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("83CF873A-F6DA-4bc8-823F-BACFD55DC433")]
    public partial class Topology : SharpMediaFoundation.MediaAttributes
    {
        public Topology(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator Topology(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new Topology(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetTopologyID</unmanaged>
        /// <unmanaged-short>GetTopologyID</unmanaged-short>
        public System.UInt64 TopologyID
        {
            get
            {
                GetTopologyID(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetNodeCount</unmanaged>
        /// <unmanaged-short>GetNodeCount</unmanaged-short>
        public System.UInt16 NodeCount
        {
            get
            {
                GetNodeCount(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetSourceNodeCollection</unmanaged>
        /// <unmanaged-short>GetSourceNodeCollection</unmanaged-short>
        public SharpMediaFoundation.Collection SourceNodeCollection
        {
            get
            {
                GetSourceNodeCollection(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetOutputNodeCollection</unmanaged>
        /// <unmanaged-short>GetOutputNodeCollection</unmanaged-short>
        public SharpMediaFoundation.Collection OutputNodeCollection
        {
            get
            {
                GetOutputNodeCollection(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "iDRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopology::GetTopologyID([Out] unsigned longlong* pID)</unmanaged>
        /// <unmanaged-short>IMFTopology::GetTopologyID</unmanaged-short>
        internal unsafe void GetTopologyID(out System.UInt64 iDRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *iDRef_ = &iDRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, iDRef_, (*(void ***)this._nativePointer)[33]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "nodeRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopology::AddNode([In] IMFTopologyNode* pNode)</unmanaged>
        /// <unmanaged-short>IMFTopology::AddNode</unmanaged-short>
        public unsafe void AddNode(SharpMediaFoundation.TopologyNode nodeRef)
        {
            System.IntPtr nodeRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            nodeRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.TopologyNode>(nodeRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)nodeRef_, (*(void ***)this._nativePointer)[34]);
            System.GC.KeepAlive(nodeRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "nodeRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopology::RemoveNode([In] IMFTopologyNode* pNode)</unmanaged>
        /// <unmanaged-short>IMFTopology::RemoveNode</unmanaged-short>
        public unsafe void RemoveNode(SharpMediaFoundation.TopologyNode nodeRef)
        {
            System.IntPtr nodeRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            nodeRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.TopologyNode>(nodeRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)nodeRef_, (*(void ***)this._nativePointer)[35]);
            System.GC.KeepAlive(nodeRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "wNodesRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopology::GetNodeCount([Out] unsigned short* pwNodes)</unmanaged>
        /// <unmanaged-short>IMFTopology::GetNodeCount</unmanaged-short>
        internal unsafe void GetNodeCount(out System.UInt16 wNodesRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *wNodesRef_ = &wNodesRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, wNodesRef_, (*(void ***)this._nativePointer)[36]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "wIndex">No documentation.</param>
        /// <param name = "nodeOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopology::GetNode([In] unsigned short wIndex,[Out] IMFTopologyNode** ppNode)</unmanaged>
        /// <unmanaged-short>IMFTopology::GetNode</unmanaged-short>
        public unsafe void GetNode(System.UInt16 wIndex, out SharpMediaFoundation.TopologyNode nodeOut)
        {
            System.IntPtr nodeOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, wIndex, &nodeOut_, (*(void ***)this._nativePointer)[37]);
            if (nodeOut_ != System.IntPtr.Zero)
                nodeOut = new SharpMediaFoundation.TopologyNode(nodeOut_);
            else
                nodeOut = null;
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopology::Clear()</unmanaged>
        /// <unmanaged-short>IMFTopology::Clear</unmanaged-short>
        public unsafe void Clear()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[38]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "topologyRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopology::CloneFrom([In, Optional] IMFTopology* pTopology)</unmanaged>
        /// <unmanaged-short>IMFTopology::CloneFrom</unmanaged-short>
        public unsafe void CloneFrom(SharpMediaFoundation.Topology topologyRef)
        {
            System.IntPtr topologyRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            topologyRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.Topology>(topologyRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)topologyRef_, (*(void ***)this._nativePointer)[39]);
            System.GC.KeepAlive(topologyRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "qwTopoNodeID">No documentation.</param>
        /// <param name = "nodeOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopology::GetNodeByID([In] unsigned longlong qwTopoNodeID,[Out] IMFTopologyNode** ppNode)</unmanaged>
        /// <unmanaged-short>IMFTopology::GetNodeByID</unmanaged-short>
        public unsafe void GetNodeByID(System.UInt64 qwTopoNodeID, out SharpMediaFoundation.TopologyNode nodeOut)
        {
            System.IntPtr nodeOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, qwTopoNodeID, &nodeOut_, (*(void ***)this._nativePointer)[40]);
            if (nodeOut_ != System.IntPtr.Zero)
                nodeOut = new SharpMediaFoundation.TopologyNode(nodeOut_);
            else
                nodeOut = null;
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "collectionOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopology::GetSourceNodeCollection([Out] IMFCollection** ppCollection)</unmanaged>
        /// <unmanaged-short>IMFTopology::GetSourceNodeCollection</unmanaged-short>
        internal unsafe void GetSourceNodeCollection(out SharpMediaFoundation.Collection collectionOut)
        {
            System.IntPtr collectionOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &collectionOut_, (*(void ***)this._nativePointer)[41]);
            if (collectionOut_ != System.IntPtr.Zero)
                collectionOut = new SharpMediaFoundation.Collection(collectionOut_);
            else
                collectionOut = null;
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "collectionOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopology::GetOutputNodeCollection([Out] IMFCollection** ppCollection)</unmanaged>
        /// <unmanaged-short>IMFTopology::GetOutputNodeCollection</unmanaged-short>
        internal unsafe void GetOutputNodeCollection(out SharpMediaFoundation.Collection collectionOut)
        {
            System.IntPtr collectionOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &collectionOut_, (*(void ***)this._nativePointer)[42]);
            if (collectionOut_ != System.IntPtr.Zero)
                collectionOut = new SharpMediaFoundation.Collection(collectionOut_);
            else
                collectionOut = null;
            __result__.CheckError();
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("83CF873A-F6DA-4bc8-823F-BACFD55DC430")]
    public partial class TopologyNode : SharpMediaFoundation.MediaAttributes
    {
        public TopologyNode(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator TopologyNode(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new TopologyNode(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SetObject</unmanaged>
        /// <unmanaged-short>SetObject</unmanaged-short>
        public SharpGen.Runtime.IUnknown Object
        {
            set => SetObject(value);
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetObjectW</unmanaged>
        /// <unmanaged-short>GetObjectW</unmanaged-short>
        public SharpGen.Runtime.IUnknown ObjectW
        {
            get
            {
                GetObjectW(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetNodeType</unmanaged>
        /// <unmanaged-short>GetNodeType</unmanaged-short>
        public SharpMediaFoundation.TopologyType NodeType
        {
            get
            {
                GetNodeType(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetTopoNodeID / SetTopoNodeID</unmanaged>
        /// <unmanaged-short>GetTopoNodeID</unmanaged-short>
        public System.UInt64 TopoNodeID
        {
            get
            {
                GetTopoNodeID(out var __output__);
                return __output__;
            }

            set => SetTopoNodeID(value);
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetInputCount</unmanaged>
        /// <unmanaged-short>GetInputCount</unmanaged-short>
        public System.Int32 InputCount
        {
            get
            {
                GetInputCount(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetOutputCount</unmanaged>
        /// <unmanaged-short>GetOutputCount</unmanaged-short>
        public System.Int32 OutputCount
        {
            get
            {
                GetOutputCount(out var __output__);
                return __output__;
            }
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "objectRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::SetObject([In, Optional] IUnknown* pObject)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::SetObject</unmanaged-short>
        internal unsafe void SetObject(SharpGen.Runtime.IUnknown objectRef)
        {
            System.IntPtr objectRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            objectRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.IUnknown>(objectRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)objectRef_, (*(void ***)this._nativePointer)[33]);
            System.GC.KeepAlive(objectRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "objectOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::GetObjectW([Out] IUnknown** ppObject)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::GetObjectW</unmanaged-short>
        internal unsafe void GetObjectW(out SharpGen.Runtime.IUnknown objectOut)
        {
            System.IntPtr objectOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, &objectOut_, (*(void ***)this._nativePointer)[34]);
            if (objectOut_ != System.IntPtr.Zero)
                objectOut = new SharpGen.Runtime.ComObject(objectOut_);
            else
                objectOut = null;
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "typeRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::GetNodeType([Out] MF_TOPOLOGY_TYPE* pType)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::GetNodeType</unmanaged-short>
        internal unsafe void GetNodeType(out SharpMediaFoundation.TopologyType typeRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *typeRef_ = &typeRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, typeRef_, (*(void ***)this._nativePointer)[35]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "iDRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::GetTopoNodeID([Out] unsigned longlong* pID)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::GetTopoNodeID</unmanaged-short>
        internal unsafe void GetTopoNodeID(out System.UInt64 iDRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *iDRef_ = &iDRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, iDRef_, (*(void ***)this._nativePointer)[36]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "ullTopoID">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::SetTopoNodeID([In] unsigned longlong ullTopoID)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::SetTopoNodeID</unmanaged-short>
        internal unsafe void SetTopoNodeID(System.UInt64 ullTopoID)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, ullTopoID, (*(void ***)this._nativePointer)[37]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "cInputsRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::GetInputCount([Out] DWORD* pcInputs)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::GetInputCount</unmanaged-short>
        internal unsafe void GetInputCount(out System.Int32 cInputsRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *cInputsRef_ = &cInputsRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, cInputsRef_, (*(void ***)this._nativePointer)[38]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "cOutputsRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::GetOutputCount([Out] DWORD* pcOutputs)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::GetOutputCount</unmanaged-short>
        internal unsafe void GetOutputCount(out System.Int32 cOutputsRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *cOutputsRef_ = &cOutputsRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, cOutputsRef_, (*(void ***)this._nativePointer)[39]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outputIndex">No documentation.</param>
        /// <param name = "downstreamNodeRef">No documentation.</param>
        /// <param name = "inputIndexOnDownstreamNode">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::ConnectOutput([In] DWORD dwOutputIndex,[In] IMFTopologyNode* pDownstreamNode,[In] DWORD dwInputIndexOnDownstreamNode)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::ConnectOutput</unmanaged-short>
        public unsafe void ConnectOutput(System.Int32 outputIndex, SharpMediaFoundation.TopologyNode downstreamNodeRef, System.Int32 inputIndexOnDownstreamNode)
        {
            System.IntPtr downstreamNodeRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            downstreamNodeRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.TopologyNode>(downstreamNodeRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, outputIndex, (void *)downstreamNodeRef_, inputIndexOnDownstreamNode, (*(void ***)this._nativePointer)[40]);
            System.GC.KeepAlive(downstreamNodeRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outputIndex">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::DisconnectOutput([In] DWORD dwOutputIndex)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::DisconnectOutput</unmanaged-short>
        public unsafe void DisconnectOutput(System.Int32 outputIndex)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, outputIndex, (*(void ***)this._nativePointer)[41]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "inputIndex">No documentation.</param>
        /// <param name = "upstreamNodeOut">No documentation.</param>
        /// <param name = "outputIndexOnUpstreamNodeRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::GetInput([In] DWORD dwInputIndex,[Out] IMFTopologyNode** ppUpstreamNode,[Out] DWORD* pdwOutputIndexOnUpstreamNode)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::GetInput</unmanaged-short>
        public unsafe void GetInput(System.Int32 inputIndex, out SharpMediaFoundation.TopologyNode upstreamNodeOut, out System.Int32 outputIndexOnUpstreamNodeRef)
        {
            System.IntPtr upstreamNodeOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            fixed (void *outputIndexOnUpstreamNodeRef_ = &outputIndexOnUpstreamNodeRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, inputIndex, &upstreamNodeOut_, outputIndexOnUpstreamNodeRef_, (*(void ***)this._nativePointer)[42]);
            if (upstreamNodeOut_ != System.IntPtr.Zero)
                upstreamNodeOut = new SharpMediaFoundation.TopologyNode(upstreamNodeOut_);
            else
                upstreamNodeOut = null;
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outputIndex">No documentation.</param>
        /// <param name = "downstreamNodeOut">No documentation.</param>
        /// <param name = "inputIndexOnDownstreamNodeRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::GetOutput([In] DWORD dwOutputIndex,[Out] IMFTopologyNode** ppDownstreamNode,[Out] DWORD* pdwInputIndexOnDownstreamNode)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::GetOutput</unmanaged-short>
        public unsafe void GetOutput(System.Int32 outputIndex, out SharpMediaFoundation.TopologyNode downstreamNodeOut, out System.Int32 inputIndexOnDownstreamNodeRef)
        {
            System.IntPtr downstreamNodeOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            fixed (void *inputIndexOnDownstreamNodeRef_ = &inputIndexOnDownstreamNodeRef)
                __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, outputIndex, &downstreamNodeOut_, inputIndexOnDownstreamNodeRef_, (*(void ***)this._nativePointer)[43]);
            if (downstreamNodeOut_ != System.IntPtr.Zero)
                downstreamNodeOut = new SharpMediaFoundation.TopologyNode(downstreamNodeOut_);
            else
                downstreamNodeOut = null;
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outputIndex">No documentation.</param>
        /// <param name = "typeRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::SetOutputPrefType([In] DWORD dwOutputIndex,[In] IMFMediaType* pType)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::SetOutputPrefType</unmanaged-short>
        public unsafe void SetOutputPrefType(System.Int32 outputIndex, SharpMediaFoundation.MediaType typeRef)
        {
            System.IntPtr typeRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            typeRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.MediaType>(typeRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, outputIndex, (void *)typeRef_, (*(void ***)this._nativePointer)[44]);
            System.GC.KeepAlive(typeRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outputIndex">No documentation.</param>
        /// <param name = "typeOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::GetOutputPrefType([In] DWORD dwOutputIndex,[Out] IMFMediaType** ppType)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::GetOutputPrefType</unmanaged-short>
        public unsafe void GetOutputPrefType(System.Int32 outputIndex, out SharpMediaFoundation.MediaType typeOut)
        {
            System.IntPtr typeOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, outputIndex, &typeOut_, (*(void ***)this._nativePointer)[45]);
            if (typeOut_ != System.IntPtr.Zero)
                typeOut = new SharpMediaFoundation.MediaType(typeOut_);
            else
                typeOut = null;
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "inputIndex">No documentation.</param>
        /// <param name = "typeRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::SetInputPrefType([In] DWORD dwInputIndex,[In] IMFMediaType* pType)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::SetInputPrefType</unmanaged-short>
        public unsafe void SetInputPrefType(System.Int32 inputIndex, SharpMediaFoundation.MediaType typeRef)
        {
            System.IntPtr typeRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            typeRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.MediaType>(typeRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, inputIndex, (void *)typeRef_, (*(void ***)this._nativePointer)[46]);
            System.GC.KeepAlive(typeRef);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "inputIndex">No documentation.</param>
        /// <param name = "typeOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::GetInputPrefType([In] DWORD dwInputIndex,[Out] IMFMediaType** ppType)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::GetInputPrefType</unmanaged-short>
        public unsafe void GetInputPrefType(System.Int32 inputIndex, out SharpMediaFoundation.MediaType typeOut)
        {
            System.IntPtr typeOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, inputIndex, &typeOut_, (*(void ***)this._nativePointer)[47]);
            if (typeOut_ != System.IntPtr.Zero)
                typeOut = new SharpMediaFoundation.MediaType(typeOut_);
            else
                typeOut = null;
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "nodeRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IMFTopologyNode::CloneFrom([In, Optional] IMFTopologyNode* pNode)</unmanaged>
        /// <unmanaged-short>IMFTopologyNode::CloneFrom</unmanaged-short>
        public unsafe void CloneFrom(SharpMediaFoundation.TopologyNode nodeRef)
        {
            System.IntPtr nodeRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            nodeRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.TopologyNode>(nodeRef);
            __result__ = SharpMediaFoundation.LocalInterop.CalliStdCallint(this._nativePointer, (void *)nodeRef_, (*(void ***)this._nativePointer)[48]);
            System.GC.KeepAlive(nodeRef);
            __result__.CheckError();
        }
    }
}