// <auto-generated/>

namespace SharpMediaFoundation
{
    /// <summary>
    /// Functions
    /// </summary>
    public static partial class EventAttributeKeys
    {
                ///<summary>Constant DoThinning</summary>
        ///<unmanaged>MF_EVENT_DO_THINNING</unmanaged>
        public static readonly MediaAttributeKey<bool> DoThinning = new MediaAttributeKey<bool>("321ea6fb-dad9-46e4-b31d-d2eae7090e30", "DoThinning");
                ///<summary>Constant TransformContext</summary>
        ///<unmanaged>MF_EVENT_MFT_CONTEXT</unmanaged>
        public static readonly MediaAttributeKey<long> TransformContext = new MediaAttributeKey<long>("b7cd31f1-899e-4b41-80c9-26a896d32977", "TransformContext");
                ///<summary>Constant TransformInputStreamId</summary>
        ///<unmanaged>MF_EVENT_MFT_INPUT_STREAM_ID</unmanaged>
        public static readonly MediaAttributeKey<int> TransformInputStreamId = new MediaAttributeKey<int>("f29c2cca-7ae6-42d2-b284-bf837cc874e2", "TransformInputStreamId");
                ///<summary>Constant OutputNode</summary>
        ///<unmanaged>MF_EVENT_OUTPUT_NODE</unmanaged>
        public static readonly MediaAttributeKey<long> OutputNode = new MediaAttributeKey<long>("830f1a8b-c060-46dd-a801-1c95dec9b107", "OutputNode");
                ///<summary>Constant PresentationTimeOffset</summary>
        ///<unmanaged>MF_EVENT_PRESENTATION_TIME_OFFSET</unmanaged>
        public static readonly MediaAttributeKey<long> PresentationTimeOffset = new MediaAttributeKey<long>("5ad914d1-9b45-4a8d-a2c0-81d1e50bfb07", "PresentationTimeOffset");
                ///<summary>Constant ScrubSampleTime</summary>
        ///<unmanaged>MF_EVENT_SCRUBSAMPLE_TIME</unmanaged>
        public static readonly MediaAttributeKey<long> ScrubSampleTime = new MediaAttributeKey<long>("9ac712b3-dcb8-44d5-8d0c-37455a2782e3", "ScrubSampleTime");
                ///<summary>Constant SessionCaps</summary>
        ///<unmanaged>MF_EVENT_SESSIONCAPS</unmanaged>
        public static readonly MediaAttributeKey<int> SessionCaps = new MediaAttributeKey<int>("7e5ebcd0-11b8-4abe-afad-10f6599a7f42", "SessionCaps");
                ///<summary>Constant SessionCapsDelta</summary>
        ///<unmanaged>MF_EVENT_SESSIONCAPS_DELTA</unmanaged>
        public static readonly MediaAttributeKey<int> SessionCapsDelta = new MediaAttributeKey<int>("7e5ebcd1-11b8-4abe-afad-10f6599a7f42", "SessionCapsDelta");
                ///<summary>Constant SourceActualStart</summary>
        ///<unmanaged>MF_EVENT_SOURCE_ACTUAL_START</unmanaged>
        public static readonly MediaAttributeKey<long> SourceActualStart = new MediaAttributeKey<long>("a8cc55a9-6b31-419f-845d-ffb351a2434b", "SourceActualStart");
                ///<summary>Constant SourceCharacteristics</summary>
        ///<unmanaged>MF_EVENT_SOURCE_CHARACTERISTICS</unmanaged>
        public static readonly MediaAttributeKey<int> SourceCharacteristics = new MediaAttributeKey<int>("47db8490-8b22-4f52-afda-9ce1b2d3cfa8", "SourceCharacteristics");
                ///<summary>Constant SourceCharacteristicsOld</summary>
        ///<unmanaged>MF_EVENT_SOURCE_CHARACTERISTICS_OLD</unmanaged>
        public static readonly MediaAttributeKey<int> SourceCharacteristicsOld = new MediaAttributeKey<int>("47db8491-8b22-4f52-afda-9ce1b2d3cfa8", "SourceCharacteristicsOld");
                ///<summary>Constant SourceFakeStart</summary>
        ///<unmanaged>MF_EVENT_SOURCE_FAKE_START</unmanaged>
        public static readonly MediaAttributeKey<int> SourceFakeStart = new MediaAttributeKey<int>("a8cc55a7-6b31-419f-845d-ffb351a2434b", "SourceFakeStart");
                ///<summary>Constant SourceProjectStart</summary>
        ///<unmanaged>MF_EVENT_SOURCE_PROJECTSTART</unmanaged>
        public static readonly MediaAttributeKey<long> SourceProjectStart = new MediaAttributeKey<long>("a8cc55a8-6b31-419f-845d-ffb351a2434b", "SourceProjectStart");
                ///<summary>Constant SourceTopologyCanceled</summary>
        ///<unmanaged>MF_EVENT_SOURCE_TOPOLOGY_CANCELED</unmanaged>
        public static readonly MediaAttributeKey<int> SourceTopologyCanceled = new MediaAttributeKey<int>("db62f650-9a5e-4704-acf3-563bc6a73364", "SourceTopologyCanceled");
                ///<summary>Constant StartPresentationTime</summary>
        ///<unmanaged>MF_EVENT_START_PRESENTATION_TIME</unmanaged>
        public static readonly MediaAttributeKey<long> StartPresentationTime = new MediaAttributeKey<long>("5ad914d0-9b45-4a8d-a2c0-81d1e50bfb07", "StartPresentationTime");
                ///<summary>Constant StartPresentationTimeAtOutput</summary>
        ///<unmanaged>MF_EVENT_START_PRESENTATION_TIME_AT_OUTPUT</unmanaged>
        public static readonly MediaAttributeKey<long> StartPresentationTimeAtOutput = new MediaAttributeKey<long>("5ad914d2-9b45-4a8d-a2c0-81d1e50bfb07", "StartPresentationTimeAtOutput");
                ///<summary>Constant TopologyStatus</summary>
        ///<unmanaged>MF_EVENT_TOPOLOGY_STATUS</unmanaged>
        public static readonly MediaAttributeKey<SharpMediaFoundation.TopologyStatus> TopologyStatus = new MediaAttributeKey<SharpMediaFoundation.TopologyStatus>("30c5018d-9a53-454b-ad9e-6d5f8fa7c43b", "TopologyStatus");
    }

    /// <summary>
    /// Functions
    /// </summary>
    public static partial class MediaFactory
    {
                ///<summary>Constant Version</summary>
        ///<unmanaged>MF_VERSION</unmanaged>
        public const int Version = unchecked ((int)2 << 16 | 112);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "version">No documentation.</param>
        /// <param name = "dwFlags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT MFStartup([In] ULONG Version,[In] DWORD dwFlags)</unmanaged>
        /// <unmanaged-short>MFStartup</unmanaged-short>
        public static unsafe void Startup(System.UInt32 version, System.Int32 dwFlags)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = MFStartup_(version, dwFlags);
            __result__.CheckError();
        }

        [System.Runtime.InteropServices.DllImportAttribute("Mfplat.dll", EntryPoint = "MFStartup", CallingConvention = System.Runtime.InteropServices.CallingConvention.StdCall)]
        private unsafe static extern int MFStartup_(System.UInt32 param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT MFShutdown()</unmanaged>
        /// <unmanaged-short>MFShutdown</unmanaged-short>
        public static unsafe void Shutdown()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = MFShutdown_();
            __result__.CheckError();
        }

        [System.Runtime.InteropServices.DllImportAttribute("Mfplat.dll", EntryPoint = "MFShutdown", CallingConvention = System.Runtime.InteropServices.CallingConvention.StdCall)]
        private unsafe static extern int MFShutdown_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "dwQueue">No documentation.</param>
        /// <param name = "callbackRef">No documentation.</param>
        /// <param name = "stateRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT MFPutWorkItem([In] DWORD dwQueue,[In] IMFAsyncCallback* pCallback,[In] IUnknown* pState)</unmanaged>
        /// <unmanaged-short>MFPutWorkItem</unmanaged-short>
        public static unsafe void PutWorkItem(System.Int32 dwQueue, SharpMediaFoundation.IAsyncCallback callbackRef, SharpGen.Runtime.IUnknown stateRef)
        {
            System.IntPtr callbackRef_ = System.IntPtr.Zero;
            System.IntPtr stateRef_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            callbackRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.IAsyncCallback>(callbackRef);
            stateRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.IUnknown>(stateRef);
            __result__ = MFPutWorkItem_(dwQueue, (void *)callbackRef_, (void *)stateRef_);
            System.GC.KeepAlive(callbackRef);
            System.GC.KeepAlive(stateRef);
            __result__.CheckError();
        }

        [System.Runtime.InteropServices.DllImportAttribute("Mfplat.dll", EntryPoint = "MFPutWorkItem", CallingConvention = System.Runtime.InteropServices.CallingConvention.StdCall)]
        private unsafe static extern int MFPutWorkItem_(int param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "dwWorkQueueRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT MFAllocateWorkQueue([Out] DWORD* pdwWorkQueue)</unmanaged>
        /// <unmanaged-short>MFAllocateWorkQueue</unmanaged-short>
        public static unsafe void AllocateWorkQueue(out System.Int32 dwWorkQueueRef)
        {
            SharpGen.Runtime.Result __result__;
            fixed (void *dwWorkQueueRef_ = &dwWorkQueueRef)
                __result__ = MFAllocateWorkQueue_(dwWorkQueueRef_);
            __result__.CheckError();
        }

        [System.Runtime.InteropServices.DllImportAttribute("Mfplat.dll", EntryPoint = "MFAllocateWorkQueue", CallingConvention = System.Runtime.InteropServices.CallingConvention.StdCall)]
        private unsafe static extern int MFAllocateWorkQueue_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "unkObjectRef">No documentation.</param>
        /// <param name = "callbackRef">No documentation.</param>
        /// <param name = "unkStateRef">No documentation.</param>
        /// <param name = "asyncResultOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT MFCreateAsyncResult([In] IUnknown* punkObject,[In] IMFAsyncCallback* pCallback,[In] IUnknown* punkState,[Out] IMFAsyncResult** ppAsyncResult)</unmanaged>
        /// <unmanaged-short>MFCreateAsyncResult</unmanaged-short>
        public static unsafe void CreateAsyncResult(SharpGen.Runtime.IUnknown unkObjectRef, SharpMediaFoundation.IAsyncCallback callbackRef, SharpGen.Runtime.IUnknown unkStateRef, out SharpMediaFoundation.AsyncResult asyncResultOut)
        {
            System.IntPtr unkObjectRef_ = System.IntPtr.Zero;
            System.IntPtr callbackRef_ = System.IntPtr.Zero;
            System.IntPtr unkStateRef_ = System.IntPtr.Zero;
            System.IntPtr asyncResultOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            unkObjectRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.IUnknown>(unkObjectRef);
            callbackRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.IAsyncCallback>(callbackRef);
            unkStateRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.IUnknown>(unkStateRef);
            __result__ = MFCreateAsyncResult_((void *)unkObjectRef_, (void *)callbackRef_, (void *)unkStateRef_, &asyncResultOut_);
            if (asyncResultOut_ != System.IntPtr.Zero)
                asyncResultOut = new SharpMediaFoundation.AsyncResult(asyncResultOut_);
            else
                asyncResultOut = null;
            System.GC.KeepAlive(unkObjectRef);
            System.GC.KeepAlive(callbackRef);
            System.GC.KeepAlive(unkStateRef);
            __result__.CheckError();
        }

        [System.Runtime.InteropServices.DllImportAttribute("Mfplat.dll", EntryPoint = "MFCreateAsyncResult", CallingConvention = System.Runtime.InteropServices.CallingConvention.StdCall)]
        private unsafe static extern int MFCreateAsyncResult_(void *param0, void *param1, void *param2, void *param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "configurationRef">No documentation.</param>
        /// <param name = "mediaSessionOut">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT MFCreateMediaSession([In] IMFAttributes* pConfiguration,[Out] IMFMediaSession** ppMediaSession)</unmanaged>
        /// <unmanaged-short>MFCreateMediaSession</unmanaged-short>
        public static unsafe void CreateMediaSession(SharpMediaFoundation.MediaAttributes configurationRef, out SharpMediaFoundation.MediaSession mediaSessionOut)
        {
            System.IntPtr configurationRef_ = System.IntPtr.Zero;
            System.IntPtr mediaSessionOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            configurationRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpMediaFoundation.MediaAttributes>(configurationRef);
            __result__ = MFCreateMediaSession_((void *)configurationRef_, &mediaSessionOut_);
            if (mediaSessionOut_ != System.IntPtr.Zero)
                mediaSessionOut = new SharpMediaFoundation.MediaSession(mediaSessionOut_);
            else
                mediaSessionOut = null;
            System.GC.KeepAlive(configurationRef);
            __result__.CheckError();
        }

        [System.Runtime.InteropServices.DllImportAttribute("mf.dll", EntryPoint = "MFCreateMediaSession", CallingConvention = System.Runtime.InteropServices.CallingConvention.StdCall)]
        private unsafe static extern int MFCreateMediaSession_(void *param0, void *param1);
    }

    /// <summary>
    /// Functions
    /// </summary>
    public static partial class MediaServiceKeys
    {
                ///<summary>Constant MetadataProvider</summary>
        ///<unmanaged>MF_METADATA_PROVIDER_SERVICE</unmanaged>
        public static readonly System.Guid MetadataProvider = new System.Guid("db214084-58a4-4d2e-b84f-6f755b2f7a0d");
                ///<summary>Constant PmpServer</summary>
        ///<unmanaged>MF_PMP_SERVER_CONTEXT</unmanaged>
        public static readonly System.Guid PmpServer = new System.Guid("2f00c910-d2cf-4278-8b6a-d077fac3a25f");
                ///<summary>Constant Quality</summary>
        ///<unmanaged>MF_QUALITY_SERVICES</unmanaged>
        public static readonly System.Guid Quality = new System.Guid("b7e2be11-2f96-4640-b52c-282365bdf16c");
                ///<summary>Constant RateControl</summary>
        ///<unmanaged>MF_RATE_CONTROL_SERVICE</unmanaged>
        public static readonly System.Guid RateControl = new System.Guid("866fa297-b802-4bf8-9dc9-5e3b6a9f53c9");
                ///<summary>Constant RemoteProxy</summary>
        ///<unmanaged>MF_REMOTE_PROXY</unmanaged>
        public static readonly System.Guid RemoteProxy = new System.Guid("2f00c90e-d2cf-4278-8b6a-d077fac3a25f");
                ///<summary>Constant Sami</summary>
        ///<unmanaged>MF_SAMI_SERVICE</unmanaged>
        public static readonly System.Guid Sami = new System.Guid("49a89ae7-b4d9-4ef2-aa5c-f65a3e05ae4e");
                ///<summary>Constant SourcePresentationProvider</summary>
        ///<unmanaged>MF_SOURCE_PRESENTATION_PROVIDER_SERVICE</unmanaged>
        public static readonly System.Guid SourcePresentationProvider = new System.Guid("e002aadc-f4af-4ee5-9847-053edf840426");
                ///<summary>Constant TimeCode</summary>
        ///<unmanaged>MF_TIMECODE_SERVICE</unmanaged>
        public static readonly System.Guid TimeCode = new System.Guid("a0d502a7-0eb3-4885-b1b9-9feb0d083454");
                ///<summary>Constant TopologyNodeAttributeEditor</summary>
        ///<unmanaged>MF_TOPONODE_ATTRIBUTE_EDITOR_SERVICE</unmanaged>
        public static readonly System.Guid TopologyNodeAttributeEditor = new System.Guid("65656e1a-077f-4472-83ef-316f11d5087a");
                ///<summary>Constant WrappedObject</summary>
        ///<unmanaged>MF_WRAPPED_OBJECT</unmanaged>
        public static readonly System.Guid WrappedObject = new System.Guid("2b182c4c-d6ac-49f4-8915-f71887db70cd");
                ///<summary>Constant WorkQueue</summary>
        ///<unmanaged>MF_WORKQUEUE_SERVICES</unmanaged>
        public static readonly System.Guid WorkQueue = new System.Guid("8e37d489-41e0-413a-9068-287c886d8dda");
                ///<summary>Constant SaveJob</summary>
        ///<unmanaged>MFNET_SAVEJOB_SERVICE</unmanaged>
        public static readonly System.Guid SaveJob = new System.Guid("b85a587f-3d02-4e52-9565-55d3ec1e7ff7");
                ///<summary>Constant NetworkSourceStatistics</summary>
        ///<unmanaged>MFNETSOURCE_STATISTICS_SERVICE</unmanaged>
        public static readonly System.Guid NetworkSourceStatistics = new System.Guid("3cb1f275-0505-4c5d-ae71-0a556344efa1");
                ///<summary>Constant AudioPolicy</summary>
        ///<unmanaged>MR_AUDIO_POLICY_SERVICE</unmanaged>
        public static readonly System.Guid AudioPolicy = new System.Guid("911fd737-6775-4ab0-a614-297862fdac88");
                ///<summary>Constant CapturePolicyVolume</summary>
        ///<unmanaged>MR_CAPTURE_POLICY_VOLUME_SERVICE</unmanaged>
        public static readonly System.Guid CapturePolicyVolume = new System.Guid("24030acd-107a-4265-975c-414e33e65f2a");
                ///<summary>Constant PolicyVolume</summary>
        ///<unmanaged>MR_POLICY_VOLUME_SERVICE</unmanaged>
        public static readonly System.Guid PolicyVolume = new System.Guid("1abaa2ac-9d3b-47c6-ab48-c59506de784d");
                ///<summary>Constant StreamVolume</summary>
        ///<unmanaged>MR_STREAM_VOLUME_SERVICE</unmanaged>
        public static readonly System.Guid StreamVolume = new System.Guid("f8b5fa2f-32ef-46f5-b172-1321212fb2c4");
    }

    /// <summary>
    /// Functions
    /// </summary>
    public partial class ResultCode
    {
                ///<summary>Constant DxgiDeviceNotInitialized</summary>
        ///<unmanaged>MF_E_DXGI_DEVICE_NOT_INITIALIZED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor DxgiDeviceNotInitialized = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)2147749888UL), "SharpMediaFoundation", "MF_E_DXGI_DEVICE_NOT_INITIALIZED", "DxgiDeviceNotInitialized");
                ///<summary>Constant DxgiNewVideoDevice</summary>
        ///<unmanaged>MF_E_DXGI_NEW_VIDEO_DEVICE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor DxgiNewVideoDevice = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)2147749889UL), "SharpMediaFoundation", "MF_E_DXGI_NEW_VIDEO_DEVICE", "DxgiNewVideoDevice");
                ///<summary>Constant DxgiVideoDeviceLocked</summary>
        ///<unmanaged>MF_E_DXGI_VIDEO_DEVICE_LOCKED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor DxgiVideoDeviceLocked = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)2147749890UL), "SharpMediaFoundation", "MF_E_DXGI_VIDEO_DEVICE_LOCKED", "DxgiVideoDeviceLocked");
                ///<summary>Constant PlatformNotInitialized</summary>
        ///<unmanaged>MF_E_PLATFORM_NOT_INITIALIZED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PlatformNotInitialized = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091440UL), "SharpMediaFoundation", "MF_E_PLATFORM_NOT_INITIALIZED", "PlatformNotInitialized");
                ///<summary>Constant BufferTooSmall</summary>
        ///<unmanaged>MF_E_BUFFERTOOSMALL</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor BufferTooSmall = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091441UL), "SharpMediaFoundation", "MF_E_BUFFERTOOSMALL", "BufferTooSmall");
                ///<summary>Constant InvalidRequest</summary>
        ///<unmanaged>MF_E_INVALIDREQUEST</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidRequest = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091442UL), "SharpMediaFoundation", "MF_E_INVALIDREQUEST", "InvalidRequest");
                ///<summary>Constant InvalidStreamNumber</summary>
        ///<unmanaged>MF_E_INVALIDSTREAMNUMBER</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidStreamNumber = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091443UL), "SharpMediaFoundation", "MF_E_INVALIDSTREAMNUMBER", "InvalidStreamNumber");
                ///<summary>Constant InvalidMediaType</summary>
        ///<unmanaged>MF_E_INVALIDMEDIATYPE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidMediaType = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091444UL), "SharpMediaFoundation", "MF_E_INVALIDMEDIATYPE", "InvalidMediaType");
                ///<summary>Constant NotAccepting</summary>
        ///<unmanaged>MF_E_NOTACCEPTING</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NotAccepting = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091445UL), "SharpMediaFoundation", "MF_E_NOTACCEPTING", "NotAccepting");
                ///<summary>Constant NotInitialized</summary>
        ///<unmanaged>MF_E_NOT_INITIALIZED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NotInitialized = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091446UL), "SharpMediaFoundation", "MF_E_NOT_INITIALIZED", "NotInitialized");
                ///<summary>Constant UnsupportedRepresentation</summary>
        ///<unmanaged>MF_E_UNSUPPORTED_REPRESENTATION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnsupportedRepresentation = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091447UL), "SharpMediaFoundation", "MF_E_UNSUPPORTED_REPRESENTATION", "UnsupportedRepresentation");
                ///<summary>Constant NoMoreTypes</summary>
        ///<unmanaged>MF_E_NO_MORE_TYPES</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoMoreTypes = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091449UL), "SharpMediaFoundation", "MF_E_NO_MORE_TYPES", "NoMoreTypes");
                ///<summary>Constant UnsupportedService</summary>
        ///<unmanaged>MF_E_UNSUPPORTED_SERVICE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnsupportedService = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091450UL), "SharpMediaFoundation", "MF_E_UNSUPPORTED_SERVICE", "UnsupportedService");
                ///<summary>Constant Unexpected</summary>
        ///<unmanaged>MF_E_UNEXPECTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor Unexpected = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091451UL), "SharpMediaFoundation", "MF_E_UNEXPECTED", "Unexpected");
                ///<summary>Constant InvalidName</summary>
        ///<unmanaged>MF_E_INVALIDNAME</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidName = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091452UL), "SharpMediaFoundation", "MF_E_INVALIDNAME", "InvalidName");
                ///<summary>Constant InvalidType</summary>
        ///<unmanaged>MF_E_INVALIDTYPE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidType = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091453UL), "SharpMediaFoundation", "MF_E_INVALIDTYPE", "InvalidType");
                ///<summary>Constant InvalidFileFormat</summary>
        ///<unmanaged>MF_E_INVALID_FILE_FORMAT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidFileFormat = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091454UL), "SharpMediaFoundation", "MF_E_INVALID_FILE_FORMAT", "InvalidFileFormat");
                ///<summary>Constant InvalidIndex</summary>
        ///<unmanaged>MF_E_INVALIDINDEX</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidIndex = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091455UL), "SharpMediaFoundation", "MF_E_INVALIDINDEX", "InvalidIndex");
                ///<summary>Constant InvalidTimestamp</summary>
        ///<unmanaged>MF_E_INVALID_TIMESTAMP</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidTimestamp = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091456UL), "SharpMediaFoundation", "MF_E_INVALID_TIMESTAMP", "InvalidTimestamp");
                ///<summary>Constant UnsupportedScheme</summary>
        ///<unmanaged>MF_E_UNSUPPORTED_SCHEME</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnsupportedScheme = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091459UL), "SharpMediaFoundation", "MF_E_UNSUPPORTED_SCHEME", "UnsupportedScheme");
                ///<summary>Constant UnsupportedByteStreamType</summary>
        ///<unmanaged>MF_E_UNSUPPORTED_BYTESTREAM_TYPE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnsupportedByteStreamType = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091460UL), "SharpMediaFoundation", "MF_E_UNSUPPORTED_BYTESTREAM_TYPE", "UnsupportedByteStreamType");
                ///<summary>Constant UnsupportedTimeFormat</summary>
        ///<unmanaged>MF_E_UNSUPPORTED_TIME_FORMAT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnsupportedTimeFormat = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091461UL), "SharpMediaFoundation", "MF_E_UNSUPPORTED_TIME_FORMAT", "UnsupportedTimeFormat");
                ///<summary>Constant NoSampleTimestamp</summary>
        ///<unmanaged>MF_E_NO_SAMPLE_TIMESTAMP</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoSampleTimestamp = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091464UL), "SharpMediaFoundation", "MF_E_NO_SAMPLE_TIMESTAMP", "NoSampleTimestamp");
                ///<summary>Constant NoSampleDuration</summary>
        ///<unmanaged>MF_E_NO_SAMPLE_DURATION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoSampleDuration = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091465UL), "SharpMediaFoundation", "MF_E_NO_SAMPLE_DURATION", "NoSampleDuration");
                ///<summary>Constant InvalidStreamData</summary>
        ///<unmanaged>MF_E_INVALID_STREAM_DATA</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidStreamData = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091467UL), "SharpMediaFoundation", "MF_E_INVALID_STREAM_DATA", "InvalidStreamData");
                ///<summary>Constant RtUnavailable</summary>
        ///<unmanaged>MF_E_RT_UNAVAILABLE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor RtUnavailable = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091471UL), "SharpMediaFoundation", "MF_E_RT_UNAVAILABLE", "RtUnavailable");
                ///<summary>Constant UnsupportedRate</summary>
        ///<unmanaged>MF_E_UNSUPPORTED_RATE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnsupportedRate = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091472UL), "SharpMediaFoundation", "MF_E_UNSUPPORTED_RATE", "UnsupportedRate");
                ///<summary>Constant ThinningUnsupported</summary>
        ///<unmanaged>MF_E_THINNING_UNSUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ThinningUnsupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091473UL), "SharpMediaFoundation", "MF_E_THINNING_UNSUPPORTED", "ThinningUnsupported");
                ///<summary>Constant ReverseUnsupported</summary>
        ///<unmanaged>MF_E_REVERSE_UNSUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ReverseUnsupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091474UL), "SharpMediaFoundation", "MF_E_REVERSE_UNSUPPORTED", "ReverseUnsupported");
                ///<summary>Constant UnsupportedRateTransition</summary>
        ///<unmanaged>MF_E_UNSUPPORTED_RATE_TRANSITION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnsupportedRateTransition = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091475UL), "SharpMediaFoundation", "MF_E_UNSUPPORTED_RATE_TRANSITION", "UnsupportedRateTransition");
                ///<summary>Constant RateChangePreempted</summary>
        ///<unmanaged>MF_E_RATE_CHANGE_PREEMPTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor RateChangePreempted = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091476UL), "SharpMediaFoundation", "MF_E_RATE_CHANGE_PREEMPTED", "RateChangePreempted");
                ///<summary>Constant NotFound</summary>
        ///<unmanaged>MF_E_NOT_FOUND</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NotFound = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091477UL), "SharpMediaFoundation", "MF_E_NOT_FOUND", "NotFound");
                ///<summary>Constant NotAvailable</summary>
        ///<unmanaged>MF_E_NOT_AVAILABLE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NotAvailable = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091478UL), "SharpMediaFoundation", "MF_E_NOT_AVAILABLE", "NotAvailable");
                ///<summary>Constant NoClock</summary>
        ///<unmanaged>MF_E_NO_CLOCK</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoClock = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091479UL), "SharpMediaFoundation", "MF_E_NO_CLOCK", "NoClock");
                ///<summary>Constant MultipleBegin</summary>
        ///<unmanaged>MF_E_MULTIPLE_BEGIN</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor MultipleBegin = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091481UL), "SharpMediaFoundation", "MF_E_MULTIPLE_BEGIN", "MultipleBegin");
                ///<summary>Constant MultipleSubscribers</summary>
        ///<unmanaged>MF_E_MULTIPLE_SUBSCRIBERS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor MultipleSubscribers = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091482UL), "SharpMediaFoundation", "MF_E_MULTIPLE_SUBSCRIBERS", "MultipleSubscribers");
                ///<summary>Constant TimerOrphaned</summary>
        ///<unmanaged>MF_E_TIMER_ORPHANED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TimerOrphaned = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091483UL), "SharpMediaFoundation", "MF_E_TIMER_ORPHANED", "TimerOrphaned");
                ///<summary>Constant StateTransitionPending</summary>
        ///<unmanaged>MF_E_STATE_TRANSITION_PENDING</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor StateTransitionPending = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091484UL), "SharpMediaFoundation", "MF_E_STATE_TRANSITION_PENDING", "StateTransitionPending");
                ///<summary>Constant UnsupportedStateTransition</summary>
        ///<unmanaged>MF_E_UNSUPPORTED_STATE_TRANSITION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnsupportedStateTransition = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091485UL), "SharpMediaFoundation", "MF_E_UNSUPPORTED_STATE_TRANSITION", "UnsupportedStateTransition");
                ///<summary>Constant UnrecoverableErrorOccurred</summary>
        ///<unmanaged>MF_E_UNRECOVERABLE_ERROR_OCCURRED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnrecoverableErrorOccurred = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091486UL), "SharpMediaFoundation", "MF_E_UNRECOVERABLE_ERROR_OCCURRED", "UnrecoverableErrorOccurred");
                ///<summary>Constant SampleHasTooManyBuffers</summary>
        ///<unmanaged>MF_E_SAMPLE_HAS_TOO_MANY_BUFFERS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor SampleHasTooManyBuffers = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091487UL), "SharpMediaFoundation", "MF_E_SAMPLE_HAS_TOO_MANY_BUFFERS", "SampleHasTooManyBuffers");
                ///<summary>Constant SampleNotWritable</summary>
        ///<unmanaged>MF_E_SAMPLE_NOT_WRITABLE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor SampleNotWritable = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091488UL), "SharpMediaFoundation", "MF_E_SAMPLE_NOT_WRITABLE", "SampleNotWritable");
                ///<summary>Constant InvalidKey</summary>
        ///<unmanaged>MF_E_INVALID_KEY</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidKey = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091490UL), "SharpMediaFoundation", "MF_E_INVALID_KEY", "InvalidKey");
                ///<summary>Constant BadStartupVersion</summary>
        ///<unmanaged>MF_E_BAD_STARTUP_VERSION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor BadStartupVersion = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091491UL), "SharpMediaFoundation", "MF_E_BAD_STARTUP_VERSION", "BadStartupVersion");
                ///<summary>Constant UnsupportedCaption</summary>
        ///<unmanaged>MF_E_UNSUPPORTED_CAPTION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnsupportedCaption = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091492UL), "SharpMediaFoundation", "MF_E_UNSUPPORTED_CAPTION", "UnsupportedCaption");
                ///<summary>Constant InvalidPosition</summary>
        ///<unmanaged>MF_E_INVALID_POSITION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidPosition = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091493UL), "SharpMediaFoundation", "MF_E_INVALID_POSITION", "InvalidPosition");
                ///<summary>Constant AttributeNotFound</summary>
        ///<unmanaged>MF_E_ATTRIBUTENOTFOUND</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AttributeNotFound = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091494UL), "SharpMediaFoundation", "MF_E_ATTRIBUTENOTFOUND", "AttributeNotFound");
                ///<summary>Constant PropertyTypeNotAllowed</summary>
        ///<unmanaged>MF_E_PROPERTY_TYPE_NOT_ALLOWED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PropertyTypeNotAllowed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091495UL), "SharpMediaFoundation", "MF_E_PROPERTY_TYPE_NOT_ALLOWED", "PropertyTypeNotAllowed");
                ///<summary>Constant PropertyTypeNotSupported</summary>
        ///<unmanaged>MF_E_PROPERTY_TYPE_NOT_SUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PropertyTypeNotSupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091496UL), "SharpMediaFoundation", "MF_E_PROPERTY_TYPE_NOT_SUPPORTED", "PropertyTypeNotSupported");
                ///<summary>Constant PropertyEmpty</summary>
        ///<unmanaged>MF_E_PROPERTY_EMPTY</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PropertyEmpty = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091497UL), "SharpMediaFoundation", "MF_E_PROPERTY_EMPTY", "PropertyEmpty");
                ///<summary>Constant PropertyNotEmpty</summary>
        ///<unmanaged>MF_E_PROPERTY_NOT_EMPTY</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PropertyNotEmpty = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091498UL), "SharpMediaFoundation", "MF_E_PROPERTY_NOT_EMPTY", "PropertyNotEmpty");
                ///<summary>Constant PropertyVectorNotAllowed</summary>
        ///<unmanaged>MF_E_PROPERTY_VECTOR_NOT_ALLOWED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PropertyVectorNotAllowed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091499UL), "SharpMediaFoundation", "MF_E_PROPERTY_VECTOR_NOT_ALLOWED", "PropertyVectorNotAllowed");
                ///<summary>Constant PropertyVectorRequired</summary>
        ///<unmanaged>MF_E_PROPERTY_VECTOR_REQUIRED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PropertyVectorRequired = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091500UL), "SharpMediaFoundation", "MF_E_PROPERTY_VECTOR_REQUIRED", "PropertyVectorRequired");
                ///<summary>Constant OperationCancelled</summary>
        ///<unmanaged>MF_E_OPERATION_CANCELLED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor OperationCancelled = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091501UL), "SharpMediaFoundation", "MF_E_OPERATION_CANCELLED", "OperationCancelled");
                ///<summary>Constant ByteStreamNotSeekable</summary>
        ///<unmanaged>MF_E_BYTESTREAM_NOT_SEEKABLE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ByteStreamNotSeekable = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091502UL), "SharpMediaFoundation", "MF_E_BYTESTREAM_NOT_SEEKABLE", "ByteStreamNotSeekable");
                ///<summary>Constant DisabledInSafeMode</summary>
        ///<unmanaged>MF_E_DISABLED_IN_SAFEMODE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor DisabledInSafeMode = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091503UL), "SharpMediaFoundation", "MF_E_DISABLED_IN_SAFEMODE", "DisabledInSafeMode");
                ///<summary>Constant CannotParseByteStream</summary>
        ///<unmanaged>MF_E_CANNOT_PARSE_BYTESTREAM</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CannotParseByteStream = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091504UL), "SharpMediaFoundation", "MF_E_CANNOT_PARSE_BYTESTREAM", "CannotParseByteStream");
                ///<summary>Constant SourceResolverMutuallyExclusiveFlags</summary>
        ///<unmanaged>MF_E_SOURCERESOLVER_MUTUALLY_EXCLUSIVE_FLAGS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor SourceResolverMutuallyExclusiveFlags = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091505UL), "SharpMediaFoundation", "MF_E_SOURCERESOLVER_MUTUALLY_EXCLUSIVE_FLAGS", "SourceResolverMutuallyExclusiveFlags");
                ///<summary>Constant MediaProcWrongState</summary>
        ///<unmanaged>MF_E_MEDIAPROC_WRONGSTATE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor MediaProcWrongState = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091506UL), "SharpMediaFoundation", "MF_E_MEDIAPROC_WRONGSTATE", "MediaProcWrongState");
                ///<summary>Constant RtThroughputNotAvailable</summary>
        ///<unmanaged>MF_E_RT_THROUGHPUT_NOT_AVAILABLE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor RtThroughputNotAvailable = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091507UL), "SharpMediaFoundation", "MF_E_RT_THROUGHPUT_NOT_AVAILABLE", "RtThroughputNotAvailable");
                ///<summary>Constant RtTooManyClasses</summary>
        ///<unmanaged>MF_E_RT_TOO_MANY_CLASSES</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor RtTooManyClasses = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091508UL), "SharpMediaFoundation", "MF_E_RT_TOO_MANY_CLASSES", "RtTooManyClasses");
                ///<summary>Constant RtWouldBlock</summary>
        ///<unmanaged>MF_E_RT_WOULDBLOCK</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor RtWouldBlock = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091509UL), "SharpMediaFoundation", "MF_E_RT_WOULDBLOCK", "RtWouldBlock");
                ///<summary>Constant NoBitPump</summary>
        ///<unmanaged>MF_E_NO_BITPUMP</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoBitPump = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091510UL), "SharpMediaFoundation", "MF_E_NO_BITPUMP", "NoBitPump");
                ///<summary>Constant RtOutOfMemory</summary>
        ///<unmanaged>MF_E_RT_OUTOFMEMORY</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor RtOutOfMemory = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091511UL), "SharpMediaFoundation", "MF_E_RT_OUTOFMEMORY", "RtOutOfMemory");
                ///<summary>Constant RtWorkQueueClassNotSpecified</summary>
        ///<unmanaged>MF_E_RT_WORKQUEUE_CLASS_NOT_SPECIFIED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor RtWorkQueueClassNotSpecified = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091512UL), "SharpMediaFoundation", "MF_E_RT_WORKQUEUE_CLASS_NOT_SPECIFIED", "RtWorkQueueClassNotSpecified");
                ///<summary>Constant InsufficientBuffer</summary>
        ///<unmanaged>MF_E_INSUFFICIENT_BUFFER</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InsufficientBuffer = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106480UL), "SharpMediaFoundation", "MF_E_INSUFFICIENT_BUFFER", "InsufficientBuffer");
                ///<summary>Constant CannotCreateSink</summary>
        ///<unmanaged>MF_E_CANNOT_CREATE_SINK</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CannotCreateSink = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091514UL), "SharpMediaFoundation", "MF_E_CANNOT_CREATE_SINK", "CannotCreateSink");
                ///<summary>Constant ByteStreamUnknownLength</summary>
        ///<unmanaged>MF_E_BYTESTREAM_UNKNOWN_LENGTH</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ByteStreamUnknownLength = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091515UL), "SharpMediaFoundation", "MF_E_BYTESTREAM_UNKNOWN_LENGTH", "ByteStreamUnknownLength");
                ///<summary>Constant SessionPauseWhileStopped</summary>
        ///<unmanaged>MF_E_SESSION_PAUSEWHILESTOPPED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor SessionPauseWhileStopped = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091516UL), "SharpMediaFoundation", "MF_E_SESSION_PAUSEWHILESTOPPED", "SessionPauseWhileStopped");
                ///<summary>Constant FormatChangeNotSupported</summary>
        ///<unmanaged>MF_E_FORMAT_CHANGE_NOT_SUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor FormatChangeNotSupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091518UL), "SharpMediaFoundation", "MF_E_FORMAT_CHANGE_NOT_SUPPORTED", "FormatChangeNotSupported");
                ///<summary>Constant InvalidWorkQueue</summary>
        ///<unmanaged>MF_E_INVALID_WORKQUEUE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidWorkQueue = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091519UL), "SharpMediaFoundation", "MF_E_INVALID_WORKQUEUE", "InvalidWorkQueue");
                ///<summary>Constant DrmUnsupported</summary>
        ///<unmanaged>MF_E_DRM_UNSUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor DrmUnsupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091520UL), "SharpMediaFoundation", "MF_E_DRM_UNSUPPORTED", "DrmUnsupported");
                ///<summary>Constant Unauthorized</summary>
        ///<unmanaged>MF_E_UNAUTHORIZED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor Unauthorized = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091521UL), "SharpMediaFoundation", "MF_E_UNAUTHORIZED", "Unauthorized");
                ///<summary>Constant OutOfRange</summary>
        ///<unmanaged>MF_E_OUT_OF_RANGE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor OutOfRange = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091522UL), "SharpMediaFoundation", "MF_E_OUT_OF_RANGE", "OutOfRange");
                ///<summary>Constant InvalidCodecMerit</summary>
        ///<unmanaged>MF_E_INVALID_CODEC_MERIT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidCodecMerit = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091523UL), "SharpMediaFoundation", "MF_E_INVALID_CODEC_MERIT", "InvalidCodecMerit");
                ///<summary>Constant HwMftFailedStartStreaming</summary>
        ///<unmanaged>MF_E_HW_MFT_FAILED_START_STREAMING</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor HwMftFailedStartStreaming = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091524UL), "SharpMediaFoundation", "MF_E_HW_MFT_FAILED_START_STREAMING", "HwMftFailedStartStreaming");
                ///<summary>Constant OperationInProgress</summary>
        ///<unmanaged>MF_E_OPERATION_IN_PROGRESS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor OperationInProgress = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091525UL), "SharpMediaFoundation", "MF_E_OPERATION_IN_PROGRESS", "OperationInProgress");
                ///<summary>Constant HardwareDrmUnsupported</summary>
        ///<unmanaged>MF_E_HARDWARE_DRM_UNSUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor HardwareDrmUnsupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091526UL), "SharpMediaFoundation", "MF_E_HARDWARE_DRM_UNSUPPORTED", "HardwareDrmUnsupported");
                ///<summary>Constant DurationTooLong</summary>
        ///<unmanaged>MF_E_DURATION_TOO_LONG</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor DurationTooLong = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091527UL), "SharpMediaFoundation", "MF_E_DURATION_TOO_LONG", "DurationTooLong");
                ///<summary>Constant OperationUnsupportedAtD3DFeatureLevel</summary>
        ///<unmanaged>MF_E_OPERATION_UNSUPPORTED_AT_D3D_FEATURE_LEVEL</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor OperationUnsupportedAtD3DFeatureLevel = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091528UL), "SharpMediaFoundation", "MF_E_OPERATION_UNSUPPORTED_AT_D3D_FEATURE_LEVEL", "OperationUnsupportedAtD3DFeatureLevel");
                ///<summary>Constant UnsupportedMediaTypeAtD3DFeatureLevel</summary>
        ///<unmanaged>MF_E_UNSUPPORTED_MEDIATYPE_AT_D3D_FEATURE_LEVEL</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnsupportedMediaTypeAtD3DFeatureLevel = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222091529UL), "SharpMediaFoundation", "MF_E_UNSUPPORTED_MEDIATYPE_AT_D3D_FEATURE_LEVEL", "UnsupportedMediaTypeAtD3DFeatureLevel");
                ///<summary>Constant AsfParsingincomplete</summary>
        ///<unmanaged>MF_E_ASF_PARSINGINCOMPLETE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AsfParsingincomplete = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222092440UL), "SharpMediaFoundation", "MF_E_ASF_PARSINGINCOMPLETE", "AsfParsingincomplete");
                ///<summary>Constant AsfMissingdata</summary>
        ///<unmanaged>MF_E_ASF_MISSINGDATA</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AsfMissingdata = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222092441UL), "SharpMediaFoundation", "MF_E_ASF_MISSINGDATA", "AsfMissingdata");
                ///<summary>Constant AsfInvaliddata</summary>
        ///<unmanaged>MF_E_ASF_INVALIDDATA</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AsfInvaliddata = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222092442UL), "SharpMediaFoundation", "MF_E_ASF_INVALIDDATA", "AsfInvaliddata");
                ///<summary>Constant AsfOpaquepacket</summary>
        ///<unmanaged>MF_E_ASF_OPAQUEPACKET</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AsfOpaquepacket = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222092443UL), "SharpMediaFoundation", "MF_E_ASF_OPAQUEPACKET", "AsfOpaquepacket");
                ///<summary>Constant AsfNoindex</summary>
        ///<unmanaged>MF_E_ASF_NOINDEX</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AsfNoindex = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222092444UL), "SharpMediaFoundation", "MF_E_ASF_NOINDEX", "AsfNoindex");
                ///<summary>Constant AsfOutOfRange</summary>
        ///<unmanaged>MF_E_ASF_OUTOFRANGE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AsfOutOfRange = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222092445UL), "SharpMediaFoundation", "MF_E_ASF_OUTOFRANGE", "AsfOutOfRange");
                ///<summary>Constant AsfIndexNotLoaded</summary>
        ///<unmanaged>MF_E_ASF_INDEXNOTLOADED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AsfIndexNotLoaded = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222092446UL), "SharpMediaFoundation", "MF_E_ASF_INDEXNOTLOADED", "AsfIndexNotLoaded");
                ///<summary>Constant AsfTooManyPayloads</summary>
        ///<unmanaged>MF_E_ASF_TOO_MANY_PAYLOADS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AsfTooManyPayloads = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222092447UL), "SharpMediaFoundation", "MF_E_ASF_TOO_MANY_PAYLOADS", "AsfTooManyPayloads");
                ///<summary>Constant AsfUnsupportedStreamType</summary>
        ///<unmanaged>MF_E_ASF_UNSUPPORTED_STREAM_TYPE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AsfUnsupportedStreamType = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222092448UL), "SharpMediaFoundation", "MF_E_ASF_UNSUPPORTED_STREAM_TYPE", "AsfUnsupportedStreamType");
                ///<summary>Constant AsfDroppedPacket</summary>
        ///<unmanaged>MF_E_ASF_DROPPED_PACKET</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AsfDroppedPacket = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222092449UL), "SharpMediaFoundation", "MF_E_ASF_DROPPED_PACKET", "AsfDroppedPacket");
                ///<summary>Constant NoEventsAvailable</summary>
        ///<unmanaged>MF_E_NO_EVENTS_AVAILABLE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoEventsAvailable = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093440UL), "SharpMediaFoundation", "MF_E_NO_EVENTS_AVAILABLE", "NoEventsAvailable");
                ///<summary>Constant InvalidStateTransition</summary>
        ///<unmanaged>MF_E_INVALID_STATE_TRANSITION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidStateTransition = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093442UL), "SharpMediaFoundation", "MF_E_INVALID_STATE_TRANSITION", "InvalidStateTransition");
                ///<summary>Constant EndOfStream</summary>
        ///<unmanaged>MF_E_END_OF_STREAM</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor EndOfStream = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093444UL), "SharpMediaFoundation", "MF_E_END_OF_STREAM", "EndOfStream");
                ///<summary>Constant Shutdown</summary>
        ///<unmanaged>MF_E_SHUTDOWN</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor Shutdown = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093445UL), "SharpMediaFoundation", "MF_E_SHUTDOWN", "Shutdown");
                ///<summary>Constant Mp3Notfound</summary>
        ///<unmanaged>MF_E_MP3_NOTFOUND</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor Mp3Notfound = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093446UL), "SharpMediaFoundation", "MF_E_MP3_NOTFOUND", "Mp3Notfound");
                ///<summary>Constant Mp3OutOfData</summary>
        ///<unmanaged>MF_E_MP3_OUTOFDATA</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor Mp3OutOfData = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093447UL), "SharpMediaFoundation", "MF_E_MP3_OUTOFDATA", "Mp3OutOfData");
                ///<summary>Constant Mp3NotMp3</summary>
        ///<unmanaged>MF_E_MP3_NOTMP3</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor Mp3NotMp3 = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093448UL), "SharpMediaFoundation", "MF_E_MP3_NOTMP3", "Mp3NotMp3");
                ///<summary>Constant Mp3NotSupported</summary>
        ///<unmanaged>MF_E_MP3_NOTSUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor Mp3NotSupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093449UL), "SharpMediaFoundation", "MF_E_MP3_NOTSUPPORTED", "Mp3NotSupported");
                ///<summary>Constant NoDuration</summary>
        ///<unmanaged>MF_E_NO_DURATION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoDuration = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093450UL), "SharpMediaFoundation", "MF_E_NO_DURATION", "NoDuration");
                ///<summary>Constant InvalidFormat</summary>
        ///<unmanaged>MF_E_INVALID_FORMAT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidFormat = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093452UL), "SharpMediaFoundation", "MF_E_INVALID_FORMAT", "InvalidFormat");
                ///<summary>Constant PropertyNotFound</summary>
        ///<unmanaged>MF_E_PROPERTY_NOT_FOUND</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PropertyNotFound = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093453UL), "SharpMediaFoundation", "MF_E_PROPERTY_NOT_FOUND", "PropertyNotFound");
                ///<summary>Constant PropertyReadOnly</summary>
        ///<unmanaged>MF_E_PROPERTY_READ_ONLY</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PropertyReadOnly = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093454UL), "SharpMediaFoundation", "MF_E_PROPERTY_READ_ONLY", "PropertyReadOnly");
                ///<summary>Constant PropertyNotAllowed</summary>
        ///<unmanaged>MF_E_PROPERTY_NOT_ALLOWED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PropertyNotAllowed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093455UL), "SharpMediaFoundation", "MF_E_PROPERTY_NOT_ALLOWED", "PropertyNotAllowed");
                ///<summary>Constant MediaSourceNotStarted</summary>
        ///<unmanaged>MF_E_MEDIA_SOURCE_NOT_STARTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor MediaSourceNotStarted = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093457UL), "SharpMediaFoundation", "MF_E_MEDIA_SOURCE_NOT_STARTED", "MediaSourceNotStarted");
                ///<summary>Constant UnsupportedFormat</summary>
        ///<unmanaged>MF_E_UNSUPPORTED_FORMAT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnsupportedFormat = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093464UL), "SharpMediaFoundation", "MF_E_UNSUPPORTED_FORMAT", "UnsupportedFormat");
                ///<summary>Constant Mp3BadCrc</summary>
        ///<unmanaged>MF_E_MP3_BAD_CRC</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor Mp3BadCrc = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093465UL), "SharpMediaFoundation", "MF_E_MP3_BAD_CRC", "Mp3BadCrc");
                ///<summary>Constant NotProtected</summary>
        ///<unmanaged>MF_E_NOT_PROTECTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NotProtected = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093466UL), "SharpMediaFoundation", "MF_E_NOT_PROTECTED", "NotProtected");
                ///<summary>Constant MediaSourceWrongState</summary>
        ///<unmanaged>MF_E_MEDIA_SOURCE_WRONGSTATE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor MediaSourceWrongState = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093467UL), "SharpMediaFoundation", "MF_E_MEDIA_SOURCE_WRONGSTATE", "MediaSourceWrongState");
                ///<summary>Constant MediaSourceNoStreamsSelected</summary>
        ///<unmanaged>MF_E_MEDIA_SOURCE_NO_STREAMS_SELECTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor MediaSourceNoStreamsSelected = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093468UL), "SharpMediaFoundation", "MF_E_MEDIA_SOURCE_NO_STREAMS_SELECTED", "MediaSourceNoStreamsSelected");
                ///<summary>Constant CannotFindKeyFrameSample</summary>
        ///<unmanaged>MF_E_CANNOT_FIND_KEYFRAME_SAMPLE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CannotFindKeyFrameSample = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093469UL), "SharpMediaFoundation", "MF_E_CANNOT_FIND_KEYFRAME_SAMPLE", "CannotFindKeyFrameSample");
                ///<summary>Constant UnsupportedCharacteristics</summary>
        ///<unmanaged>MF_E_UNSUPPORTED_CHARACTERISTICS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnsupportedCharacteristics = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093470UL), "SharpMediaFoundation", "MF_E_UNSUPPORTED_CHARACTERISTICS", "UnsupportedCharacteristics");
                ///<summary>Constant NoAudioRecordingDevice</summary>
        ///<unmanaged>MF_E_NO_AUDIO_RECORDING_DEVICE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoAudioRecordingDevice = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093471UL), "SharpMediaFoundation", "MF_E_NO_AUDIO_RECORDING_DEVICE", "NoAudioRecordingDevice");
                ///<summary>Constant AudioRecordingDeviceInUse</summary>
        ///<unmanaged>MF_E_AUDIO_RECORDING_DEVICE_IN_USE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AudioRecordingDeviceInUse = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093472UL), "SharpMediaFoundation", "MF_E_AUDIO_RECORDING_DEVICE_IN_USE", "AudioRecordingDeviceInUse");
                ///<summary>Constant AudioRecordingDeviceInvalidated</summary>
        ///<unmanaged>MF_E_AUDIO_RECORDING_DEVICE_INVALIDATED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AudioRecordingDeviceInvalidated = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093473UL), "SharpMediaFoundation", "MF_E_AUDIO_RECORDING_DEVICE_INVALIDATED", "AudioRecordingDeviceInvalidated");
                ///<summary>Constant VideoRecordingDeviceInvalidated</summary>
        ///<unmanaged>MF_E_VIDEO_RECORDING_DEVICE_INVALIDATED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor VideoRecordingDeviceInvalidated = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093474UL), "SharpMediaFoundation", "MF_E_VIDEO_RECORDING_DEVICE_INVALIDATED", "VideoRecordingDeviceInvalidated");
                ///<summary>Constant VideoRecordingDevicePreempted</summary>
        ///<unmanaged>MF_E_VIDEO_RECORDING_DEVICE_PREEMPTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor VideoRecordingDevicePreempted = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222093475UL), "SharpMediaFoundation", "MF_E_VIDEO_RECORDING_DEVICE_PREEMPTED", "VideoRecordingDevicePreempted");
                ///<summary>Constant NetworkResourceFailure</summary>
        ///<unmanaged>MF_E_NETWORK_RESOURCE_FAILURE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetworkResourceFailure = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094440UL), "SharpMediaFoundation", "MF_E_NETWORK_RESOURCE_FAILURE", "NetworkResourceFailure");
                ///<summary>Constant NetWrite</summary>
        ///<unmanaged>MF_E_NET_WRITE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetWrite = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094441UL), "SharpMediaFoundation", "MF_E_NET_WRITE", "NetWrite");
                ///<summary>Constant NetRead</summary>
        ///<unmanaged>MF_E_NET_READ</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetRead = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094442UL), "SharpMediaFoundation", "MF_E_NET_READ", "NetRead");
                ///<summary>Constant NetRequireNetwork</summary>
        ///<unmanaged>MF_E_NET_REQUIRE_NETWORK</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetRequireNetwork = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094443UL), "SharpMediaFoundation", "MF_E_NET_REQUIRE_NETWORK", "NetRequireNetwork");
                ///<summary>Constant NetRequireAsync</summary>
        ///<unmanaged>MF_E_NET_REQUIRE_ASYNC</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetRequireAsync = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094444UL), "SharpMediaFoundation", "MF_E_NET_REQUIRE_ASYNC", "NetRequireAsync");
                ///<summary>Constant NetBwLevelNotSupported</summary>
        ///<unmanaged>MF_E_NET_BWLEVEL_NOT_SUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetBwLevelNotSupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094445UL), "SharpMediaFoundation", "MF_E_NET_BWLEVEL_NOT_SUPPORTED", "NetBwLevelNotSupported");
                ///<summary>Constant NetStreamGroupsNotSupported</summary>
        ///<unmanaged>MF_E_NET_STREAMGROUPS_NOT_SUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetStreamGroupsNotSupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094446UL), "SharpMediaFoundation", "MF_E_NET_STREAMGROUPS_NOT_SUPPORTED", "NetStreamGroupsNotSupported");
                ///<summary>Constant NetManualSsNotSupported</summary>
        ///<unmanaged>MF_E_NET_MANUALSS_NOT_SUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetManualSsNotSupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094447UL), "SharpMediaFoundation", "MF_E_NET_MANUALSS_NOT_SUPPORTED", "NetManualSsNotSupported");
                ///<summary>Constant NetInvalidPresentationDescriptor</summary>
        ///<unmanaged>MF_E_NET_INVALID_PRESENTATION_DESCRIPTOR</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetInvalidPresentationDescriptor = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094448UL), "SharpMediaFoundation", "MF_E_NET_INVALID_PRESENTATION_DESCRIPTOR", "NetInvalidPresentationDescriptor");
                ///<summary>Constant NetCacheStreamNotFound</summary>
        ///<unmanaged>MF_E_NET_CACHESTREAM_NOT_FOUND</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetCacheStreamNotFound = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094449UL), "SharpMediaFoundation", "MF_E_NET_CACHESTREAM_NOT_FOUND", "NetCacheStreamNotFound");
                ///<summary>Constant NetRequireInput</summary>
        ///<unmanaged>MF_E_NET_REQUIRE_INPUT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetRequireInput = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094452UL), "SharpMediaFoundation", "MF_E_NET_REQUIRE_INPUT", "NetRequireInput");
                ///<summary>Constant NetRedirect</summary>
        ///<unmanaged>MF_E_NET_REDIRECT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetRedirect = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094453UL), "SharpMediaFoundation", "MF_E_NET_REDIRECT", "NetRedirect");
                ///<summary>Constant NetRedirectToProxy</summary>
        ///<unmanaged>MF_E_NET_REDIRECT_TO_PROXY</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetRedirectToProxy = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094454UL), "SharpMediaFoundation", "MF_E_NET_REDIRECT_TO_PROXY", "NetRedirectToProxy");
                ///<summary>Constant NetTooManyRedirects</summary>
        ///<unmanaged>MF_E_NET_TOO_MANY_REDIRECTS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetTooManyRedirects = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094455UL), "SharpMediaFoundation", "MF_E_NET_TOO_MANY_REDIRECTS", "NetTooManyRedirects");
                ///<summary>Constant NetTimeout</summary>
        ///<unmanaged>MF_E_NET_TIMEOUT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetTimeout = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094456UL), "SharpMediaFoundation", "MF_E_NET_TIMEOUT", "NetTimeout");
                ///<summary>Constant NetClientClose</summary>
        ///<unmanaged>MF_E_NET_CLIENT_CLOSE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetClientClose = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094457UL), "SharpMediaFoundation", "MF_E_NET_CLIENT_CLOSE", "NetClientClose");
                ///<summary>Constant NetBadControlData</summary>
        ///<unmanaged>MF_E_NET_BAD_CONTROL_DATA</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetBadControlData = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094458UL), "SharpMediaFoundation", "MF_E_NET_BAD_CONTROL_DATA", "NetBadControlData");
                ///<summary>Constant NetIncompatibleServer</summary>
        ///<unmanaged>MF_E_NET_INCOMPATIBLE_SERVER</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetIncompatibleServer = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094459UL), "SharpMediaFoundation", "MF_E_NET_INCOMPATIBLE_SERVER", "NetIncompatibleServer");
                ///<summary>Constant NetUnsafeUrl</summary>
        ///<unmanaged>MF_E_NET_UNSAFE_URL</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetUnsafeUrl = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094460UL), "SharpMediaFoundation", "MF_E_NET_UNSAFE_URL", "NetUnsafeUrl");
                ///<summary>Constant NetCacheNoData</summary>
        ///<unmanaged>MF_E_NET_CACHE_NO_DATA</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetCacheNoData = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094461UL), "SharpMediaFoundation", "MF_E_NET_CACHE_NO_DATA", "NetCacheNoData");
                ///<summary>Constant NetEol</summary>
        ///<unmanaged>MF_E_NET_EOL</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetEol = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094462UL), "SharpMediaFoundation", "MF_E_NET_EOL", "NetEol");
                ///<summary>Constant NetBadRequest</summary>
        ///<unmanaged>MF_E_NET_BAD_REQUEST</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetBadRequest = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094463UL), "SharpMediaFoundation", "MF_E_NET_BAD_REQUEST", "NetBadRequest");
                ///<summary>Constant NetInternalServerError</summary>
        ///<unmanaged>MF_E_NET_INTERNAL_SERVER_ERROR</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetInternalServerError = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094464UL), "SharpMediaFoundation", "MF_E_NET_INTERNAL_SERVER_ERROR", "NetInternalServerError");
                ///<summary>Constant NetSessionNotFound</summary>
        ///<unmanaged>MF_E_NET_SESSION_NOT_FOUND</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetSessionNotFound = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094465UL), "SharpMediaFoundation", "MF_E_NET_SESSION_NOT_FOUND", "NetSessionNotFound");
                ///<summary>Constant NetNoconnection</summary>
        ///<unmanaged>MF_E_NET_NOCONNECTION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetNoconnection = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094466UL), "SharpMediaFoundation", "MF_E_NET_NOCONNECTION", "NetNoconnection");
                ///<summary>Constant NetConnectionFailure</summary>
        ///<unmanaged>MF_E_NET_CONNECTION_FAILURE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetConnectionFailure = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094467UL), "SharpMediaFoundation", "MF_E_NET_CONNECTION_FAILURE", "NetConnectionFailure");
                ///<summary>Constant NetIncompatiblePushServer</summary>
        ///<unmanaged>MF_E_NET_INCOMPATIBLE_PUSHSERVER</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetIncompatiblePushServer = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094468UL), "SharpMediaFoundation", "MF_E_NET_INCOMPATIBLE_PUSHSERVER", "NetIncompatiblePushServer");
                ///<summary>Constant NetServerAccessDenied</summary>
        ///<unmanaged>MF_E_NET_SERVER_ACCESSDENIED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetServerAccessDenied = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094469UL), "SharpMediaFoundation", "MF_E_NET_SERVER_ACCESSDENIED", "NetServerAccessDenied");
                ///<summary>Constant NetProxyAccessDenied</summary>
        ///<unmanaged>MF_E_NET_PROXY_ACCESSDENIED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetProxyAccessDenied = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094470UL), "SharpMediaFoundation", "MF_E_NET_PROXY_ACCESSDENIED", "NetProxyAccessDenied");
                ///<summary>Constant NetCannotConnect</summary>
        ///<unmanaged>MF_E_NET_CANNOTCONNECT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetCannotConnect = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094471UL), "SharpMediaFoundation", "MF_E_NET_CANNOTCONNECT", "NetCannotConnect");
                ///<summary>Constant NetInvalidPushTemplate</summary>
        ///<unmanaged>MF_E_NET_INVALID_PUSH_TEMPLATE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetInvalidPushTemplate = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094472UL), "SharpMediaFoundation", "MF_E_NET_INVALID_PUSH_TEMPLATE", "NetInvalidPushTemplate");
                ///<summary>Constant NetInvalidPushPublishingPoint</summary>
        ///<unmanaged>MF_E_NET_INVALID_PUSH_PUBLISHING_POINT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetInvalidPushPublishingPoint = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094473UL), "SharpMediaFoundation", "MF_E_NET_INVALID_PUSH_PUBLISHING_POINT", "NetInvalidPushPublishingPoint");
                ///<summary>Constant NetBusy</summary>
        ///<unmanaged>MF_E_NET_BUSY</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetBusy = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094474UL), "SharpMediaFoundation", "MF_E_NET_BUSY", "NetBusy");
                ///<summary>Constant NetResourceGone</summary>
        ///<unmanaged>MF_E_NET_RESOURCE_GONE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetResourceGone = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094475UL), "SharpMediaFoundation", "MF_E_NET_RESOURCE_GONE", "NetResourceGone");
                ///<summary>Constant NetErrorFromProxy</summary>
        ///<unmanaged>MF_E_NET_ERROR_FROM_PROXY</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetErrorFromProxy = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094476UL), "SharpMediaFoundation", "MF_E_NET_ERROR_FROM_PROXY", "NetErrorFromProxy");
                ///<summary>Constant NetProxyTimeout</summary>
        ///<unmanaged>MF_E_NET_PROXY_TIMEOUT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetProxyTimeout = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094477UL), "SharpMediaFoundation", "MF_E_NET_PROXY_TIMEOUT", "NetProxyTimeout");
                ///<summary>Constant NetServerUnavailable</summary>
        ///<unmanaged>MF_E_NET_SERVER_UNAVAILABLE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetServerUnavailable = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094478UL), "SharpMediaFoundation", "MF_E_NET_SERVER_UNAVAILABLE", "NetServerUnavailable");
                ///<summary>Constant NetTooMuchData</summary>
        ///<unmanaged>MF_E_NET_TOO_MUCH_DATA</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetTooMuchData = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094479UL), "SharpMediaFoundation", "MF_E_NET_TOO_MUCH_DATA", "NetTooMuchData");
                ///<summary>Constant NetSessionInvalid</summary>
        ///<unmanaged>MF_E_NET_SESSION_INVALID</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetSessionInvalid = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094480UL), "SharpMediaFoundation", "MF_E_NET_SESSION_INVALID", "NetSessionInvalid");
                ///<summary>Constant OfflineMode</summary>
        ///<unmanaged>MF_E_OFFLINE_MODE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor OfflineMode = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094481UL), "SharpMediaFoundation", "MF_E_OFFLINE_MODE", "OfflineMode");
                ///<summary>Constant NetUdpBlocked</summary>
        ///<unmanaged>MF_E_NET_UDP_BLOCKED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetUdpBlocked = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094482UL), "SharpMediaFoundation", "MF_E_NET_UDP_BLOCKED", "NetUdpBlocked");
                ///<summary>Constant NetUnsupportedConfiguration</summary>
        ///<unmanaged>MF_E_NET_UNSUPPORTED_CONFIGURATION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetUnsupportedConfiguration = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094483UL), "SharpMediaFoundation", "MF_E_NET_UNSUPPORTED_CONFIGURATION", "NetUnsupportedConfiguration");
                ///<summary>Constant NetProtocolDisabled</summary>
        ///<unmanaged>MF_E_NET_PROTOCOL_DISABLED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetProtocolDisabled = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094484UL), "SharpMediaFoundation", "MF_E_NET_PROTOCOL_DISABLED", "NetProtocolDisabled");
                ///<summary>Constant NetCompanionDriverDisconnect</summary>
        ///<unmanaged>MF_E_NET_COMPANION_DRIVER_DISCONNECT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NetCompanionDriverDisconnect = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222094485UL), "SharpMediaFoundation", "MF_E_NET_COMPANION_DRIVER_DISCONNECT", "NetCompanionDriverDisconnect");
                ///<summary>Constant AlreadyInitialized</summary>
        ///<unmanaged>MF_E_ALREADY_INITIALIZED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AlreadyInitialized = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222095440UL), "SharpMediaFoundation", "MF_E_ALREADY_INITIALIZED", "AlreadyInitialized");
                ///<summary>Constant BandwidthOverrun</summary>
        ///<unmanaged>MF_E_BANDWIDTH_OVERRUN</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor BandwidthOverrun = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222095441UL), "SharpMediaFoundation", "MF_E_BANDWIDTH_OVERRUN", "BandwidthOverrun");
                ///<summary>Constant LateSample</summary>
        ///<unmanaged>MF_E_LATE_SAMPLE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor LateSample = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222095442UL), "SharpMediaFoundation", "MF_E_LATE_SAMPLE", "LateSample");
                ///<summary>Constant FlushNeeded</summary>
        ///<unmanaged>MF_E_FLUSH_NEEDED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor FlushNeeded = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222095443UL), "SharpMediaFoundation", "MF_E_FLUSH_NEEDED", "FlushNeeded");
                ///<summary>Constant InvalidProfile</summary>
        ///<unmanaged>MF_E_INVALID_PROFILE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidProfile = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222095444UL), "SharpMediaFoundation", "MF_E_INVALID_PROFILE", "InvalidProfile");
                ///<summary>Constant IndexNotCommitted</summary>
        ///<unmanaged>MF_E_INDEX_NOT_COMMITTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor IndexNotCommitted = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222095445UL), "SharpMediaFoundation", "MF_E_INDEX_NOT_COMMITTED", "IndexNotCommitted");
                ///<summary>Constant NoIndex</summary>
        ///<unmanaged>MF_E_NO_INDEX</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoIndex = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222095446UL), "SharpMediaFoundation", "MF_E_NO_INDEX", "NoIndex");
                ///<summary>Constant CannotIndexInPlace</summary>
        ///<unmanaged>MF_E_CANNOT_INDEX_IN_PLACE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CannotIndexInPlace = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222095447UL), "SharpMediaFoundation", "MF_E_CANNOT_INDEX_IN_PLACE", "CannotIndexInPlace");
                ///<summary>Constant MissingAsfLeakybucket</summary>
        ///<unmanaged>MF_E_MISSING_ASF_LEAKYBUCKET</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor MissingAsfLeakybucket = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222095448UL), "SharpMediaFoundation", "MF_E_MISSING_ASF_LEAKYBUCKET", "MissingAsfLeakybucket");
                ///<summary>Constant InvalidAsfStreamId</summary>
        ///<unmanaged>MF_E_INVALID_ASF_STREAMID</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidAsfStreamId = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222095449UL), "SharpMediaFoundation", "MF_E_INVALID_ASF_STREAMID", "InvalidAsfStreamId");
                ///<summary>Constant StreamSinkRemoved</summary>
        ///<unmanaged>MF_E_STREAMSINK_REMOVED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor StreamSinkRemoved = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222096440UL), "SharpMediaFoundation", "MF_E_STREAMSINK_REMOVED", "StreamSinkRemoved");
                ///<summary>Constant StreamSinksOutOfSync</summary>
        ///<unmanaged>MF_E_STREAMSINKS_OUT_OF_SYNC</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor StreamSinksOutOfSync = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222096442UL), "SharpMediaFoundation", "MF_E_STREAMSINKS_OUT_OF_SYNC", "StreamSinksOutOfSync");
                ///<summary>Constant StreamSinksFixed</summary>
        ///<unmanaged>MF_E_STREAMSINKS_FIXED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor StreamSinksFixed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222096443UL), "SharpMediaFoundation", "MF_E_STREAMSINKS_FIXED", "StreamSinksFixed");
                ///<summary>Constant StreamSinkExists</summary>
        ///<unmanaged>MF_E_STREAMSINK_EXISTS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor StreamSinkExists = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222096444UL), "SharpMediaFoundation", "MF_E_STREAMSINK_EXISTS", "StreamSinkExists");
                ///<summary>Constant SampleAllocatorCanceled</summary>
        ///<unmanaged>MF_E_SAMPLEALLOCATOR_CANCELED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor SampleAllocatorCanceled = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222096445UL), "SharpMediaFoundation", "MF_E_SAMPLEALLOCATOR_CANCELED", "SampleAllocatorCanceled");
                ///<summary>Constant SampleAllocatorEmpty</summary>
        ///<unmanaged>MF_E_SAMPLEALLOCATOR_EMPTY</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor SampleAllocatorEmpty = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222096446UL), "SharpMediaFoundation", "MF_E_SAMPLEALLOCATOR_EMPTY", "SampleAllocatorEmpty");
                ///<summary>Constant SinkAlreadyStopped</summary>
        ///<unmanaged>MF_E_SINK_ALREADYSTOPPED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor SinkAlreadyStopped = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222096447UL), "SharpMediaFoundation", "MF_E_SINK_ALREADYSTOPPED", "SinkAlreadyStopped");
                ///<summary>Constant AsfFilesinkBitrateUnknown</summary>
        ///<unmanaged>MF_E_ASF_FILESINK_BITRATE_UNKNOWN</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AsfFilesinkBitrateUnknown = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222096448UL), "SharpMediaFoundation", "MF_E_ASF_FILESINK_BITRATE_UNKNOWN", "AsfFilesinkBitrateUnknown");
                ///<summary>Constant SinkNoStreams</summary>
        ///<unmanaged>MF_E_SINK_NO_STREAMS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor SinkNoStreams = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222096449UL), "SharpMediaFoundation", "MF_E_SINK_NO_STREAMS", "SinkNoStreams");
                ///<summary>Constant MetadataTooLong</summary>
        ///<unmanaged>MF_E_METADATA_TOO_LONG</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor MetadataTooLong = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222096451UL), "SharpMediaFoundation", "MF_E_METADATA_TOO_LONG", "MetadataTooLong");
                ///<summary>Constant SinkNoSamplesProcessed</summary>
        ///<unmanaged>MF_E_SINK_NO_SAMPLES_PROCESSED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor SinkNoSamplesProcessed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222096452UL), "SharpMediaFoundation", "MF_E_SINK_NO_SAMPLES_PROCESSED", "SinkNoSamplesProcessed");
                ///<summary>Constant SinkHeadersNotFound</summary>
        ///<unmanaged>MF_E_SINK_HEADERS_NOT_FOUND</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor SinkHeadersNotFound = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222096453UL), "SharpMediaFoundation", "MF_E_SINK_HEADERS_NOT_FOUND", "SinkHeadersNotFound");
                ///<summary>Constant VideoRenNoProcampHw</summary>
        ///<unmanaged>MF_E_VIDEO_REN_NO_PROCAMP_HW</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor VideoRenNoProcampHw = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222097440UL), "SharpMediaFoundation", "MF_E_VIDEO_REN_NO_PROCAMP_HW", "VideoRenNoProcampHw");
                ///<summary>Constant VideoRenNoDeinterlaceHw</summary>
        ///<unmanaged>MF_E_VIDEO_REN_NO_DEINTERLACE_HW</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor VideoRenNoDeinterlaceHw = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222097441UL), "SharpMediaFoundation", "MF_E_VIDEO_REN_NO_DEINTERLACE_HW", "VideoRenNoDeinterlaceHw");
                ///<summary>Constant VideoRenCopyprotFailed</summary>
        ///<unmanaged>MF_E_VIDEO_REN_COPYPROT_FAILED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor VideoRenCopyprotFailed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222097442UL), "SharpMediaFoundation", "MF_E_VIDEO_REN_COPYPROT_FAILED", "VideoRenCopyprotFailed");
                ///<summary>Constant VideoRenSurfaceNotShared</summary>
        ///<unmanaged>MF_E_VIDEO_REN_SURFACE_NOT_SHARED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor VideoRenSurfaceNotShared = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222097443UL), "SharpMediaFoundation", "MF_E_VIDEO_REN_SURFACE_NOT_SHARED", "VideoRenSurfaceNotShared");
                ///<summary>Constant VideoDeviceLocked</summary>
        ///<unmanaged>MF_E_VIDEO_DEVICE_LOCKED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor VideoDeviceLocked = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222097444UL), "SharpMediaFoundation", "MF_E_VIDEO_DEVICE_LOCKED", "VideoDeviceLocked");
                ///<summary>Constant NewVideoDevice</summary>
        ///<unmanaged>MF_E_NEW_VIDEO_DEVICE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NewVideoDevice = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222097445UL), "SharpMediaFoundation", "MF_E_NEW_VIDEO_DEVICE", "NewVideoDevice");
                ///<summary>Constant NoVideoSampleAvailable</summary>
        ///<unmanaged>MF_E_NO_VIDEO_SAMPLE_AVAILABLE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoVideoSampleAvailable = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222097446UL), "SharpMediaFoundation", "MF_E_NO_VIDEO_SAMPLE_AVAILABLE", "NoVideoSampleAvailable");
                ///<summary>Constant NoAudioPlaybackDevice</summary>
        ///<unmanaged>MF_E_NO_AUDIO_PLAYBACK_DEVICE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoAudioPlaybackDevice = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222097540UL), "SharpMediaFoundation", "MF_E_NO_AUDIO_PLAYBACK_DEVICE", "NoAudioPlaybackDevice");
                ///<summary>Constant AudioPlaybackDeviceInUse</summary>
        ///<unmanaged>MF_E_AUDIO_PLAYBACK_DEVICE_IN_USE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AudioPlaybackDeviceInUse = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222097541UL), "SharpMediaFoundation", "MF_E_AUDIO_PLAYBACK_DEVICE_IN_USE", "AudioPlaybackDeviceInUse");
                ///<summary>Constant AudioPlaybackDeviceInvalidated</summary>
        ///<unmanaged>MF_E_AUDIO_PLAYBACK_DEVICE_INVALIDATED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AudioPlaybackDeviceInvalidated = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222097542UL), "SharpMediaFoundation", "MF_E_AUDIO_PLAYBACK_DEVICE_INVALIDATED", "AudioPlaybackDeviceInvalidated");
                ///<summary>Constant AudioServiceNotRunning</summary>
        ///<unmanaged>MF_E_AUDIO_SERVICE_NOT_RUNNING</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AudioServiceNotRunning = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222097543UL), "SharpMediaFoundation", "MF_E_AUDIO_SERVICE_NOT_RUNNING", "AudioServiceNotRunning");
                ///<summary>Constant AudioBufferSizeError</summary>
        ///<unmanaged>MF_E_AUDIO_BUFFER_SIZE_ERROR</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AudioBufferSizeError = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222097544UL), "SharpMediaFoundation", "MF_E_AUDIO_BUFFER_SIZE_ERROR", "AudioBufferSizeError");
                ///<summary>Constant AudioClientWrapperSpoofError</summary>
        ///<unmanaged>MF_E_AUDIO_CLIENT_WRAPPER_SPOOF_ERROR</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AudioClientWrapperSpoofError = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222097545UL), "SharpMediaFoundation", "MF_E_AUDIO_CLIENT_WRAPPER_SPOOF_ERROR", "AudioClientWrapperSpoofError");
                ///<summary>Constant TopoInvalidOptionalNode</summary>
        ///<unmanaged>MF_E_TOPO_INVALID_OPTIONAL_NODE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TopoInvalidOptionalNode = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222098446UL), "SharpMediaFoundation", "MF_E_TOPO_INVALID_OPTIONAL_NODE", "TopoInvalidOptionalNode");
                ///<summary>Constant TopoCannotFindDecryptor</summary>
        ///<unmanaged>MF_E_TOPO_CANNOT_FIND_DECRYPTOR</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TopoCannotFindDecryptor = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222098449UL), "SharpMediaFoundation", "MF_E_TOPO_CANNOT_FIND_DECRYPTOR", "TopoCannotFindDecryptor");
                ///<summary>Constant TopoCodecNotFound</summary>
        ///<unmanaged>MF_E_TOPO_CODEC_NOT_FOUND</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TopoCodecNotFound = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222098450UL), "SharpMediaFoundation", "MF_E_TOPO_CODEC_NOT_FOUND", "TopoCodecNotFound");
                ///<summary>Constant TopoCannotConnect</summary>
        ///<unmanaged>MF_E_TOPO_CANNOT_CONNECT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TopoCannotConnect = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222098451UL), "SharpMediaFoundation", "MF_E_TOPO_CANNOT_CONNECT", "TopoCannotConnect");
                ///<summary>Constant TopoUnsupported</summary>
        ///<unmanaged>MF_E_TOPO_UNSUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TopoUnsupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222098452UL), "SharpMediaFoundation", "MF_E_TOPO_UNSUPPORTED", "TopoUnsupported");
                ///<summary>Constant TopoInvalidTimeAttributes</summary>
        ///<unmanaged>MF_E_TOPO_INVALID_TIME_ATTRIBUTES</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TopoInvalidTimeAttributes = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222098453UL), "SharpMediaFoundation", "MF_E_TOPO_INVALID_TIME_ATTRIBUTES", "TopoInvalidTimeAttributes");
                ///<summary>Constant TopoLoopsInTopology</summary>
        ///<unmanaged>MF_E_TOPO_LOOPS_IN_TOPOLOGY</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TopoLoopsInTopology = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222098454UL), "SharpMediaFoundation", "MF_E_TOPO_LOOPS_IN_TOPOLOGY", "TopoLoopsInTopology");
                ///<summary>Constant TopoMissingPresentationDescriptor</summary>
        ///<unmanaged>MF_E_TOPO_MISSING_PRESENTATION_DESCRIPTOR</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TopoMissingPresentationDescriptor = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222098455UL), "SharpMediaFoundation", "MF_E_TOPO_MISSING_PRESENTATION_DESCRIPTOR", "TopoMissingPresentationDescriptor");
                ///<summary>Constant TopoMissingStreamDescriptor</summary>
        ///<unmanaged>MF_E_TOPO_MISSING_STREAM_DESCRIPTOR</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TopoMissingStreamDescriptor = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222098456UL), "SharpMediaFoundation", "MF_E_TOPO_MISSING_STREAM_DESCRIPTOR", "TopoMissingStreamDescriptor");
                ///<summary>Constant TopoStreamDescriptorNotSelected</summary>
        ///<unmanaged>MF_E_TOPO_STREAM_DESCRIPTOR_NOT_SELECTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TopoStreamDescriptorNotSelected = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222098457UL), "SharpMediaFoundation", "MF_E_TOPO_STREAM_DESCRIPTOR_NOT_SELECTED", "TopoStreamDescriptorNotSelected");
                ///<summary>Constant TopoMissingSource</summary>
        ///<unmanaged>MF_E_TOPO_MISSING_SOURCE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TopoMissingSource = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222098458UL), "SharpMediaFoundation", "MF_E_TOPO_MISSING_SOURCE", "TopoMissingSource");
                ///<summary>Constant TopoSinkActivatesUnsupported</summary>
        ///<unmanaged>MF_E_TOPO_SINK_ACTIVATES_UNSUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TopoSinkActivatesUnsupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222098459UL), "SharpMediaFoundation", "MF_E_TOPO_SINK_ACTIVATES_UNSUPPORTED", "TopoSinkActivatesUnsupported");
                ///<summary>Constant SequencerUnknownSegmentId</summary>
        ///<unmanaged>MF_E_SEQUENCER_UNKNOWN_SEGMENT_ID</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor SequencerUnknownSegmentId = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222102444UL), "SharpMediaFoundation", "MF_E_SEQUENCER_UNKNOWN_SEGMENT_ID", "SequencerUnknownSegmentId");
                ///<summary>Constant NoSourceInCache</summary>
        ///<unmanaged>MF_E_NO_SOURCE_IN_CACHE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoSourceInCache = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222102446UL), "SharpMediaFoundation", "MF_E_NO_SOURCE_IN_CACHE", "NoSourceInCache");
                ///<summary>Constant TransformTypeNotSet</summary>
        ///<unmanaged>MF_E_TRANSFORM_TYPE_NOT_SET</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformTypeNotSet = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105440UL), "SharpMediaFoundation", "MF_E_TRANSFORM_TYPE_NOT_SET", "TransformTypeNotSet");
                ///<summary>Constant TransformStreamChange</summary>
        ///<unmanaged>MF_E_TRANSFORM_STREAM_CHANGE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformStreamChange = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105441UL), "SharpMediaFoundation", "MF_E_TRANSFORM_STREAM_CHANGE", "TransformStreamChange");
                ///<summary>Constant TransformInputRemaining</summary>
        ///<unmanaged>MF_E_TRANSFORM_INPUT_REMAINING</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformInputRemaining = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105442UL), "SharpMediaFoundation", "MF_E_TRANSFORM_INPUT_REMAINING", "TransformInputRemaining");
                ///<summary>Constant TransformProfileMissing</summary>
        ///<unmanaged>MF_E_TRANSFORM_PROFILE_MISSING</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformProfileMissing = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105443UL), "SharpMediaFoundation", "MF_E_TRANSFORM_PROFILE_MISSING", "TransformProfileMissing");
                ///<summary>Constant TransformProfileInvalidOrCorrupt</summary>
        ///<unmanaged>MF_E_TRANSFORM_PROFILE_INVALID_OR_CORRUPT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformProfileInvalidOrCorrupt = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105444UL), "SharpMediaFoundation", "MF_E_TRANSFORM_PROFILE_INVALID_OR_CORRUPT", "TransformProfileInvalidOrCorrupt");
                ///<summary>Constant TransformProfileTruncated</summary>
        ///<unmanaged>MF_E_TRANSFORM_PROFILE_TRUNCATED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformProfileTruncated = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105445UL), "SharpMediaFoundation", "MF_E_TRANSFORM_PROFILE_TRUNCATED", "TransformProfileTruncated");
                ///<summary>Constant TransformPropertyPidNotRecognized</summary>
        ///<unmanaged>MF_E_TRANSFORM_PROPERTY_PID_NOT_RECOGNIZED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformPropertyPidNotRecognized = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105446UL), "SharpMediaFoundation", "MF_E_TRANSFORM_PROPERTY_PID_NOT_RECOGNIZED", "TransformPropertyPidNotRecognized");
                ///<summary>Constant TransformPropertyVariantTypeWrong</summary>
        ///<unmanaged>MF_E_TRANSFORM_PROPERTY_VARIANT_TYPE_WRONG</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformPropertyVariantTypeWrong = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105447UL), "SharpMediaFoundation", "MF_E_TRANSFORM_PROPERTY_VARIANT_TYPE_WRONG", "TransformPropertyVariantTypeWrong");
                ///<summary>Constant TransformPropertyNotWriteable</summary>
        ///<unmanaged>MF_E_TRANSFORM_PROPERTY_NOT_WRITEABLE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformPropertyNotWriteable = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105448UL), "SharpMediaFoundation", "MF_E_TRANSFORM_PROPERTY_NOT_WRITEABLE", "TransformPropertyNotWriteable");
                ///<summary>Constant TransformPropertyArrayValueWrongNumDim</summary>
        ///<unmanaged>MF_E_TRANSFORM_PROPERTY_ARRAY_VALUE_WRONG_NUM_DIM</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformPropertyArrayValueWrongNumDim = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105449UL), "SharpMediaFoundation", "MF_E_TRANSFORM_PROPERTY_ARRAY_VALUE_WRONG_NUM_DIM", "TransformPropertyArrayValueWrongNumDim");
                ///<summary>Constant TransformPropertyValueSizeWrong</summary>
        ///<unmanaged>MF_E_TRANSFORM_PROPERTY_VALUE_SIZE_WRONG</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformPropertyValueSizeWrong = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105450UL), "SharpMediaFoundation", "MF_E_TRANSFORM_PROPERTY_VALUE_SIZE_WRONG", "TransformPropertyValueSizeWrong");
                ///<summary>Constant TransformPropertyValueOutOfRange</summary>
        ///<unmanaged>MF_E_TRANSFORM_PROPERTY_VALUE_OUT_OF_RANGE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformPropertyValueOutOfRange = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105451UL), "SharpMediaFoundation", "MF_E_TRANSFORM_PROPERTY_VALUE_OUT_OF_RANGE", "TransformPropertyValueOutOfRange");
                ///<summary>Constant TransformPropertyValueIncompatible</summary>
        ///<unmanaged>MF_E_TRANSFORM_PROPERTY_VALUE_INCOMPATIBLE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformPropertyValueIncompatible = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105452UL), "SharpMediaFoundation", "MF_E_TRANSFORM_PROPERTY_VALUE_INCOMPATIBLE", "TransformPropertyValueIncompatible");
                ///<summary>Constant TransformNotPossibleForCurrentOutputMediaType</summary>
        ///<unmanaged>MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_OUTPUT_MEDIATYPE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformNotPossibleForCurrentOutputMediaType = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105453UL), "SharpMediaFoundation", "MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_OUTPUT_MEDIATYPE", "TransformNotPossibleForCurrentOutputMediaType");
                ///<summary>Constant TransformNotPossibleForCurrentInputMediaType</summary>
        ///<unmanaged>MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_INPUT_MEDIATYPE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformNotPossibleForCurrentInputMediaType = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105454UL), "SharpMediaFoundation", "MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_INPUT_MEDIATYPE", "TransformNotPossibleForCurrentInputMediaType");
                ///<summary>Constant TransformNotPossibleForCurrentMediaTypeCombination</summary>
        ///<unmanaged>MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_MEDIATYPE_COMBINATION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformNotPossibleForCurrentMediaTypeCombination = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105455UL), "SharpMediaFoundation", "MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_MEDIATYPE_COMBINATION", "TransformNotPossibleForCurrentMediaTypeCombination");
                ///<summary>Constant TransformConflictsWithOtherCurrentlyEnabledFeatures</summary>
        ///<unmanaged>MF_E_TRANSFORM_CONFLICTS_WITH_OTHER_CURRENTLY_ENABLED_FEATURES</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformConflictsWithOtherCurrentlyEnabledFeatures = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105456UL), "SharpMediaFoundation", "MF_E_TRANSFORM_CONFLICTS_WITH_OTHER_CURRENTLY_ENABLED_FEATURES", "TransformConflictsWithOtherCurrentlyEnabledFeatures");
                ///<summary>Constant TransformNeedMoreInput</summary>
        ///<unmanaged>MF_E_TRANSFORM_NEED_MORE_INPUT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformNeedMoreInput = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105458UL), "SharpMediaFoundation", "MF_E_TRANSFORM_NEED_MORE_INPUT", "TransformNeedMoreInput");
                ///<summary>Constant TransformNotPossibleForCurrentSpeakerConfig</summary>
        ///<unmanaged>MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_SPKR_CONFIG</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformNotPossibleForCurrentSpeakerConfig = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105459UL), "SharpMediaFoundation", "MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_SPKR_CONFIG", "TransformNotPossibleForCurrentSpeakerConfig");
                ///<summary>Constant TransformCannotChangeMediaTypeWhileProcessing</summary>
        ///<unmanaged>MF_E_TRANSFORM_CANNOT_CHANGE_MEDIATYPE_WHILE_PROCESSING</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformCannotChangeMediaTypeWhileProcessing = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105460UL), "SharpMediaFoundation", "MF_E_TRANSFORM_CANNOT_CHANGE_MEDIATYPE_WHILE_PROCESSING", "TransformCannotChangeMediaTypeWhileProcessing");
                ///<summary>Constant UnsupportedD3DType</summary>
        ///<unmanaged>MF_E_UNSUPPORTED_D3D_TYPE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnsupportedD3DType = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105462UL), "SharpMediaFoundation", "MF_E_UNSUPPORTED_D3D_TYPE", "UnsupportedD3DType");
                ///<summary>Constant TransformAsyncLocked</summary>
        ///<unmanaged>MF_E_TRANSFORM_ASYNC_LOCKED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformAsyncLocked = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105463UL), "SharpMediaFoundation", "MF_E_TRANSFORM_ASYNC_LOCKED", "TransformAsyncLocked");
                ///<summary>Constant TransformCannotInitializeAcmDriver</summary>
        ///<unmanaged>MF_E_TRANSFORM_CANNOT_INITIALIZE_ACM_DRIVER</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformCannotInitializeAcmDriver = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105464UL), "SharpMediaFoundation", "MF_E_TRANSFORM_CANNOT_INITIALIZE_ACM_DRIVER", "TransformCannotInitializeAcmDriver");
                ///<summary>Constant TransformStreamInvalidResolution</summary>
        ///<unmanaged>MF_E_TRANSFORM_STREAM_INVALID_RESOLUTION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformStreamInvalidResolution = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105465UL), "SharpMediaFoundation", "MF_E_TRANSFORM_STREAM_INVALID_RESOLUTION", "TransformStreamInvalidResolution");
                ///<summary>Constant TransformAsyncMftNotSupported</summary>
        ///<unmanaged>MF_E_TRANSFORM_ASYNC_MFT_NOT_SUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformAsyncMftNotSupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105466UL), "SharpMediaFoundation", "MF_E_TRANSFORM_ASYNC_MFT_NOT_SUPPORTED", "TransformAsyncMftNotSupported");
                ///<summary>Constant TransformExAttributeNotSupported</summary>
        ///<unmanaged>MF_E_TRANSFORM_EXATTRIBUTE_NOT_SUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TransformExAttributeNotSupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222105468UL), "SharpMediaFoundation", "MF_E_TRANSFORM_EXATTRIBUTE_NOT_SUPPORTED", "TransformExAttributeNotSupported");
                ///<summary>Constant LicenseIncorrectRights</summary>
        ///<unmanaged>MF_E_LICENSE_INCORRECT_RIGHTS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor LicenseIncorrectRights = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106440UL), "SharpMediaFoundation", "MF_E_LICENSE_INCORRECT_RIGHTS", "LicenseIncorrectRights");
                ///<summary>Constant LicenseOutOfDate</summary>
        ///<unmanaged>MF_E_LICENSE_OUTOFDATE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor LicenseOutOfDate = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106441UL), "SharpMediaFoundation", "MF_E_LICENSE_OUTOFDATE", "LicenseOutOfDate");
                ///<summary>Constant LicenseRequired</summary>
        ///<unmanaged>MF_E_LICENSE_REQUIRED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor LicenseRequired = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106442UL), "SharpMediaFoundation", "MF_E_LICENSE_REQUIRED", "LicenseRequired");
                ///<summary>Constant DrmHardwareInconsistent</summary>
        ///<unmanaged>MF_E_DRM_HARDWARE_INCONSISTENT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor DrmHardwareInconsistent = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106443UL), "SharpMediaFoundation", "MF_E_DRM_HARDWARE_INCONSISTENT", "DrmHardwareInconsistent");
                ///<summary>Constant NoContentProtectionManager</summary>
        ///<unmanaged>MF_E_NO_CONTENT_PROTECTION_MANAGER</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoContentProtectionManager = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106444UL), "SharpMediaFoundation", "MF_E_NO_CONTENT_PROTECTION_MANAGER", "NoContentProtectionManager");
                ///<summary>Constant LicenseRestoreNoRights</summary>
        ///<unmanaged>MF_E_LICENSE_RESTORE_NO_RIGHTS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor LicenseRestoreNoRights = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106445UL), "SharpMediaFoundation", "MF_E_LICENSE_RESTORE_NO_RIGHTS", "LicenseRestoreNoRights");
                ///<summary>Constant BackupRestrictedLicense</summary>
        ///<unmanaged>MF_E_BACKUP_RESTRICTED_LICENSE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor BackupRestrictedLicense = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106446UL), "SharpMediaFoundation", "MF_E_BACKUP_RESTRICTED_LICENSE", "BackupRestrictedLicense");
                ///<summary>Constant LicenseRestoreNeedsIndividualization</summary>
        ///<unmanaged>MF_E_LICENSE_RESTORE_NEEDS_INDIVIDUALIZATION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor LicenseRestoreNeedsIndividualization = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106447UL), "SharpMediaFoundation", "MF_E_LICENSE_RESTORE_NEEDS_INDIVIDUALIZATION", "LicenseRestoreNeedsIndividualization");
                ///<summary>Constant ComponentRevoked</summary>
        ///<unmanaged>MF_E_COMPONENT_REVOKED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ComponentRevoked = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106449UL), "SharpMediaFoundation", "MF_E_COMPONENT_REVOKED", "ComponentRevoked");
                ///<summary>Constant TrustDisabled</summary>
        ///<unmanaged>MF_E_TRUST_DISABLED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TrustDisabled = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106450UL), "SharpMediaFoundation", "MF_E_TRUST_DISABLED", "TrustDisabled");
                ///<summary>Constant WindowsMediaDrmOutputTrustAuthorityNoAction</summary>
        ///<unmanaged>MF_E_WMDRMOTA_NO_ACTION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor WindowsMediaDrmOutputTrustAuthorityNoAction = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106451UL), "SharpMediaFoundation", "MF_E_WMDRMOTA_NO_ACTION", "WindowsMediaDrmOutputTrustAuthorityNoAction");
                ///<summary>Constant WindowsMediaDrmOutputTrustAuthorityActionAlreadySet</summary>
        ///<unmanaged>MF_E_WMDRMOTA_ACTION_ALREADY_SET</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor WindowsMediaDrmOutputTrustAuthorityActionAlreadySet = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106452UL), "SharpMediaFoundation", "MF_E_WMDRMOTA_ACTION_ALREADY_SET", "WindowsMediaDrmOutputTrustAuthorityActionAlreadySet");
                ///<summary>Constant WindowsMediaDrmOutputTrustAuthorityDrmHeaderNotAvailable</summary>
        ///<unmanaged>MF_E_WMDRMOTA_DRM_HEADER_NOT_AVAILABLE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor WindowsMediaDrmOutputTrustAuthorityDrmHeaderNotAvailable = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106453UL), "SharpMediaFoundation", "MF_E_WMDRMOTA_DRM_HEADER_NOT_AVAILABLE", "WindowsMediaDrmOutputTrustAuthorityDrmHeaderNotAvailable");
                ///<summary>Constant WindowsMediaDrmOutputTrustAuthorityDrmEncryptionSchemeNotSupported</summary>
        ///<unmanaged>MF_E_WMDRMOTA_DRM_ENCRYPTION_SCHEME_NOT_SUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor WindowsMediaDrmOutputTrustAuthorityDrmEncryptionSchemeNotSupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106454UL), "SharpMediaFoundation", "MF_E_WMDRMOTA_DRM_ENCRYPTION_SCHEME_NOT_SUPPORTED", "WindowsMediaDrmOutputTrustAuthorityDrmEncryptionSchemeNotSupported");
                ///<summary>Constant WindowsMediaDrmOutputTrustAuthorityActionMismatch</summary>
        ///<unmanaged>MF_E_WMDRMOTA_ACTION_MISMATCH</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor WindowsMediaDrmOutputTrustAuthorityActionMismatch = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106455UL), "SharpMediaFoundation", "MF_E_WMDRMOTA_ACTION_MISMATCH", "WindowsMediaDrmOutputTrustAuthorityActionMismatch");
                ///<summary>Constant WindowsMediaDrmOutputTrustAuthorityInvalidPolicy</summary>
        ///<unmanaged>MF_E_WMDRMOTA_INVALID_POLICY</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor WindowsMediaDrmOutputTrustAuthorityInvalidPolicy = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106456UL), "SharpMediaFoundation", "MF_E_WMDRMOTA_INVALID_POLICY", "WindowsMediaDrmOutputTrustAuthorityInvalidPolicy");
                ///<summary>Constant PolicyUnsupported</summary>
        ///<unmanaged>MF_E_POLICY_UNSUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PolicyUnsupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106457UL), "SharpMediaFoundation", "MF_E_POLICY_UNSUPPORTED", "PolicyUnsupported");
                ///<summary>Constant OplNotSupported</summary>
        ///<unmanaged>MF_E_OPL_NOT_SUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor OplNotSupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106458UL), "SharpMediaFoundation", "MF_E_OPL_NOT_SUPPORTED", "OplNotSupported");
                ///<summary>Constant TopologyVerificationFailed</summary>
        ///<unmanaged>MF_E_TOPOLOGY_VERIFICATION_FAILED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TopologyVerificationFailed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106459UL), "SharpMediaFoundation", "MF_E_TOPOLOGY_VERIFICATION_FAILED", "TopologyVerificationFailed");
                ///<summary>Constant SignatureVerificationFailed</summary>
        ///<unmanaged>MF_E_SIGNATURE_VERIFICATION_FAILED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor SignatureVerificationFailed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106460UL), "SharpMediaFoundation", "MF_E_SIGNATURE_VERIFICATION_FAILED", "SignatureVerificationFailed");
                ///<summary>Constant DebuggingNotAllowed</summary>
        ///<unmanaged>MF_E_DEBUGGING_NOT_ALLOWED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor DebuggingNotAllowed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106461UL), "SharpMediaFoundation", "MF_E_DEBUGGING_NOT_ALLOWED", "DebuggingNotAllowed");
                ///<summary>Constant CodeExpired</summary>
        ///<unmanaged>MF_E_CODE_EXPIRED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CodeExpired = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106462UL), "SharpMediaFoundation", "MF_E_CODE_EXPIRED", "CodeExpired");
                ///<summary>Constant GrlVersionTooLow</summary>
        ///<unmanaged>MF_E_GRL_VERSION_TOO_LOW</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor GrlVersionTooLow = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106463UL), "SharpMediaFoundation", "MF_E_GRL_VERSION_TOO_LOW", "GrlVersionTooLow");
                ///<summary>Constant GrlRenewalNotFound</summary>
        ///<unmanaged>MF_E_GRL_RENEWAL_NOT_FOUND</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor GrlRenewalNotFound = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106464UL), "SharpMediaFoundation", "MF_E_GRL_RENEWAL_NOT_FOUND", "GrlRenewalNotFound");
                ///<summary>Constant GrlExtensibleEntryNotFound</summary>
        ///<unmanaged>MF_E_GRL_EXTENSIBLE_ENTRY_NOT_FOUND</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor GrlExtensibleEntryNotFound = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106465UL), "SharpMediaFoundation", "MF_E_GRL_EXTENSIBLE_ENTRY_NOT_FOUND", "GrlExtensibleEntryNotFound");
                ///<summary>Constant KernelUntrusted</summary>
        ///<unmanaged>MF_E_KERNEL_UNTRUSTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor KernelUntrusted = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106466UL), "SharpMediaFoundation", "MF_E_KERNEL_UNTRUSTED", "KernelUntrusted");
                ///<summary>Constant PeAuthUntrusted</summary>
        ///<unmanaged>MF_E_PEAUTH_UNTRUSTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PeAuthUntrusted = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106467UL), "SharpMediaFoundation", "MF_E_PEAUTH_UNTRUSTED", "PeAuthUntrusted");
                ///<summary>Constant NonPeProcess</summary>
        ///<unmanaged>MF_E_NON_PE_PROCESS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NonPeProcess = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106469UL), "SharpMediaFoundation", "MF_E_NON_PE_PROCESS", "NonPeProcess");
                ///<summary>Constant RebootRequired</summary>
        ///<unmanaged>MF_E_REBOOT_REQUIRED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor RebootRequired = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106471UL), "SharpMediaFoundation", "MF_E_REBOOT_REQUIRED", "RebootRequired");
                ///<summary>Constant GrlInvalidFormat</summary>
        ///<unmanaged>MF_E_GRL_INVALID_FORMAT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor GrlInvalidFormat = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106474UL), "SharpMediaFoundation", "MF_E_GRL_INVALID_FORMAT", "GrlInvalidFormat");
                ///<summary>Constant GrlUnrecognizedFormat</summary>
        ///<unmanaged>MF_E_GRL_UNRECOGNIZED_FORMAT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor GrlUnrecognizedFormat = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106475UL), "SharpMediaFoundation", "MF_E_GRL_UNRECOGNIZED_FORMAT", "GrlUnrecognizedFormat");
                ///<summary>Constant AllProcessRestartRequired</summary>
        ///<unmanaged>MF_E_ALL_PROCESS_RESTART_REQUIRED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AllProcessRestartRequired = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106476UL), "SharpMediaFoundation", "MF_E_ALL_PROCESS_RESTART_REQUIRED", "AllProcessRestartRequired");
                ///<summary>Constant ProcessRestartRequired</summary>
        ///<unmanaged>MF_E_PROCESS_RESTART_REQUIRED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ProcessRestartRequired = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106477UL), "SharpMediaFoundation", "MF_E_PROCESS_RESTART_REQUIRED", "ProcessRestartRequired");
                ///<summary>Constant UserModeUntrusted</summary>
        ///<unmanaged>MF_E_USERMODE_UNTRUSTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UserModeUntrusted = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106478UL), "SharpMediaFoundation", "MF_E_USERMODE_UNTRUSTED", "UserModeUntrusted");
                ///<summary>Constant PeAuthSessionNotStarted</summary>
        ///<unmanaged>MF_E_PEAUTH_SESSION_NOT_STARTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PeAuthSessionNotStarted = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106479UL), "SharpMediaFoundation", "MF_E_PEAUTH_SESSION_NOT_STARTED", "PeAuthSessionNotStarted");
                ///<summary>Constant PeAuthPublickeyRevoked</summary>
        ///<unmanaged>MF_E_PEAUTH_PUBLICKEY_REVOKED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PeAuthPublickeyRevoked = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106481UL), "SharpMediaFoundation", "MF_E_PEAUTH_PUBLICKEY_REVOKED", "PeAuthPublickeyRevoked");
                ///<summary>Constant GrlAbsent</summary>
        ///<unmanaged>MF_E_GRL_ABSENT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor GrlAbsent = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106482UL), "SharpMediaFoundation", "MF_E_GRL_ABSENT", "GrlAbsent");
                ///<summary>Constant PeUntrusted</summary>
        ///<unmanaged>MF_E_PE_UNTRUSTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PeUntrusted = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106484UL), "SharpMediaFoundation", "MF_E_PE_UNTRUSTED", "PeUntrusted");
                ///<summary>Constant PeAuthNotStarted</summary>
        ///<unmanaged>MF_E_PEAUTH_NOT_STARTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PeAuthNotStarted = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106485UL), "SharpMediaFoundation", "MF_E_PEAUTH_NOT_STARTED", "PeAuthNotStarted");
                ///<summary>Constant IncompatibleSampleProtection</summary>
        ///<unmanaged>MF_E_INCOMPATIBLE_SAMPLE_PROTECTION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor IncompatibleSampleProtection = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106486UL), "SharpMediaFoundation", "MF_E_INCOMPATIBLE_SAMPLE_PROTECTION", "IncompatibleSampleProtection");
                ///<summary>Constant PeSessionsMaxed</summary>
        ///<unmanaged>MF_E_PE_SESSIONS_MAXED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PeSessionsMaxed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106487UL), "SharpMediaFoundation", "MF_E_PE_SESSIONS_MAXED", "PeSessionsMaxed");
                ///<summary>Constant HighSecurityLevelContentNotAllowed</summary>
        ///<unmanaged>MF_E_HIGH_SECURITY_LEVEL_CONTENT_NOT_ALLOWED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor HighSecurityLevelContentNotAllowed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106488UL), "SharpMediaFoundation", "MF_E_HIGH_SECURITY_LEVEL_CONTENT_NOT_ALLOWED", "HighSecurityLevelContentNotAllowed");
                ///<summary>Constant TestSignedComponentsNotAllowed</summary>
        ///<unmanaged>MF_E_TEST_SIGNED_COMPONENTS_NOT_ALLOWED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TestSignedComponentsNotAllowed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106489UL), "SharpMediaFoundation", "MF_E_TEST_SIGNED_COMPONENTS_NOT_ALLOWED", "TestSignedComponentsNotAllowed");
                ///<summary>Constant ItaUnsupportedAction</summary>
        ///<unmanaged>MF_E_ITA_UNSUPPORTED_ACTION</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ItaUnsupportedAction = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106490UL), "SharpMediaFoundation", "MF_E_ITA_UNSUPPORTED_ACTION", "ItaUnsupportedAction");
                ///<summary>Constant ItaErrorParsingSapParameters</summary>
        ///<unmanaged>MF_E_ITA_ERROR_PARSING_SAP_PARAMETERS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ItaErrorParsingSapParameters = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106491UL), "SharpMediaFoundation", "MF_E_ITA_ERROR_PARSING_SAP_PARAMETERS", "ItaErrorParsingSapParameters");
                ///<summary>Constant PolicyManagerActionOutOfBounds</summary>
        ///<unmanaged>MF_E_POLICY_MGR_ACTION_OUTOFBOUNDS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor PolicyManagerActionOutOfBounds = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106492UL), "SharpMediaFoundation", "MF_E_POLICY_MGR_ACTION_OUTOFBOUNDS", "PolicyManagerActionOutOfBounds");
                ///<summary>Constant BadOplStructureFormat</summary>
        ///<unmanaged>MF_E_BAD_OPL_STRUCTURE_FORMAT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor BadOplStructureFormat = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106493UL), "SharpMediaFoundation", "MF_E_BAD_OPL_STRUCTURE_FORMAT", "BadOplStructureFormat");
                ///<summary>Constant ItaUnrecognizedAnalogVideoProtectionGuid</summary>
        ///<unmanaged>MF_E_ITA_UNRECOGNIZED_ANALOG_VIDEO_PROTECTION_GUID</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ItaUnrecognizedAnalogVideoProtectionGuid = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106494UL), "SharpMediaFoundation", "MF_E_ITA_UNRECOGNIZED_ANALOG_VIDEO_PROTECTION_GUID", "ItaUnrecognizedAnalogVideoProtectionGuid");
                ///<summary>Constant NoPmpHost</summary>
        ///<unmanaged>MF_E_NO_PMP_HOST</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoPmpHost = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106495UL), "SharpMediaFoundation", "MF_E_NO_PMP_HOST", "NoPmpHost");
                ///<summary>Constant ItaOplDataNotInitialized</summary>
        ///<unmanaged>MF_E_ITA_OPL_DATA_NOT_INITIALIZED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ItaOplDataNotInitialized = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106496UL), "SharpMediaFoundation", "MF_E_ITA_OPL_DATA_NOT_INITIALIZED", "ItaOplDataNotInitialized");
                ///<summary>Constant ItaUnrecognizedAnalogVideoOutput</summary>
        ///<unmanaged>MF_E_ITA_UNRECOGNIZED_ANALOG_VIDEO_OUTPUT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ItaUnrecognizedAnalogVideoOutput = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106497UL), "SharpMediaFoundation", "MF_E_ITA_UNRECOGNIZED_ANALOG_VIDEO_OUTPUT", "ItaUnrecognizedAnalogVideoOutput");
                ///<summary>Constant ItaUnrecognizedDigitalVideoOutput</summary>
        ///<unmanaged>MF_E_ITA_UNRECOGNIZED_DIGITAL_VIDEO_OUTPUT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ItaUnrecognizedDigitalVideoOutput = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106498UL), "SharpMediaFoundation", "MF_E_ITA_UNRECOGNIZED_DIGITAL_VIDEO_OUTPUT", "ItaUnrecognizedDigitalVideoOutput");
                ///<summary>Constant ResolutionRequiresPmpCreationCallback</summary>
        ///<unmanaged>MF_E_RESOLUTION_REQUIRES_PMP_CREATION_CALLBACK</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ResolutionRequiresPmpCreationCallback = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106499UL), "SharpMediaFoundation", "MF_E_RESOLUTION_REQUIRES_PMP_CREATION_CALLBACK", "ResolutionRequiresPmpCreationCallback");
                ///<summary>Constant InvalidAkeChannelParameters</summary>
        ///<unmanaged>MF_E_INVALID_AKE_CHANNEL_PARAMETERS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidAkeChannelParameters = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106500UL), "SharpMediaFoundation", "MF_E_INVALID_AKE_CHANNEL_PARAMETERS", "InvalidAkeChannelParameters");
                ///<summary>Constant ContentProtectionSystemNotEnabled</summary>
        ///<unmanaged>MF_E_CONTENT_PROTECTION_SYSTEM_NOT_ENABLED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ContentProtectionSystemNotEnabled = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106501UL), "SharpMediaFoundation", "MF_E_CONTENT_PROTECTION_SYSTEM_NOT_ENABLED", "ContentProtectionSystemNotEnabled");
                ///<summary>Constant UnsupportedContentProtectionSystem</summary>
        ///<unmanaged>MF_E_UNSUPPORTED_CONTENT_PROTECTION_SYSTEM</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnsupportedContentProtectionSystem = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106502UL), "SharpMediaFoundation", "MF_E_UNSUPPORTED_CONTENT_PROTECTION_SYSTEM", "UnsupportedContentProtectionSystem");
                ///<summary>Constant DrmMigrationNotSupported</summary>
        ///<unmanaged>MF_E_DRM_MIGRATION_NOT_SUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor DrmMigrationNotSupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106503UL), "SharpMediaFoundation", "MF_E_DRM_MIGRATION_NOT_SUPPORTED", "DrmMigrationNotSupported");
                ///<summary>Constant HdcpAuthenticationFailure</summary>
        ///<unmanaged>MF_E_HDCP_AUTHENTICATION_FAILURE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor HdcpAuthenticationFailure = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106504UL), "SharpMediaFoundation", "MF_E_HDCP_AUTHENTICATION_FAILURE", "HdcpAuthenticationFailure");
                ///<summary>Constant HdcpLinkFailure</summary>
        ///<unmanaged>MF_E_HDCP_LINK_FAILURE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor HdcpLinkFailure = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222106505UL), "SharpMediaFoundation", "MF_E_HDCP_LINK_FAILURE", "HdcpLinkFailure");
                ///<summary>Constant ClockInvalidContinuityKey</summary>
        ///<unmanaged>MF_E_CLOCK_INVALID_CONTINUITY_KEY</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ClockInvalidContinuityKey = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222117440UL), "SharpMediaFoundation", "MF_E_CLOCK_INVALID_CONTINUITY_KEY", "ClockInvalidContinuityKey");
                ///<summary>Constant ClockNoTimeSource</summary>
        ///<unmanaged>MF_E_CLOCK_NO_TIME_SOURCE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ClockNoTimeSource = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222117441UL), "SharpMediaFoundation", "MF_E_CLOCK_NO_TIME_SOURCE", "ClockNoTimeSource");
                ///<summary>Constant ClockStateAlreadySet</summary>
        ///<unmanaged>MF_E_CLOCK_STATE_ALREADY_SET</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ClockStateAlreadySet = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222117442UL), "SharpMediaFoundation", "MF_E_CLOCK_STATE_ALREADY_SET", "ClockStateAlreadySet");
                ///<summary>Constant ClockNotSimple</summary>
        ///<unmanaged>MF_E_CLOCK_NOT_SIMPLE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ClockNotSimple = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222117443UL), "SharpMediaFoundation", "MF_E_CLOCK_NOT_SIMPLE", "ClockNotSimple");
                ///<summary>Constant ClockAudioDevicePositionUnexpected</summary>
        ///<unmanaged>MF_E_CLOCK_AUDIO_DEVICE_POSITION_UNEXPECTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ClockAudioDevicePositionUnexpected = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)891973L), "SharpMediaFoundation", "MF_E_CLOCK_AUDIO_DEVICE_POSITION_UNEXPECTED", "ClockAudioDevicePositionUnexpected");
                ///<summary>Constant ClockAudioRenderPositionUnexpected</summary>
        ///<unmanaged>MF_E_CLOCK_AUDIO_RENDER_POSITION_UNEXPECTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ClockAudioRenderPositionUnexpected = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)891974L), "SharpMediaFoundation", "MF_E_CLOCK_AUDIO_RENDER_POSITION_UNEXPECTED", "ClockAudioRenderPositionUnexpected");
                ///<summary>Constant ClockAudioRenderTimeUnexpected</summary>
        ///<unmanaged>MF_E_CLOCK_AUDIO_RENDER_TIME_UNEXPECTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor ClockAudioRenderTimeUnexpected = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)891975L), "SharpMediaFoundation", "MF_E_CLOCK_AUDIO_RENDER_TIME_UNEXPECTED", "ClockAudioRenderTimeUnexpected");
                ///<summary>Constant NoMoreDropModes</summary>
        ///<unmanaged>MF_E_NO_MORE_DROP_MODES</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoMoreDropModes = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222118440UL), "SharpMediaFoundation", "MF_E_NO_MORE_DROP_MODES", "NoMoreDropModes");
                ///<summary>Constant NoMoreQualityLevels</summary>
        ///<unmanaged>MF_E_NO_MORE_QUALITY_LEVELS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoMoreQualityLevels = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222118441UL), "SharpMediaFoundation", "MF_E_NO_MORE_QUALITY_LEVELS", "NoMoreQualityLevels");
                ///<summary>Constant DroptimeNotSupported</summary>
        ///<unmanaged>MF_E_DROPTIME_NOT_SUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor DroptimeNotSupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222118442UL), "SharpMediaFoundation", "MF_E_DROPTIME_NOT_SUPPORTED", "DroptimeNotSupported");
                ///<summary>Constant QualityKnobWaitLonger</summary>
        ///<unmanaged>MF_E_QUALITYKNOB_WAIT_LONGER</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor QualityKnobWaitLonger = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222118443UL), "SharpMediaFoundation", "MF_E_QUALITYKNOB_WAIT_LONGER", "QualityKnobWaitLonger");
                ///<summary>Constant QmInvalidState</summary>
        ///<unmanaged>MF_E_QM_INVALIDSTATE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor QmInvalidState = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222118444UL), "SharpMediaFoundation", "MF_E_QM_INVALIDSTATE", "QmInvalidState");
                ///<summary>Constant TranscodeNoContainerType</summary>
        ///<unmanaged>MF_E_TRANSCODE_NO_CONTAINERTYPE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TranscodeNoContainerType = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222119440UL), "SharpMediaFoundation", "MF_E_TRANSCODE_NO_CONTAINERTYPE", "TranscodeNoContainerType");
                ///<summary>Constant TranscodeProfileNoMatchingStreams</summary>
        ///<unmanaged>MF_E_TRANSCODE_PROFILE_NO_MATCHING_STREAMS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TranscodeProfileNoMatchingStreams = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222119441UL), "SharpMediaFoundation", "MF_E_TRANSCODE_PROFILE_NO_MATCHING_STREAMS", "TranscodeProfileNoMatchingStreams");
                ///<summary>Constant TranscodeNoMatchingEncoder</summary>
        ///<unmanaged>MF_E_TRANSCODE_NO_MATCHING_ENCODER</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TranscodeNoMatchingEncoder = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222119442UL), "SharpMediaFoundation", "MF_E_TRANSCODE_NO_MATCHING_ENCODER", "TranscodeNoMatchingEncoder");
                ///<summary>Constant TranscodeInvalidProfile</summary>
        ///<unmanaged>MF_E_TRANSCODE_INVALID_PROFILE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TranscodeInvalidProfile = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222119443UL), "SharpMediaFoundation", "MF_E_TRANSCODE_INVALID_PROFILE", "TranscodeInvalidProfile");
                ///<summary>Constant AllocatorNotInitialized</summary>
        ///<unmanaged>MF_E_ALLOCATOR_NOT_INITIALIZED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AllocatorNotInitialized = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222120440UL), "SharpMediaFoundation", "MF_E_ALLOCATOR_NOT_INITIALIZED", "AllocatorNotInitialized");
                ///<summary>Constant AllocatorNotCommited</summary>
        ///<unmanaged>MF_E_ALLOCATOR_NOT_COMMITED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AllocatorNotCommited = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222120441UL), "SharpMediaFoundation", "MF_E_ALLOCATOR_NOT_COMMITED", "AllocatorNotCommited");
                ///<summary>Constant AllocatorAlreadyCommited</summary>
        ///<unmanaged>MF_E_ALLOCATOR_ALREADY_COMMITED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor AllocatorAlreadyCommited = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222120442UL), "SharpMediaFoundation", "MF_E_ALLOCATOR_ALREADY_COMMITED", "AllocatorAlreadyCommited");
                ///<summary>Constant StreamError</summary>
        ///<unmanaged>MF_E_STREAM_ERROR</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor StreamError = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222120443UL), "SharpMediaFoundation", "MF_E_STREAM_ERROR", "StreamError");
                ///<summary>Constant InvalidStreamState</summary>
        ///<unmanaged>MF_E_INVALID_STREAM_STATE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor InvalidStreamState = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222120444UL), "SharpMediaFoundation", "MF_E_INVALID_STREAM_STATE", "InvalidStreamState");
                ///<summary>Constant HwStreamNotConnected</summary>
        ///<unmanaged>MF_E_HW_STREAM_NOT_CONNECTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor HwStreamNotConnected = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222120445UL), "SharpMediaFoundation", "MF_E_HW_STREAM_NOT_CONNECTED", "HwStreamNotConnected");
                ///<summary>Constant NoCaptureDevicesAvailable</summary>
        ///<unmanaged>MF_E_NO_CAPTURE_DEVICES_AVAILABLE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor NoCaptureDevicesAvailable = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222121440UL), "SharpMediaFoundation", "MF_E_NO_CAPTURE_DEVICES_AVAILABLE", "NoCaptureDevicesAvailable");
                ///<summary>Constant CaptureSinkOutputNotSet</summary>
        ///<unmanaged>MF_E_CAPTURE_SINK_OUTPUT_NOT_SET</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CaptureSinkOutputNotSet = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222121441UL), "SharpMediaFoundation", "MF_E_CAPTURE_SINK_OUTPUT_NOT_SET", "CaptureSinkOutputNotSet");
                ///<summary>Constant CaptureSinkMirrorError</summary>
        ///<unmanaged>MF_E_CAPTURE_SINK_MIRROR_ERROR</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CaptureSinkMirrorError = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222121442UL), "SharpMediaFoundation", "MF_E_CAPTURE_SINK_MIRROR_ERROR", "CaptureSinkMirrorError");
                ///<summary>Constant CaptureSinkRotateError</summary>
        ///<unmanaged>MF_E_CAPTURE_SINK_ROTATE_ERROR</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CaptureSinkRotateError = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222121443UL), "SharpMediaFoundation", "MF_E_CAPTURE_SINK_ROTATE_ERROR", "CaptureSinkRotateError");
                ///<summary>Constant CaptureEngineInvalidOp</summary>
        ///<unmanaged>MF_E_CAPTURE_ENGINE_INVALID_OP</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CaptureEngineInvalidOp = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222121444UL), "SharpMediaFoundation", "MF_E_CAPTURE_ENGINE_INVALID_OP", "CaptureEngineInvalidOp");
                ///<summary>Constant CaptureEngineAllEffectsRemoved</summary>
        ///<unmanaged>MF_E_CAPTURE_ENGINE_ALL_EFFECTS_REMOVED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CaptureEngineAllEffectsRemoved = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222121445UL), "SharpMediaFoundation", "MF_E_CAPTURE_ENGINE_ALL_EFFECTS_REMOVED", "CaptureEngineAllEffectsRemoved");
                ///<summary>Constant CaptureSourceNoIndependentPhotoStreamPresent</summary>
        ///<unmanaged>MF_E_CAPTURE_SOURCE_NO_INDEPENDENT_PHOTO_STREAM_PRESENT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CaptureSourceNoIndependentPhotoStreamPresent = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222121446UL), "SharpMediaFoundation", "MF_E_CAPTURE_SOURCE_NO_INDEPENDENT_PHOTO_STREAM_PRESENT", "CaptureSourceNoIndependentPhotoStreamPresent");
                ///<summary>Constant CaptureSourceNoVideoStreamPresent</summary>
        ///<unmanaged>MF_E_CAPTURE_SOURCE_NO_VIDEO_STREAM_PRESENT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CaptureSourceNoVideoStreamPresent = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222121447UL), "SharpMediaFoundation", "MF_E_CAPTURE_SOURCE_NO_VIDEO_STREAM_PRESENT", "CaptureSourceNoVideoStreamPresent");
                ///<summary>Constant CaptureSourceNoAudioStreamPresent</summary>
        ///<unmanaged>MF_E_CAPTURE_SOURCE_NO_AUDIO_STREAM_PRESENT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CaptureSourceNoAudioStreamPresent = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222121448UL), "SharpMediaFoundation", "MF_E_CAPTURE_SOURCE_NO_AUDIO_STREAM_PRESENT", "CaptureSourceNoAudioStreamPresent");
                ///<summary>Constant CaptureSourceDeviceExtendedPropOpInProgress</summary>
        ///<unmanaged>MF_E_CAPTURE_SOURCE_DEVICE_EXTENDEDPROP_OP_IN_PROGRESS</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CaptureSourceDeviceExtendedPropOpInProgress = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222121449UL), "SharpMediaFoundation", "MF_E_CAPTURE_SOURCE_DEVICE_EXTENDEDPROP_OP_IN_PROGRESS", "CaptureSourceDeviceExtendedPropOpInProgress");
                ///<summary>Constant CapturePropertySetDuringPhoto</summary>
        ///<unmanaged>MF_E_CAPTURE_PROPERTY_SET_DURING_PHOTO</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CapturePropertySetDuringPhoto = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222121450UL), "SharpMediaFoundation", "MF_E_CAPTURE_PROPERTY_SET_DURING_PHOTO", "CapturePropertySetDuringPhoto");
                ///<summary>Constant CaptureNoSamplesInQueue</summary>
        ///<unmanaged>MF_E_CAPTURE_NO_SAMPLES_IN_QUEUE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor CaptureNoSamplesInQueue = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222121451UL), "SharpMediaFoundation", "MF_E_CAPTURE_NO_SAMPLES_IN_QUEUE", "CaptureNoSamplesInQueue");
                ///<summary>Constant HwAcceleratedThumbnailNotSupported</summary>
        ///<unmanaged>MF_E_HW_ACCELERATED_THUMBNAIL_NOT_SUPPORTED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor HwAcceleratedThumbnailNotSupported = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222121452UL), "SharpMediaFoundation", "MF_E_HW_ACCELERATED_THUMBNAIL_NOT_SUPPORTED", "HwAcceleratedThumbnailNotSupported");
                ///<summary>Constant UnsupportedCaptureDevicePresent</summary>
        ///<unmanaged>MF_E_UNSUPPORTED_CAPTURE_DEVICE_PRESENT</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor UnsupportedCaptureDevicePresent = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222121453UL), "SharpMediaFoundation", "MF_E_UNSUPPORTED_CAPTURE_DEVICE_PRESENT", "UnsupportedCaptureDevicePresent");
                ///<summary>Constant TimelineControllerUnsupportedSourceType</summary>
        ///<unmanaged>MF_E_TIMELINECONTROLLER_UNSUPPORTED_SOURCE_TYPE</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TimelineControllerUnsupportedSourceType = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222122440UL), "SharpMediaFoundation", "MF_E_TIMELINECONTROLLER_UNSUPPORTED_SOURCE_TYPE", "TimelineControllerUnsupportedSourceType");
                ///<summary>Constant TimelineControllerNotAllowed</summary>
        ///<unmanaged>MF_E_TIMELINECONTROLLER_NOT_ALLOWED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TimelineControllerNotAllowed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222122441UL), "SharpMediaFoundation", "MF_E_TIMELINECONTROLLER_NOT_ALLOWED", "TimelineControllerNotAllowed");
                ///<summary>Constant TimelineControllerCannotAttach</summary>
        ///<unmanaged>MF_E_TIMELINECONTROLLER_CANNOT_ATTACH</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor TimelineControllerCannotAttach = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222122442UL), "SharpMediaFoundation", "MF_E_TIMELINECONTROLLER_CANNOT_ATTACH", "TimelineControllerCannotAttach");
                ///<summary>Constant MediaExtensionAppServiceConnectionFailed</summary>
        ///<unmanaged>MF_E_MEDIA_EXTENSION_APPSERVICE_CONNECTION_FAILED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor MediaExtensionAppServiceConnectionFailed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222123440UL), "SharpMediaFoundation", "MF_E_MEDIA_EXTENSION_APPSERVICE_CONNECTION_FAILED", "MediaExtensionAppServiceConnectionFailed");
                ///<summary>Constant MediaExtensionAppServiceRequestFailed</summary>
        ///<unmanaged>MF_E_MEDIA_EXTENSION_APPSERVICE_REQUEST_FAILED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor MediaExtensionAppServiceRequestFailed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222123441UL), "SharpMediaFoundation", "MF_E_MEDIA_EXTENSION_APPSERVICE_REQUEST_FAILED", "MediaExtensionAppServiceRequestFailed");
                ///<summary>Constant MediaExtensionPackageIntegrityCheckFailed</summary>
        ///<unmanaged>MF_E_MEDIA_EXTENSION_PACKAGE_INTEGRITY_CHECK_FAILED</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor MediaExtensionPackageIntegrityCheckFailed = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222123442UL), "SharpMediaFoundation", "MF_E_MEDIA_EXTENSION_PACKAGE_INTEGRITY_CHECK_FAILED", "MediaExtensionPackageIntegrityCheckFailed");
                ///<summary>Constant MediaExtensionPackageLicenseInvalid</summary>
        ///<unmanaged>MF_E_MEDIA_EXTENSION_PACKAGE_LICENSE_INVALID</unmanaged>
        public static readonly SharpGen.Runtime.ResultDescriptor MediaExtensionPackageLicenseInvalid = new SharpGen.Runtime.ResultDescriptor(unchecked ((int)3222123443UL), "SharpMediaFoundation", "MF_E_MEDIA_EXTENSION_PACKAGE_LICENSE_INVALID", "MediaExtensionPackageLicenseInvalid");
    }
}